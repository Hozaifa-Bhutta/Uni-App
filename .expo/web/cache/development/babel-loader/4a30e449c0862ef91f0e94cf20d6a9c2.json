{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _logkitty() {\n  var data = require(\"logkitty\");\n\n  _logkitty = function _logkitty() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction logAndroid() {\n  var emitter;\n  return _regeneratorRuntime.async(function logAndroid$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _cliTools().logger.info('Starting logkitty');\n\n          emitter = (0, _logkitty().logkitty)({\n            platform: 'android',\n            priority: _logkitty().AndroidPriority.VERBOSE,\n            filter: (0, _logkitty().makeTagsFilter)('ReactNative', 'ReactNativeJS')\n          });\n          emitter.on('entry', function (entry) {\n            _cliTools().logger.log((0, _logkitty().formatEntry)(entry));\n          });\n          emitter.on('error', function (error) {\n            _cliTools().logger.log((0, _logkitty().formatError)(error));\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar _default = {\n  name: 'log-android',\n  description: 'starts logkitty',\n  func: logAndroid\n};\nexports.default = _default;","map":{"version":3,"sources":["../../../src/commands/logAndroid/index.ts"],"names":["logger","emitter","platform","priority","AndroidPriority","filter","entry","error","name","description","func","logAndroid"],"mappings":";;;;;;;;;AAOA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AAOA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AAEA,SAAA,UAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UACEA,SAAAA,GAAAA,MAAAA,CAAAA,IAAAA,CAAAA,mBAAAA;;UAEMC,OAHR,GAGkB,CAAA,GAAA,SAAA,GAAA,QAAA,EAAS;YACvBC,QAAQ,EADe,SAAA;YAEvBC,QAAQ,EAAEC,SAAAA,GAAAA,eAAAA,CAFa,OAAA;YAGvBC,MAAM,EAAE,CAAA,GAAA,SAAA,GAAA,cAAA,EAAA,aAAA,EAAA,eAAA;UAHe,CAAT,CAHlB;UASEJ,OAAO,CAAPA,EAAAA,CAAAA,OAAAA,EAAqBK,UAAAA,KAAD,EAAW;YAC7BN,SAAAA,GAAAA,MAAAA,CAAAA,GAAAA,CAAW,CAAA,GAAA,SAAA,GAAA,WAAA,EAAXA,KAAW,CAAXA;UADFC,CAAAA;UAIAA,OAAO,CAAPA,EAAAA,CAAAA,OAAAA,EAAqBM,UAAAA,KAAD,EAAW;YAC7BP,SAAAA,GAAAA,MAAAA,CAAAA,GAAAA,CAAW,CAAA,GAAA,SAAA,GAAA,WAAA,EAAXA,KAAW,CAAXA;UADFC,CAAAA;;QAbF;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;eAkBe;EACbO,IAAI,EADS,aAAA;EAEbC,WAAW,EAFE,iBAAA;EAGbC,IAAI,EAAEC;AAHO,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  logkitty,\n  makeTagsFilter,\n  formatEntry,\n  formatError,\n  AndroidPriority,\n} from 'logkitty';\nimport {logger} from '@react-native-community/cli-tools';\n\nasync function logAndroid() {\n  logger.info('Starting logkitty');\n\n  const emitter = logkitty({\n    platform: 'android',\n    priority: AndroidPriority.VERBOSE,\n    filter: makeTagsFilter('ReactNative', 'ReactNativeJS'),\n  });\n\n  emitter.on('entry', (entry) => {\n    logger.log(formatEntry(entry));\n  });\n\n  emitter.on('error', (error) => {\n    logger.log(formatError(error));\n  });\n}\n\nexport default {\n  name: 'log-android',\n  description: 'starts logkitty',\n  func: logAndroid,\n};\n"]},"metadata":{},"sourceType":"script"}