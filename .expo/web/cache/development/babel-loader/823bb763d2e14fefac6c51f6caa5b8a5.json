{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar accepts = require(\"accepts\");\n\nvar CRLF = \"\\r\\n\";\nvar BOUNDARY = \"3beqjf3apnqeu3h5jqorms4i\";\n\nvar MultipartResponse = function () {\n  function MultipartResponse(res) {\n    _classCallCheck(this, MultipartResponse);\n\n    this.res = res;\n    this.headers = {};\n    res.writeHead(200, {\n      \"Content-Type\": \"multipart/mixed; boundary=\\\"\" + BOUNDARY + \"\\\"\"\n    });\n    res.write(\"If you are seeing this, your client does not support multipart response\");\n  }\n\n  _createClass(MultipartResponse, [{\n    key: \"writeChunk\",\n    value: function writeChunk(headers, data) {\n      var isLast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (this.res.finished) {\n        return;\n      }\n\n      this.res.write(CRLF + \"--\" + BOUNDARY + CRLF);\n\n      if (headers) {\n        this.res.write(MultipartResponse.serializeHeaders(headers) + CRLF + CRLF);\n      }\n\n      if (data) {\n        this.res.write(data);\n      }\n\n      if (isLast) {\n        this.res.write(CRLF + \"--\" + BOUNDARY + \"--\" + CRLF);\n      }\n    }\n  }, {\n    key: \"writeHead\",\n    value: function writeHead(status, headers) {\n      this.setHeader(\"X-Http-Status\", status);\n\n      if (!headers) {\n        return;\n      }\n\n      for (var key in headers) {\n        this.setHeader(key, headers[key]);\n      }\n    }\n  }, {\n    key: \"setHeader\",\n    value: function setHeader(name, value) {\n      this.headers[name] = value;\n    }\n  }, {\n    key: \"end\",\n    value: function end(data) {\n      this.writeChunk(this.headers, data, true);\n      this.res.end();\n    }\n  }], [{\n    key: \"wrap\",\n    value: function wrap(req, res) {\n      if (accepts(req).types().includes(\"multipart/mixed\")) {\n        return new MultipartResponse(res);\n      }\n\n      res.writeChunk = function () {};\n\n      return res;\n    }\n  }, {\n    key: \"serializeHeaders\",\n    value: function serializeHeaders(headers) {\n      return Object.keys(headers).map(function (key) {\n        return key + \": \" + headers[key];\n      }).join(CRLF);\n    }\n  }]);\n\n  return MultipartResponse;\n}();\n\nmodule.exports = MultipartResponse;","map":{"version":3,"names":["accepts","require","CRLF","BOUNDARY","MultipartResponse","res","headers","writeHead","write","data","isLast","finished","serializeHeaders","status","setHeader","key","name","value","writeChunk","end","req","types","includes","Object","keys","map","join","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/Server/MultipartResponse.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\"use strict\";\n\nconst accepts = require(\"accepts\");\n\nconst CRLF = \"\\r\\n\";\nconst BOUNDARY = \"3beqjf3apnqeu3h5jqorms4i\";\n\nclass MultipartResponse {\n  static wrap(req, res) {\n    if (accepts(req).types().includes(\"multipart/mixed\")) {\n      return new MultipartResponse(res);\n    } // Ugly hack, ideally wrap function should always return a proxy\n    // object with the same interface\n\n    res.writeChunk = () => {}; // noop\n\n    return res;\n  }\n\n  constructor(res) {\n    this.res = res;\n    this.headers = {};\n    res.writeHead(200, {\n      \"Content-Type\": `multipart/mixed; boundary=\"${BOUNDARY}\"`,\n    });\n    res.write(\n      \"If you are seeing this, your client does not support multipart response\"\n    );\n  }\n\n  writeChunk(headers, data, isLast = false) {\n    if (this.res.finished) {\n      return;\n    }\n\n    this.res.write(`${CRLF}--${BOUNDARY}${CRLF}`);\n\n    if (headers) {\n      this.res.write(MultipartResponse.serializeHeaders(headers) + CRLF + CRLF);\n    }\n\n    if (data) {\n      this.res.write(data);\n    }\n\n    if (isLast) {\n      this.res.write(`${CRLF}--${BOUNDARY}--${CRLF}`);\n    }\n  }\n\n  writeHead(status, headers) {\n    // We can't actually change the response HTTP status code\n    // because the headers have already been sent\n    this.setHeader(\"X-Http-Status\", status);\n\n    if (!headers) {\n      return;\n    }\n\n    for (const key in headers) {\n      this.setHeader(key, headers[key]);\n    }\n  }\n\n  setHeader(name, value) {\n    this.headers[name] = value;\n  }\n\n  end(data) {\n    this.writeChunk(this.headers, data, true);\n    this.res.end();\n  }\n\n  static serializeHeaders(headers) {\n    return Object.keys(headers)\n      .map((key) => `${key}: ${headers[key]}`)\n      .join(CRLF);\n  }\n}\n\nmodule.exports = MultipartResponse;\n"],"mappings":"AAQA;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,QAAQ,GAAG,0BAAjB;;IAEMC,iB;EAYJ,2BAAYC,GAAZ,EAAiB;IAAA;;IACf,KAAKA,GAAL,GAAWA,GAAX;IACA,KAAKC,OAAL,GAAe,EAAf;IACAD,GAAG,CAACE,SAAJ,CAAc,GAAd,EAAmB;MACjB,iDAA8CJ,QAA9C;IADiB,CAAnB;IAGAE,GAAG,CAACG,KAAJ,CACE,yEADF;EAGD;;;;WAED,oBAAWF,OAAX,EAAoBG,IAApB,EAA0C;MAAA,IAAhBC,MAAgB,uEAAP,KAAO;;MACxC,IAAI,KAAKL,GAAL,CAASM,QAAb,EAAuB;QACrB;MACD;;MAED,KAAKN,GAAL,CAASG,KAAT,CAAkBN,IAAlB,UAA2BC,QAA3B,GAAsCD,IAAtC;;MAEA,IAAII,OAAJ,EAAa;QACX,KAAKD,GAAL,CAASG,KAAT,CAAeJ,iBAAiB,CAACQ,gBAAlB,CAAmCN,OAAnC,IAA8CJ,IAA9C,GAAqDA,IAApE;MACD;;MAED,IAAIO,IAAJ,EAAU;QACR,KAAKJ,GAAL,CAASG,KAAT,CAAeC,IAAf;MACD;;MAED,IAAIC,MAAJ,EAAY;QACV,KAAKL,GAAL,CAASG,KAAT,CAAkBN,IAAlB,UAA2BC,QAA3B,UAAwCD,IAAxC;MACD;IACF;;;WAED,mBAAUW,MAAV,EAAkBP,OAAlB,EAA2B;MAGzB,KAAKQ,SAAL,CAAe,eAAf,EAAgCD,MAAhC;;MAEA,IAAI,CAACP,OAAL,EAAc;QACZ;MACD;;MAED,KAAK,IAAMS,GAAX,IAAkBT,OAAlB,EAA2B;QACzB,KAAKQ,SAAL,CAAeC,GAAf,EAAoBT,OAAO,CAACS,GAAD,CAA3B;MACD;IACF;;;WAED,mBAAUC,IAAV,EAAgBC,KAAhB,EAAuB;MACrB,KAAKX,OAAL,CAAaU,IAAb,IAAqBC,KAArB;IACD;;;WAED,aAAIR,IAAJ,EAAU;MACR,KAAKS,UAAL,CAAgB,KAAKZ,OAArB,EAA8BG,IAA9B,EAAoC,IAApC;MACA,KAAKJ,GAAL,CAASc,GAAT;IACD;;;WA/DD,cAAYC,GAAZ,EAAiBf,GAAjB,EAAsB;MACpB,IAAIL,OAAO,CAACoB,GAAD,CAAP,CAAaC,KAAb,GAAqBC,QAArB,CAA8B,iBAA9B,CAAJ,EAAsD;QACpD,OAAO,IAAIlB,iBAAJ,CAAsBC,GAAtB,CAAP;MACD;;MAGDA,GAAG,CAACa,UAAJ,GAAiB,YAAM,CAAE,CAAzB;;MAEA,OAAOb,GAAP;IACD;;;WAwDD,0BAAwBC,OAAxB,EAAiC;MAC/B,OAAOiB,MAAM,CAACC,IAAP,CAAYlB,OAAZ,EACJmB,GADI,CACA,UAACV,GAAD;QAAA,OAAYA,GAAZ,UAAoBT,OAAO,CAACS,GAAD,CAA3B;MAAA,CADA,EAEJW,IAFI,CAECxB,IAFD,CAAP;IAGD;;;;;;AAGHyB,MAAM,CAACC,OAAP,GAAiBxB,iBAAjB"},"metadata":{},"sourceType":"script"}