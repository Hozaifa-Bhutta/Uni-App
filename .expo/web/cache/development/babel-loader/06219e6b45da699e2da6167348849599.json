{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _require = require(\"@babel/code-frame\"),\n    codeFrameColumns = _require.codeFrameColumns;\n\nvar fs = require(\"fs\");\n\nvar invariant = require(\"invariant\");\n\nvar Resolver = require(\"metro-resolver\");\n\nvar path = require(\"path\");\n\nvar util = require(\"util\");\n\nvar ModuleResolver = function () {\n  function ModuleResolver(options) {\n    var _this = this;\n\n    _classCallCheck(this, ModuleResolver);\n\n    this._getPackageMainPath = function (packageJsonPath) {\n      var package_ = _this._options.moduleCache.getPackage(packageJsonPath);\n\n      return package_.getMain(_this._options.mainFields);\n    };\n\n    this._options = options;\n    var _this$_options = this._options,\n        projectRoot = _this$_options.projectRoot,\n        moduleCache = _this$_options.moduleCache;\n    this._projectRootFakeModule = {\n      path: path.join(projectRoot, \"_\"),\n      getPackage: function getPackage() {\n        return moduleCache.getPackageOf(_this._projectRootFakeModule.path);\n      },\n      isHaste: function isHaste() {\n        throw new Error(\"not implemented\");\n      },\n      getName: function getName() {\n        throw new Error(\"not implemented\");\n      }\n    };\n  }\n\n  _createClass(ModuleResolver, [{\n    key: \"_getEmptyModule\",\n    value: function _getEmptyModule() {\n      var emptyModule = this._cachedEmptyModule;\n\n      if (!emptyModule) {\n        emptyModule = this.resolveDependency(this._projectRootFakeModule, this._options.emptyModulePath, false, null);\n        this._cachedEmptyModule = emptyModule;\n      }\n\n      return emptyModule;\n    }\n  }, {\n    key: \"_redirectRequire\",\n    value: function _redirectRequire(fromModule, modulePath) {\n      var moduleCache = this._options.moduleCache;\n\n      try {\n        if (modulePath.startsWith(\".\")) {\n          var fromPackage = fromModule.getPackage();\n\n          if (fromPackage) {\n            var fromPackagePath = \"./\" + path.relative(path.dirname(fromPackage.path), path.resolve(path.dirname(fromModule.path), modulePath));\n            var redirectedPath = fromPackage.redirectRequire(fromPackagePath, this._options.mainFields);\n\n            if (redirectedPath !== false) {\n              redirectedPath = \"./\" + path.relative(path.dirname(fromModule.path), path.resolve(path.dirname(fromPackage.path), redirectedPath));\n            }\n\n            return redirectedPath;\n          }\n        } else {\n          var pck = path.isAbsolute(modulePath) ? moduleCache.getPackageOf(modulePath) : fromModule.getPackage();\n\n          if (pck) {\n            return pck.redirectRequire(modulePath, this._options.mainFields);\n          }\n        }\n      } catch (err) {}\n\n      return modulePath;\n    }\n  }, {\n    key: \"resolveDependency\",\n    value: function resolveDependency(fromModule, moduleName, allowHaste, platform) {\n      var _this2 = this;\n\n      try {\n        var result = Resolver.resolve(_objectSpread(_objectSpread({}, this._options), {}, {\n          originModulePath: fromModule.path,\n          redirectModulePath: function redirectModulePath(modulePath) {\n            return _this2._redirectRequire(fromModule, modulePath);\n          },\n          allowHaste: allowHaste,\n          platform: platform,\n          resolveHasteModule: function resolveHasteModule(name) {\n            return _this2._options.moduleMap.getModule(name, platform, true);\n          },\n          resolveHastePackage: function resolveHastePackage(name) {\n            return _this2._options.moduleMap.getPackage(name, platform, true);\n          },\n          getPackageMainPath: this._getPackageMainPath\n        }), moduleName, platform);\n        return this._getFileResolvedModule(result);\n      } catch (error) {\n        if (error instanceof Resolver.FailedToResolvePathError) {\n          var candidates = error.candidates;\n          throw new UnableToResolveError(fromModule.path, moduleName, [\"\\n\\nNone of these files exist:\", \"  * \" + Resolver.formatFileCandidates(this._removeRoot(candidates.file)), \"  * \" + Resolver.formatFileCandidates(this._removeRoot(candidates.dir))].join(\"\\n\"));\n        }\n\n        if (error instanceof Resolver.FailedToResolveNameError) {\n          var dirPaths = error.dirPaths,\n              extraPaths = error.extraPaths;\n          var displayDirPaths = dirPaths.filter(function (dirPath) {\n            return _this2._options.dirExists(dirPath);\n          }).map(function (dirPath) {\n            return path.relative(_this2._options.projectRoot, dirPath);\n          }).concat(extraPaths);\n          var hint = displayDirPaths.length ? \" or in these directories:\" : \"\";\n          throw new UnableToResolveError(fromModule.path, moduleName, [moduleName + \" could not be found within the project\" + (hint || \".\")].concat(_toConsumableArray(displayDirPaths.map(function (dirPath) {\n            return \"  \" + dirPath;\n          }))).join(\"\\n\"));\n        }\n\n        throw error;\n      }\n    }\n  }, {\n    key: \"_getFileResolvedModule\",\n    value: function _getFileResolvedModule(resolution) {\n      switch (resolution.type) {\n        case \"sourceFile\":\n          return this._options.moduleCache.getModule(resolution.filePath);\n\n        case \"assetFiles\":\n          var arbitrary = getArrayLowestItem(resolution.filePaths);\n          invariant(arbitrary != null, \"invalid asset resolution\");\n          return this._options.moduleCache.getModule(arbitrary);\n\n        case \"empty\":\n          return this._getEmptyModule();\n\n        default:\n          resolution.type;\n          throw new Error(\"invalid type\");\n      }\n    }\n  }, {\n    key: \"_removeRoot\",\n    value: function _removeRoot(candidates) {\n      if (candidates.filePathPrefix) {\n        candidates.filePathPrefix = path.relative(this._options.projectRoot, candidates.filePathPrefix);\n      }\n\n      return candidates;\n    }\n  }]);\n\n  return ModuleResolver;\n}();\n\nfunction getArrayLowestItem(a) {\n  if (a.length === 0) {\n    return undefined;\n  }\n\n  var lowest = a[0];\n\n  for (var i = 1; i < a.length; ++i) {\n    if (a[i] < lowest) {\n      lowest = a[i];\n    }\n  }\n\n  return lowest;\n}\n\nvar UnableToResolveError = function (_Error) {\n  _inherits(UnableToResolveError, _Error);\n\n  var _super = _createSuper(UnableToResolveError);\n\n  function UnableToResolveError(originModulePath, targetModuleName, message) {\n    var _this3;\n\n    _classCallCheck(this, UnableToResolveError);\n\n    _this3 = _super.call(this);\n    _this3.originModulePath = originModulePath;\n    _this3.targetModuleName = targetModuleName;\n\n    var codeFrameMessage = _this3.buildCodeFrameMessage();\n\n    _this3.message = util.format(\"Unable to resolve module %s from %s: %s\", targetModuleName, originModulePath, message) + (codeFrameMessage ? \"\\n\" + codeFrameMessage : \"\");\n    return _this3;\n  }\n\n  _createClass(UnableToResolveError, [{\n    key: \"buildCodeFrameMessage\",\n    value: function buildCodeFrameMessage() {\n      var file;\n\n      try {\n        file = fs.readFileSync(this.originModulePath, \"utf8\");\n      } catch (error) {\n        if (error.code === \"ENOENT\" || error.code === \"EISDIR\") {\n          return null;\n        }\n\n        throw error;\n      }\n\n      var lines = file.split(\"\\n\");\n      var lineNumber = 0;\n      var column = -1;\n\n      for (var line = 0; line < lines.length; line++) {\n        var columnLocation = lines[line].lastIndexOf(this.targetModuleName);\n\n        if (columnLocation >= 0) {\n          lineNumber = line;\n          column = columnLocation;\n          break;\n        }\n      }\n\n      return codeFrameColumns(fs.readFileSync(this.originModulePath, \"utf8\"), {\n        start: {\n          column: column + 1,\n          line: lineNumber + 1\n        }\n      }, {\n        forceColor: process.env.NODE_ENV !== \"test\"\n      });\n    }\n  }]);\n\n  return UnableToResolveError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = {\n  ModuleResolver: ModuleResolver,\n  UnableToResolveError: UnableToResolveError\n};","map":{"version":3,"names":["require","codeFrameColumns","fs","invariant","Resolver","path","util","ModuleResolver","options","_getPackageMainPath","packageJsonPath","package_","_options","moduleCache","getPackage","getMain","mainFields","projectRoot","_projectRootFakeModule","join","getPackageOf","isHaste","Error","getName","emptyModule","_cachedEmptyModule","resolveDependency","emptyModulePath","fromModule","modulePath","startsWith","fromPackage","fromPackagePath","relative","dirname","resolve","redirectedPath","redirectRequire","pck","isAbsolute","err","moduleName","allowHaste","platform","result","originModulePath","redirectModulePath","_redirectRequire","resolveHasteModule","name","moduleMap","getModule","resolveHastePackage","getPackageMainPath","_getFileResolvedModule","error","FailedToResolvePathError","candidates","UnableToResolveError","formatFileCandidates","_removeRoot","file","dir","FailedToResolveNameError","dirPaths","extraPaths","displayDirPaths","filter","dirPath","dirExists","map","concat","hint","length","resolution","type","filePath","arbitrary","getArrayLowestItem","filePaths","_getEmptyModule","filePathPrefix","a","undefined","lowest","i","targetModuleName","message","codeFrameMessage","buildCodeFrameMessage","format","readFileSync","code","lines","split","lineNumber","column","line","columnLocation","lastIndexOf","start","forceColor","process","env","NODE_ENV","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/node-haste/DependencyGraph/ModuleResolution.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst { codeFrameColumns } = require(\"@babel/code-frame\");\n\nconst fs = require(\"fs\");\n\nconst invariant = require(\"invariant\");\n\nconst Resolver = require(\"metro-resolver\");\n\nconst path = require(\"path\");\n\nconst util = require(\"util\");\n\nclass ModuleResolver {\n  // A module representing the project root, used as the origin when resolving `emptyModulePath`.\n  // An empty module, the result of resolving `emptyModulePath` from the project root.\n  constructor(options) {\n    this._options = options;\n    const { projectRoot, moduleCache } = this._options;\n    this._projectRootFakeModule = {\n      path: path.join(projectRoot, \"_\"),\n      getPackage: () =>\n        moduleCache.getPackageOf(this._projectRootFakeModule.path),\n\n      isHaste() {\n        throw new Error(\"not implemented\");\n      },\n\n      getName() {\n        throw new Error(\"not implemented\");\n      },\n    };\n  }\n\n  _getEmptyModule() {\n    let emptyModule = this._cachedEmptyModule;\n\n    if (!emptyModule) {\n      emptyModule = this.resolveDependency(\n        this._projectRootFakeModule,\n        this._options.emptyModulePath,\n        false,\n        null\n      );\n      this._cachedEmptyModule = emptyModule;\n    }\n\n    return emptyModule;\n  }\n\n  _redirectRequire(fromModule, modulePath) {\n    const moduleCache = this._options.moduleCache;\n\n    try {\n      if (modulePath.startsWith(\".\")) {\n        const fromPackage = fromModule.getPackage();\n\n        if (fromPackage) {\n          // We need to convert the module path from module-relative to\n          // package-relative, so that we can easily match it against the\n          // \"browser\" map (where all paths are relative to the package root)\n          const fromPackagePath =\n            \"./\" +\n            path.relative(\n              path.dirname(fromPackage.path),\n              path.resolve(path.dirname(fromModule.path), modulePath)\n            );\n          let redirectedPath = fromPackage.redirectRequire(\n            fromPackagePath,\n            this._options.mainFields\n          ); // Since the redirected path is still relative to the package root,\n          // we have to transform it back to be module-relative (as it\n          // originally was)\n\n          if (redirectedPath !== false) {\n            redirectedPath =\n              \"./\" +\n              path.relative(\n                path.dirname(fromModule.path),\n                path.resolve(path.dirname(fromPackage.path), redirectedPath)\n              );\n          }\n\n          return redirectedPath;\n        }\n      } else {\n        const pck = path.isAbsolute(modulePath)\n          ? moduleCache.getPackageOf(modulePath)\n          : fromModule.getPackage();\n\n        if (pck) {\n          return pck.redirectRequire(modulePath, this._options.mainFields);\n        }\n      }\n    } catch (err) {\n      // Do nothing. The standard module cache does not trigger any error, but\n      // the ModuleGraph one does, if the module does not exist.\n    }\n\n    return modulePath;\n  }\n\n  resolveDependency(fromModule, moduleName, allowHaste, platform) {\n    try {\n      const result = Resolver.resolve(\n        {\n          ...this._options,\n          originModulePath: fromModule.path,\n          redirectModulePath: (modulePath) =>\n            this._redirectRequire(fromModule, modulePath),\n          allowHaste,\n          platform,\n          resolveHasteModule: (name) =>\n            this._options.moduleMap.getModule(name, platform, true),\n          resolveHastePackage: (name) =>\n            this._options.moduleMap.getPackage(name, platform, true),\n          getPackageMainPath: this._getPackageMainPath,\n        },\n        moduleName,\n        platform\n      );\n      return this._getFileResolvedModule(result);\n    } catch (error) {\n      if (error instanceof Resolver.FailedToResolvePathError) {\n        const { candidates } = error;\n        throw new UnableToResolveError(\n          fromModule.path,\n          moduleName,\n          [\n            \"\\n\\nNone of these files exist:\",\n            `  * ${Resolver.formatFileCandidates(\n              this._removeRoot(candidates.file)\n            )}`,\n            `  * ${Resolver.formatFileCandidates(\n              this._removeRoot(candidates.dir)\n            )}`,\n          ].join(\"\\n\")\n        );\n      }\n\n      if (error instanceof Resolver.FailedToResolveNameError) {\n        const { dirPaths, extraPaths } = error;\n        const displayDirPaths = dirPaths\n          .filter((dirPath) => this._options.dirExists(dirPath))\n          .map((dirPath) => path.relative(this._options.projectRoot, dirPath))\n          .concat(extraPaths);\n        const hint = displayDirPaths.length ? \" or in these directories:\" : \"\";\n        throw new UnableToResolveError(\n          fromModule.path,\n          moduleName,\n          [\n            `${moduleName} could not be found within the project${hint || \".\"}`,\n            ...displayDirPaths.map((dirPath) => `  ${dirPath}`),\n          ].join(\"\\n\")\n        );\n      }\n\n      throw error;\n    }\n  }\n\n  _getPackageMainPath = (packageJsonPath) => {\n    const package_ = this._options.moduleCache.getPackage(packageJsonPath);\n\n    return package_.getMain(this._options.mainFields);\n  };\n  /**\n   * FIXME: get rid of this function and of the reliance on `TModule`\n   * altogether, return strongly typed resolutions at the top-level instead.\n   */\n\n  _getFileResolvedModule(resolution) {\n    switch (resolution.type) {\n      case \"sourceFile\":\n        return this._options.moduleCache.getModule(resolution.filePath);\n\n      case \"assetFiles\":\n        // FIXME: we should forward ALL the paths/metadata,\n        // not just an arbitrary item!\n        const arbitrary = getArrayLowestItem(resolution.filePaths);\n        invariant(arbitrary != null, \"invalid asset resolution\");\n        return this._options.moduleCache.getModule(arbitrary);\n\n      case \"empty\":\n        return this._getEmptyModule();\n\n      default:\n        resolution.type;\n        throw new Error(\"invalid type\");\n    }\n  }\n\n  _removeRoot(candidates) {\n    if (candidates.filePathPrefix) {\n      candidates.filePathPrefix = path.relative(\n        this._options.projectRoot,\n        candidates.filePathPrefix\n      );\n    }\n\n    return candidates;\n  }\n}\n\nfunction getArrayLowestItem(a) {\n  if (a.length === 0) {\n    return undefined;\n  }\n\n  let lowest = a[0];\n\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] < lowest) {\n      lowest = a[i];\n    }\n  }\n\n  return lowest;\n}\n\nclass UnableToResolveError extends Error {\n  /**\n   * File path of the module that tried to require a module, ex. `/js/foo.js`.\n   */\n\n  /**\n   * The name of the module that was required, no necessarily a path,\n   * ex. `./bar`, or `invariant`.\n   */\n  constructor(originModulePath, targetModuleName, message) {\n    super();\n    this.originModulePath = originModulePath;\n    this.targetModuleName = targetModuleName;\n    const codeFrameMessage = this.buildCodeFrameMessage();\n    this.message =\n      util.format(\n        \"Unable to resolve module %s from %s: %s\",\n        targetModuleName,\n        originModulePath,\n        message\n      ) + (codeFrameMessage ? \"\\n\" + codeFrameMessage : \"\");\n  }\n\n  buildCodeFrameMessage() {\n    let file;\n\n    try {\n      file = fs.readFileSync(this.originModulePath, \"utf8\");\n    } catch (error) {\n      if (error.code === \"ENOENT\" || error.code === \"EISDIR\") {\n        // We're probably dealing with a virtualised file system where\n        // `this.originModulePath` doesn't actually exist on disk.\n        // We can't show a code frame, but there's no need to let this I/O\n        // error shadow the original module resolution error.\n        return null;\n      }\n\n      throw error;\n    }\n\n    const lines = file.split(\"\\n\");\n    let lineNumber = 0;\n    let column = -1;\n\n    for (let line = 0; line < lines.length; line++) {\n      const columnLocation = lines[line].lastIndexOf(this.targetModuleName);\n\n      if (columnLocation >= 0) {\n        lineNumber = line;\n        column = columnLocation;\n        break;\n      }\n    }\n\n    return codeFrameColumns(\n      fs.readFileSync(this.originModulePath, \"utf8\"),\n      {\n        start: {\n          column: column + 1,\n          line: lineNumber + 1,\n        },\n      },\n      {\n        forceColor: process.env.NODE_ENV !== \"test\",\n      }\n    );\n  }\n}\n\nmodule.exports = {\n  ModuleResolver,\n  UnableToResolveError,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}