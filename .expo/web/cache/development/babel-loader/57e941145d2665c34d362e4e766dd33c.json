{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _os() {\n  var data = _interopRequireDefault(require(\"os\"));\n\n  _os = function _os() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fsExtra() {\n  var data = _interopRequireDefault(require(\"fs-extra\"));\n\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _minimist() {\n  var data = _interopRequireDefault(require(\"minimist\"));\n\n  _minimist = function _minimist() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _validate = require(\"./validate\");\n\nvar _DirectoryAlreadyExistsError = _interopRequireDefault(require(\"./errors/DirectoryAlreadyExistsError\"));\n\nvar _printRunInstructions = _interopRequireDefault(require(\"./printRunInstructions\"));\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _template = require(\"./template\");\n\nvar _editTemplate = require(\"./editTemplate\");\n\nvar PackageManager = _interopRequireWildcard(require(\"../../tools/packageManager\"));\n\nfunction _cliDoctor() {\n  var data = require(\"@react-native-community/cli-doctor\");\n\n  _cliDoctor = function _cliDoctor() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _banner = _interopRequireDefault(require(\"./banner\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DEFAULT_VERSION = 'latest';\n\nfunction doesDirectoryExist(dir) {\n  return _fsExtra().default.existsSync(dir);\n}\n\nfunction setProjectDirectory(directory) {\n  return _regeneratorRuntime.async(function setProjectDirectory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!doesDirectoryExist(directory)) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new _DirectoryAlreadyExistsError.default(directory);\n\n        case 2:\n          _context.prev = 2;\n\n          _fsExtra().default.mkdirSync(directory, {\n            recursive: true\n          });\n\n          process.chdir(directory);\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n          throw new (_cliTools().CLIError)('Error occurred while trying to create project directory.', _context.t0);\n\n        case 10:\n          return _context.abrupt(\"return\", process.cwd());\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 7]], Promise);\n}\n\nfunction getTemplateName(cwd) {\n  var name = Object.keys(JSON.parse(_fsExtra().default.readFileSync(_path().default.join(cwd, './package.json'), 'utf8')).dependencies)[0];\n  return name;\n}\n\nfunction createFromTemplate(_ref) {\n  var projectName, templateUri, npm, directory, projectTitle, skipInstall, projectDirectory, loader, templateSourceDir, templateName, templateConfig, postInitScript;\n  return _regeneratorRuntime.async(function createFromTemplate$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          projectName = _ref.projectName, templateUri = _ref.templateUri, npm = _ref.npm, directory = _ref.directory, projectTitle = _ref.projectTitle, skipInstall = _ref.skipInstall;\n\n          _cliTools().logger.debug('Initializing new project');\n\n          _cliTools().logger.log(_banner.default);\n\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(setProjectDirectory(directory));\n\n        case 5:\n          projectDirectory = _context2.sent;\n          loader = (0, _cliTools().getLoader)({\n            text: 'Downloading template'\n          });\n          templateSourceDir = _fsExtra().default.mkdtempSync(_path().default.join(_os().default.tmpdir(), 'rncli-init-template-'));\n          _context2.prev = 8;\n          loader.start();\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap((0, _template.installTemplatePackage)(templateUri, templateSourceDir, npm));\n\n        case 12:\n          loader.succeed();\n          loader.start('Copying template');\n          templateName = getTemplateName(templateSourceDir);\n          templateConfig = (0, _template.getTemplateConfig)(templateName, templateSourceDir);\n          _context2.next = 18;\n          return _regeneratorRuntime.awrap((0, _template.copyTemplate)(templateName, templateConfig.templateDir, templateSourceDir));\n\n        case 18:\n          loader.succeed();\n          loader.start('Processing template');\n          _context2.next = 22;\n          return _regeneratorRuntime.awrap((0, _editTemplate.changePlaceholderInTemplate)({\n            projectName: projectName,\n            projectTitle: projectTitle,\n            placeholderName: templateConfig.placeholderName,\n            placeholderTitle: templateConfig.titlePlaceholder\n          }));\n\n        case 22:\n          loader.succeed();\n          postInitScript = templateConfig.postInitScript;\n\n          if (!postInitScript) {\n            _context2.next = 28;\n            break;\n          }\n\n          loader.info('Executing post init script ');\n          _context2.next = 28;\n          return _regeneratorRuntime.awrap((0, _template.executePostInitScript)(templateName, postInitScript, templateSourceDir));\n\n        case 28:\n          if (skipInstall) {\n            _context2.next = 33;\n            break;\n          }\n\n          _context2.next = 31;\n          return _regeneratorRuntime.awrap(installDependencies({\n            npm: npm,\n            loader: loader,\n            root: projectDirectory,\n            directory: directory\n          }));\n\n        case 31:\n          _context2.next = 34;\n          break;\n\n        case 33:\n          loader.succeed('Dependencies installation skipped');\n\n        case 34:\n          _context2.next = 40;\n          break;\n\n        case 36:\n          _context2.prev = 36;\n          _context2.t0 = _context2[\"catch\"](8);\n          loader.fail();\n          throw new Error(_context2.t0);\n\n        case 40:\n          _context2.prev = 40;\n\n          _fsExtra().default.removeSync(templateSourceDir);\n\n          return _context2.finish(40);\n\n        case 43:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[8, 36, 40, 43]], Promise);\n}\n\nfunction installDependencies(_ref2) {\n  var directory, npm, loader, root;\n  return _regeneratorRuntime.async(function installDependencies$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          directory = _ref2.directory, npm = _ref2.npm, loader = _ref2.loader, root = _ref2.root;\n          loader.start('Installing dependencies');\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(PackageManager.installAll({\n            preferYarn: !npm,\n            silent: true,\n            root: root\n          }));\n\n        case 4:\n          if (!(process.platform === 'darwin')) {\n            _context3.next = 7;\n            break;\n          }\n\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap((0, _cliDoctor().installPods)({\n            directory: directory,\n            loader: loader\n          }));\n\n        case 7:\n          loader.succeed();\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction createProject(projectName, directory, version, options) {\n  var templateUri;\n  return _regeneratorRuntime.async(function createProject$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          templateUri = options.template || \"react-native@\" + version;\n          return _context4.abrupt(\"return\", createFromTemplate({\n            projectName: projectName,\n            templateUri: templateUri,\n            npm: options.npm,\n            directory: directory,\n            projectTitle: options.title,\n            skipInstall: options.skipInstall\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar initialize = function initialize(_ref3, options) {\n  var _ref4, projectName, root, version, directoryName, projectFolder;\n\n  return _regeneratorRuntime.async(function initialize$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _ref4 = _slicedToArray(_ref3, 1), projectName = _ref4[0];\n          root = process.cwd();\n          (0, _validate.validateProjectName)(projectName);\n          version = (0, _minimist().default)(process.argv).version || DEFAULT_VERSION;\n          directoryName = _path().default.relative(root, options.directory || projectName);\n          _context5.prev = 5;\n          _context5.next = 8;\n          return _regeneratorRuntime.awrap(createProject(projectName, directoryName, version, options));\n\n        case 8:\n          projectFolder = _path().default.join(root, directoryName);\n          (0, _printRunInstructions.default)(projectFolder, projectName);\n          _context5.next = 15;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](5);\n\n          _cliTools().logger.error(_context5.t0.message);\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[5, 12]], Promise);\n};\n\nexports.default = initialize;","map":{"version":3,"sources":["../../../src/commands/init/init.ts"],"names":["DEFAULT_VERSION","fs","doesDirectoryExist","DirectoryAlreadyExistsError","recursive","process","CLIError","name","Object","JSON","path","skipInstall","logger","banner","projectDirectory","setProjectDirectory","loader","text","templateSourceDir","os","templateName","getTemplateName","templateConfig","projectName","projectTitle","placeholderName","placeholderTitle","titlePlaceholder","postInitScript","installDependencies","npm","root","directory","preferYarn","silent","templateUri","options","createFromTemplate","initialize","version","directoryName","createProject","projectFolder","e"],"mappings":"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","sourcesContent":["import os from 'os';\nimport path from 'path';\nimport fs from 'fs-extra';\nimport minimist from 'minimist';\nimport {validateProjectName} from './validate';\nimport DirectoryAlreadyExistsError from './errors/DirectoryAlreadyExistsError';\nimport printRunInstructions from './printRunInstructions';\nimport {\n  CLIError,\n  logger,\n  getLoader,\n  Loader,\n} from '@react-native-community/cli-tools';\nimport {\n  installTemplatePackage,\n  getTemplateConfig,\n  copyTemplate,\n  executePostInitScript,\n} from './template';\nimport {changePlaceholderInTemplate} from './editTemplate';\nimport * as PackageManager from '../../tools/packageManager';\nimport {installPods} from '@react-native-community/cli-doctor';\nimport banner from './banner';\n\nconst DEFAULT_VERSION = 'latest';\n\ntype Options = {\n  template?: string;\n  npm?: boolean;\n  directory?: string;\n  displayName?: string;\n  title?: string;\n  skipInstall?: boolean;\n};\n\ninterface TemplateOptions {\n  projectName: string;\n  templateUri: string;\n  npm?: boolean;\n  directory: string;\n  projectTitle?: string;\n  skipInstall?: boolean;\n}\n\nfunction doesDirectoryExist(dir: string) {\n  return fs.existsSync(dir);\n}\n\nasync function setProjectDirectory(directory: string) {\n  if (doesDirectoryExist(directory)) {\n    throw new DirectoryAlreadyExistsError(directory);\n  }\n\n  try {\n    fs.mkdirSync(directory, {recursive: true});\n    process.chdir(directory);\n  } catch (error) {\n    throw new CLIError(\n      'Error occurred while trying to create project directory.',\n      error,\n    );\n  }\n\n  return process.cwd();\n}\n\nfunction getTemplateName(cwd: string) {\n  // We use package manager to infer the name of the template module for us.\n  // That's why we get it from temporary package.json, where the name is the\n  // first and only dependency (hence 0).\n  const name = Object.keys(\n    JSON.parse(fs.readFileSync(path.join(cwd, './package.json'), 'utf8'))\n      .dependencies,\n  )[0];\n  return name;\n}\n\nasync function createFromTemplate({\n  projectName,\n  templateUri,\n  npm,\n  directory,\n  projectTitle,\n  skipInstall,\n}: TemplateOptions) {\n  logger.debug('Initializing new project');\n  logger.log(banner);\n\n  const projectDirectory = await setProjectDirectory(directory);\n\n  const loader = getLoader({text: 'Downloading template'});\n  const templateSourceDir = fs.mkdtempSync(\n    path.join(os.tmpdir(), 'rncli-init-template-'),\n  );\n\n  try {\n    loader.start();\n\n    await installTemplatePackage(templateUri, templateSourceDir, npm);\n\n    loader.succeed();\n    loader.start('Copying template');\n\n    const templateName = getTemplateName(templateSourceDir);\n    const templateConfig = getTemplateConfig(templateName, templateSourceDir);\n    await copyTemplate(\n      templateName,\n      templateConfig.templateDir,\n      templateSourceDir,\n    );\n\n    loader.succeed();\n    loader.start('Processing template');\n\n    await changePlaceholderInTemplate({\n      projectName,\n      projectTitle,\n      placeholderName: templateConfig.placeholderName,\n      placeholderTitle: templateConfig.titlePlaceholder,\n    });\n\n    loader.succeed();\n    const {postInitScript} = templateConfig;\n    if (postInitScript) {\n      loader.info('Executing post init script ');\n      await executePostInitScript(\n        templateName,\n        postInitScript,\n        templateSourceDir,\n      );\n    }\n\n    if (!skipInstall) {\n      await installDependencies({\n        npm,\n        loader,\n        root: projectDirectory,\n        directory,\n      });\n    } else {\n      loader.succeed('Dependencies installation skipped');\n    }\n  } catch (e) {\n    loader.fail();\n    throw new Error(e);\n  } finally {\n    fs.removeSync(templateSourceDir);\n  }\n}\n\nasync function installDependencies({\n  directory,\n  npm,\n  loader,\n  root,\n}: {\n  directory: string;\n  npm?: boolean;\n  loader: Loader;\n  root: string;\n}) {\n  loader.start('Installing dependencies');\n\n  await PackageManager.installAll({\n    preferYarn: !npm,\n    silent: true,\n    root,\n  });\n\n  if (process.platform === 'darwin') {\n    await installPods({directory, loader});\n  }\n\n  loader.succeed();\n}\n\nasync function createProject(\n  projectName: string,\n  directory: string,\n  version: string,\n  options: Options,\n) {\n  const templateUri = options.template || `react-native@${version}`;\n\n  return createFromTemplate({\n    projectName,\n    templateUri,\n    npm: options.npm,\n    directory,\n    projectTitle: options.title,\n    skipInstall: options.skipInstall,\n  });\n}\n\nexport default (async function initialize(\n  [projectName]: Array<string>,\n  options: Options,\n) {\n  const root = process.cwd();\n\n  validateProjectName(projectName);\n\n  /**\n   * Commander is stripping `version` from options automatically.\n   * We have to use `minimist` to take that directly from `process.argv`\n   */\n  const version: string = minimist(process.argv).version || DEFAULT_VERSION;\n\n  const directoryName = path.relative(root, options.directory || projectName);\n\n  try {\n    await createProject(projectName, directoryName, version, options);\n\n    const projectFolder = path.join(root, directoryName);\n    printRunInstructions(projectFolder, projectName);\n  } catch (e) {\n    logger.error(e.message);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}