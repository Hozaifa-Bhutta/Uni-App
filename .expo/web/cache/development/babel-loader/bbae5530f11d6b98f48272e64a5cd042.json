{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JoiError = void 0;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar JoiError = function (_cliTools$CLIError) {\n  _inherits(JoiError, _cliTools$CLIError);\n\n  var _super = _createSuper(JoiError);\n\n  function JoiError(joiError) {\n    var _this;\n\n    _classCallCheck(this, JoiError);\n\n    var message = joiError.details.map(function (error) {\n      var name = error.path.join('.');\n\n      switch (error.type) {\n        case 'object.allowUnknown':\n          {\n            var value = JSON.stringify(error.context && error.context.value);\n            return \"\\n              Unknown option \" + name + \" with value \\\"\" + value + \"\\\" was found.\\n              This is either a typing error or a user mistake. Fixing it will remove this message.\\n            \";\n          }\n\n        default:\n          return error.message;\n      }\n    }).join().trim();\n    _this = _super.call(this, message);\n    _this.name = 'Config Validation Error';\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), JoiError);\n    }\n\n    return _this;\n  }\n\n  return _createClass(JoiError);\n}(_cliTools().CLIError);\n\nexports.JoiError = JoiError;","map":{"version":3,"sources":["../src/errors.ts"],"names":["CLIError","constructor","message","error","name","value","JSON","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;IAGO,Q;;;;;EACLC,kBAAW,QAAXA,EAAuC;IAAA;;IAAA;;IACrC,IAAMC,OAAO,GAAG,QAAQ,CAAR,OAAA,CAAA,GAAA,CACRC,UAAAA,KAAD,EAAW;MACd,IAAMC,IAAI,GAAGD,KAAK,CAALA,IAAAA,CAAAA,IAAAA,CAAb,GAAaA,CAAb;;MACA,QAAQA,KAAK,CAAb,IAAA;QACE,KAAA,qBAAA;UAA4B;YAC1B,IAAME,KAAK,GAAGC,IAAI,CAAJA,SAAAA,CAAeH,KAAK,CAALA,OAAAA,IAAiBA,KAAK,CAALA,OAAAA,CAA9C,KAAcG,CAAd;YACA,2CACmBF,IADnB,sBACuCC,KADvC;UAID;;QACD;UACE,OAAOF,KAAK,CAAZ,OAAA;MATJ;IAHY,CAAA,EAAA,IAAA,GAAhB,IAAgB,EAAhB;IAkBA,0BAAA,OAAA;IACA,MAAA,IAAA,GAAA,yBAAA;;IAEA,IAAII,KAAK,CAAT,iBAAA,EAA6B;MAC3BA,KAAK,CAALA,iBAAAA,gCAAAA,QAAAA;IACD;;IAxBoC;EAyBtC;;;EA1B2BP,SAAAA,GAAvB,Q","sourcesContent":["import {CLIError} from '@react-native-community/cli-tools';\nimport {ValidationError} from 'joi';\n\nexport class JoiError extends CLIError {\n  constructor(joiError: ValidationError) {\n    const message = joiError.details\n      .map((error) => {\n        const name = error.path.join('.');\n        switch (error.type) {\n          case 'object.allowUnknown': {\n            const value = JSON.stringify(error.context && error.context.value);\n            return `\n              Unknown option ${name} with value \"${value}\" was found.\n              This is either a typing error or a user mistake. Fixing it will remove this message.\n            `;\n          }\n          default:\n            return error.message;\n        }\n      })\n      .join()\n      .trim();\n\n    super(message);\n    this.name = 'Config Validation Error';\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JoiError);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}