{"ast":null,"code":"var fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar utimes = require(\"../util/utimes\");\n\nfunction ncp(source, dest, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd();\n  var currentPath = path.resolve(basePath, source);\n  var targetPath = path.resolve(basePath, dest);\n  var filter = options.filter;\n  var transform = options.transform;\n  var clobber = options.clobber !== false;\n  var dereference = options.dereference;\n  var preserveTimestamps = options.preserveTimestamps === true;\n  var started = 0;\n  var finished = 0;\n  var running = 0;\n  var errored = false;\n  startCopy(currentPath);\n\n  function startCopy(source) {\n    started++;\n\n    if (filter) {\n      if (filter instanceof RegExp) {\n        console.warn('Warning: fs-extra: Passing a RegExp filter is deprecated, use a function');\n\n        if (!filter.test(source)) {\n          return doneOne(true);\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return doneOne(true);\n        }\n      }\n    }\n\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    running++;\n    stat(source, function (err, stats) {\n      if (err) return onError(err);\n      var item = {\n        name: source,\n        mode: stats.mode,\n        mtime: stats.mtime,\n        atime: stats.atime,\n        stats: stats\n      };\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      } else if (stats.isFile() || stats.isCharacterDevice() || stats.isBlockDevice()) {\n        return onFile(item);\n      } else if (stats.isSymbolicLink()) {\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath.replace('$', '$$$$'));\n    isWritable(target, function (writable) {\n      if (writable) {\n        copyFile(file, target);\n      } else {\n        if (clobber) {\n          rmFile(target, function () {\n            copyFile(file, target);\n          });\n        } else {\n          var err = new Error('EEXIST: ' + target + ' already exists.');\n          err.code = 'EEXIST';\n          err.errno = -17;\n          err.path = target;\n          onError(err);\n        }\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name);\n    var writeStream = fs.createWriteStream(target, {\n      mode: file.mode\n    });\n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n\n    if (transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream);\n      });\n    }\n\n    writeStream.once('finish', function () {\n      fs.chmod(target, file.mode, function (err) {\n        if (err) return onError(err);\n\n        if (preserveTimestamps) {\n          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {\n            if (err) return onError(err);\n            return doneOne();\n          });\n        } else {\n          doneOne();\n        }\n      });\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) return onError(err);\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath.replace('$', '$$$$'));\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) return onError(err);\n      fs.chmod(target, dir.mode, function (err) {\n        if (err) return onError(err);\n        copyDir(dir.name);\n      });\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) return onError(err);\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return doneOne();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) return onError(err);\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n\n      fs.readlink(target, function (err, targetDest) {\n        if (err) return onError(err);\n\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n\n        if (targetDest === resolvedPath) {\n          return doneOne();\n        }\n\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) return onError(err);\n      return doneOne();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (!errored && callback !== undefined) {\n      errored = true;\n      return callback(err);\n    }\n  }\n\n  function doneOne(skipped) {\n    if (!skipped) running--;\n    finished++;\n\n    if (started === finished && running === 0) {\n      if (callback !== undefined) {\n        return callback(null);\n      }\n    }\n  }\n}\n\nmodule.exports = ncp;","map":{"version":3,"names":["fs","require","path","utimes","ncp","source","dest","options","callback","basePath","process","cwd","currentPath","resolve","targetPath","filter","transform","clobber","dereference","preserveTimestamps","started","finished","running","errored","startCopy","RegExp","console","warn","test","doneOne","getStats","stat","lstat","err","stats","onError","item","name","mode","mtime","atime","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","file","target","replace","isWritable","writable","copyFile","rmFile","Error","code","errno","readStream","createReadStream","writeStream","createWriteStream","on","pipe","once","chmod","utimesMillis","done","unlink","dir","mkDir","copyDir","mkdir","readdir","items","forEach","join","link","readlink","resolvedPath","checkLink","makeLink","targetDest","linkPath","symlink","undefined","skipped","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/fs-extra/lib/copy/ncp.js"],"sourcesContent":["// imported from ncp (this is temporary, will rewrite)\n\nvar fs = require('graceful-fs')\nvar path = require('path')\nvar utimes = require('../util/utimes')\n\nfunction ncp (source, dest, options, callback) {\n  if (!callback) {\n    callback = options\n    options = {}\n  }\n\n  var basePath = process.cwd()\n  var currentPath = path.resolve(basePath, source)\n  var targetPath = path.resolve(basePath, dest)\n\n  var filter = options.filter\n  var transform = options.transform\n  var clobber = options.clobber !== false // default true\n  var dereference = options.dereference\n  var preserveTimestamps = options.preserveTimestamps === true\n\n  var started = 0\n  var finished = 0\n  var running = 0\n\n  var errored = false\n\n  startCopy(currentPath)\n\n  function startCopy (source) {\n    started++\n    if (filter) {\n      if (filter instanceof RegExp) {\n        console.warn('Warning: fs-extra: Passing a RegExp filter is deprecated, use a function')\n        if (!filter.test(source)) {\n          return doneOne(true)\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return doneOne(true)\n        }\n      }\n    }\n    return getStats(source)\n  }\n\n  function getStats (source) {\n    var stat = dereference ? fs.stat : fs.lstat\n    running++\n    stat(source, function (err, stats) {\n      if (err) return onError(err)\n\n      // We need to get the mode from the stats object and preserve it.\n      var item = {\n        name: source,\n        mode: stats.mode,\n        mtime: stats.mtime, // modified time\n        atime: stats.atime, // access time\n        stats: stats // temporary\n      }\n\n      if (stats.isDirectory()) {\n        return onDir(item)\n      } else if (stats.isFile() || stats.isCharacterDevice() || stats.isBlockDevice()) {\n        return onFile(item)\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source)\n      }\n    })\n  }\n\n  function onFile (file) {\n    var target = file.name.replace(currentPath, targetPath.replace('$', '$$$$')) // escapes '$' with '$$'\n    isWritable(target, function (writable) {\n      if (writable) {\n        copyFile(file, target)\n      } else {\n        if (clobber) {\n          rmFile(target, function () {\n            copyFile(file, target)\n          })\n        } else {\n          var err = new Error('EEXIST: ' + target + ' already exists.')\n          err.code = 'EEXIST'\n          err.errno = -17\n          err.path = target\n          onError(err)\n        }\n      }\n    })\n  }\n\n  function copyFile (file, target) {\n    var readStream = fs.createReadStream(file.name)\n    var writeStream = fs.createWriteStream(target, { mode: file.mode })\n\n    readStream.on('error', onError)\n    writeStream.on('error', onError)\n\n    if (transform) {\n      transform(readStream, writeStream, file)\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream)\n      })\n    }\n\n    writeStream.once('finish', function () {\n      fs.chmod(target, file.mode, function (err) {\n        if (err) return onError(err)\n        if (preserveTimestamps) {\n          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {\n            if (err) return onError(err)\n            return doneOne()\n          })\n        } else {\n          doneOne()\n        }\n      })\n    })\n  }\n\n  function rmFile (file, done) {\n    fs.unlink(file, function (err) {\n      if (err) return onError(err)\n      return done()\n    })\n  }\n\n  function onDir (dir) {\n    var target = dir.name.replace(currentPath, targetPath.replace('$', '$$$$')) // escapes '$' with '$$'\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target)\n      }\n      copyDir(dir.name)\n    })\n  }\n\n  function mkDir (dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) return onError(err)\n      // despite setting mode in fs.mkdir, doesn't seem to work\n      // so we set it here.\n      fs.chmod(target, dir.mode, function (err) {\n        if (err) return onError(err)\n        copyDir(dir.name)\n      })\n    })\n  }\n\n  function copyDir (dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) return onError(err)\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item))\n      })\n      return doneOne()\n    })\n  }\n\n  function onLink (link) {\n    var target = link.replace(currentPath, targetPath)\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) return onError(err)\n      checkLink(resolvedPath, target)\n    })\n  }\n\n  function checkLink (resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath)\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target)\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) return onError(err)\n\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest)\n        }\n        if (targetDest === resolvedPath) {\n          return doneOne()\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target)\n        })\n      })\n    })\n  }\n\n  function makeLink (linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) return onError(err)\n      return doneOne()\n    })\n  }\n\n  function isWritable (path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true)\n        return done(false)\n      }\n      return done(false)\n    })\n  }\n\n  function onError (err) {\n    // ensure callback is defined & called only once:\n    if (!errored && callback !== undefined) {\n      errored = true\n      return callback(err)\n    }\n  }\n\n  function doneOne (skipped) {\n    if (!skipped) running--\n    finished++\n    if ((started === finished) && (running === 0)) {\n      if (callback !== undefined) {\n        return callback(null)\n      }\n    }\n  }\n}\n\nmodule.exports = ncp\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}