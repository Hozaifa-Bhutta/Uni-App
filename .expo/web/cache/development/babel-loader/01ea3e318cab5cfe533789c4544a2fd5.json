{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _connect() {\n  var data = _interopRequireDefault(require(\"connect\"));\n\n  _connect = function _connect() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _rawBodyMiddleware = _interopRequireDefault(require(\"./rawBodyMiddleware\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getOpenStackFrameInEditorMiddleware(_ref) {\n  var watchFolders = _ref.watchFolders;\n  return function (req, res, next) {\n    if (!req.rawBody) {\n      return next(new Error('missing request body'));\n    }\n\n    var frame = JSON.parse(req.rawBody);\n    (0, _cliTools().launchEditor)(frame.file, frame.lineNumber, watchFolders);\n    res.end('OK');\n  };\n}\n\nvar _default = function _default(options) {\n  return (0, _connect().default)().use(_rawBodyMiddleware.default).use(getOpenStackFrameInEditorMiddleware(options));\n};\n\nexports.default = _default;","map":{"version":3,"sources":["../src/openStackFrameInEditorMiddleware.ts"],"names":["watchFolders","req","next","frame","JSON","res","options","rawBodyMiddleware","getOpenStackFrameInEditorMiddleware"],"mappings":";;;;;;;AAOA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,QAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;EAAA,QAAA,GAAA,oBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,uBAAA,CAAA;;;;;;;;AAMA,SAAA,mCAAA,OAAsE;EAAA,IAAxBA,YAAwB,QAAxBA,YAAwB;EACpE,OAAO,UAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAIF;IACH,IAAI,CAACC,GAAG,CAAR,OAAA,EAAkB;MAChB,OAAOC,IAAI,CAAC,IAAA,KAAA,CAAZ,sBAAY,CAAD,CAAX;IACD;;IACD,IAAMC,KAAK,GAAGC,IAAI,CAAJA,KAAAA,CAAWH,GAAG,CAA5B,OAAcG,CAAd;IACA,CAAA,GAAA,SAAA,GAAA,YAAA,EAAaD,KAAK,CAAlB,IAAA,EAAyBA,KAAK,CAA9B,UAAA,EAAA,YAAA;IACAE,GAAG,CAAHA,GAAAA,CAAAA,IAAAA;EAVF,CAAA;AAYD;;eAEeC,S,QAAAA,CAAAA,OAAD,EAAsB;EACnC,OAAO,CAAA,GAAA,QAAA,GAAA,OAAA,IAAA,GAAA,CACAC,kBAAAA,CADA,OAAA,EAAA,GAAA,CAEAC,mCAAmC,CAF1C,OAE0C,CAFnC,CAAP","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport http from 'http';\nimport {launchEditor} from '@react-native-community/cli-tools';\nimport connect from 'connect';\nimport rawBodyMiddleware from './rawBodyMiddleware';\n\ntype Options = {\n  watchFolders: ReadonlyArray<string>;\n};\n\nfunction getOpenStackFrameInEditorMiddleware({watchFolders}: Options) {\n  return (\n    req: http.IncomingMessage & {rawBody?: string},\n    res: http.ServerResponse,\n    next: (err?: any) => void,\n  ) => {\n    if (!req.rawBody) {\n      return next(new Error('missing request body'));\n    }\n    const frame = JSON.parse(req.rawBody);\n    launchEditor(frame.file, frame.lineNumber, watchFolders);\n    res.end('OK');\n  };\n}\n\nexport default (options: Options) => {\n  return connect()\n    .use(rawBodyMiddleware)\n    .use(getOpenStackFrameInEditorMiddleware(options));\n};\n"]},"metadata":{},"sourceType":"script"}