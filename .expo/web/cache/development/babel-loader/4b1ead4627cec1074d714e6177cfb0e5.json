{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar Transformer = require(\"./DeltaBundler/Transformer\");\n\nvar DependencyGraph = require(\"./node-haste/DependencyGraph\");\n\nvar Bundler = function () {\n  function Bundler(config, options) {\n    var _this = this;\n\n    _classCallCheck(this, Bundler);\n\n    this._depGraphPromise = DependencyGraph.load(config, options);\n    this._readyPromise = this._depGraphPromise.then(function (dependencyGraph) {\n      config.reporter.update({\n        type: \"transformer_load_started\"\n      });\n      _this._transformer = new Transformer(config, dependencyGraph.getSha1.bind(dependencyGraph));\n      config.reporter.update({\n        type: \"transformer_load_done\"\n      });\n    }).catch(function (error) {\n      console.error(\"Failed to construct transformer: \", error);\n      config.reporter.update({\n        type: \"transformer_load_failed\",\n        error: error\n      });\n    });\n  }\n\n  _createClass(Bundler, [{\n    key: \"end\",\n    value: function end() {\n      var dependencyGraph;\n      return _regeneratorRuntime.async(function end$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this._depGraphPromise);\n\n            case 2:\n              dependencyGraph = _context.sent;\n\n              this._transformer.end();\n\n              dependencyGraph.end();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDependencyGraph\",\n    value: function getDependencyGraph() {\n      return _regeneratorRuntime.async(function getDependencyGraph$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this._depGraphPromise);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"transformFile\",\n    value: function transformFile(filePath, transformOptions) {\n      return _regeneratorRuntime.async(function transformFile$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this._depGraphPromise);\n\n            case 2:\n              return _context3.abrupt(\"return\", this._transformer.transformFile(filePath, transformOptions));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      return _regeneratorRuntime.async(function ready$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(this._readyPromise);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return Bundler;\n}();\n\nmodule.exports = Bundler;","map":{"version":3,"names":["Transformer","require","DependencyGraph","Bundler","config","options","_depGraphPromise","load","_readyPromise","then","dependencyGraph","reporter","update","type","_transformer","getSha1","bind","catch","error","console","end","filePath","transformOptions","transformFile","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/Bundler.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst Transformer = require(\"./DeltaBundler/Transformer\");\n\nconst DependencyGraph = require(\"./node-haste/DependencyGraph\");\n\nclass Bundler {\n  constructor(config, options) {\n    this._depGraphPromise = DependencyGraph.load(config, options);\n    this._readyPromise = this._depGraphPromise\n      .then((dependencyGraph) => {\n        config.reporter.update({\n          type: \"transformer_load_started\",\n        });\n        this._transformer = new Transformer(\n          config, // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n          dependencyGraph.getSha1.bind(dependencyGraph)\n        );\n        config.reporter.update({\n          type: \"transformer_load_done\",\n        });\n      })\n      .catch((error) => {\n        console.error(\"Failed to construct transformer: \", error);\n        config.reporter.update({\n          type: \"transformer_load_failed\",\n          error,\n        });\n      });\n  }\n\n  async end() {\n    const dependencyGraph = await this._depGraphPromise;\n\n    this._transformer.end();\n\n    dependencyGraph.end();\n  }\n\n  async getDependencyGraph() {\n    return await this._depGraphPromise;\n  }\n\n  async transformFile(filePath, transformOptions) {\n    // We need to be sure that the DependencyGraph has been initialized.\n    // TODO: Remove this ugly hack!\n    await this._depGraphPromise;\n    return this._transformer.transformFile(filePath, transformOptions);\n  } // Waits for the bundler to become ready.\n\n  async ready() {\n    await this._readyPromise;\n  }\n}\n\nmodule.exports = Bundler;\n"],"mappings":"AASA;;;;;;;;AAEA,IAAMA,WAAW,GAAGC,OAAO,8BAA3B;;AAEA,IAAMC,eAAe,GAAGD,OAAO,gCAA/B;;IAEME,O;EACJ,iBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;IAAA;;IAAA;;IAC3B,KAAKC,gBAAL,GAAwBJ,eAAe,CAACK,IAAhB,CAAqBH,MAArB,EAA6BC,OAA7B,CAAxB;IACA,KAAKG,aAAL,GAAqB,KAAKF,gBAAL,CAClBG,IADkB,CACb,UAACC,eAAD,EAAqB;MACzBN,MAAM,CAACO,QAAP,CAAgBC,MAAhB,CAAuB;QACrBC,IAAI,EAAE;MADe,CAAvB;MAGA,KAAI,CAACC,YAAL,GAAoB,IAAId,WAAJ,CAClBI,MADkB,EAElBM,eAAe,CAACK,OAAhB,CAAwBC,IAAxB,CAA6BN,eAA7B,CAFkB,CAApB;MAIAN,MAAM,CAACO,QAAP,CAAgBC,MAAhB,CAAuB;QACrBC,IAAI,EAAE;MADe,CAAvB;IAGD,CAZkB,EAalBI,KAbkB,CAaZ,UAACC,KAAD,EAAW;MAChBC,OAAO,CAACD,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;MACAd,MAAM,CAACO,QAAP,CAAgBC,MAAhB,CAAuB;QACrBC,IAAI,EAAE,yBADe;QAErBK,KAAK,EAALA;MAFqB,CAAvB;IAID,CAnBkB,CAArB;EAoBD;;;;WAED;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACgC,KAAKZ,gBADrC;;YAAA;cACQI,eADR;;cAGE,KAAKI,YAAL,CAAkBM,GAAlB;;cAEAV,eAAe,CAACU,GAAhB;;YALF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAQA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACe,KAAKd,gBADpB;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAIA,uBAAoBe,QAApB,EAA8BC,gBAA9B;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAGQ,KAAKhB,gBAHb;;YAAA;cAAA,kCAIS,KAAKQ,YAAL,CAAkBS,aAAlB,CAAgCF,QAAhC,EAA0CC,gBAA1C,CAJT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAOA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACQ,KAAKd,aADb;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;;;;AAKFgB,MAAM,CAACC,OAAP,GAAiBtB,OAAjB"},"metadata":{},"sourceType":"script"}