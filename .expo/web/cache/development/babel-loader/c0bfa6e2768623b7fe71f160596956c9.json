{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar countLines = require(\"./countLines\");\n\nvar getPreludeCode = require(\"./getPreludeCode\");\n\nvar transformHelpers = require(\"./transformHelpers\");\n\nvar defaults = require(\"metro-config/src/defaults/defaults\");\n\nvar _require = require(\"metro-hermes-compiler\"),\n    compile = _require.compile;\n\nfunction getPrependedScripts(config, options, bundler, deltaBundler) {\n  var polyfillModuleNames, transformOptions, dependencies;\n  return _regeneratorRuntime.async(function getPrependedScripts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          polyfillModuleNames = config.serializer.getPolyfills({\n            platform: options.platform\n          }).concat(config.serializer.polyfillModuleNames);\n          transformOptions = _objectSpread(_objectSpread({}, options), {}, {\n            type: \"script\"\n          });\n          _context.t0 = _regeneratorRuntime;\n          _context.t1 = deltaBundler;\n          _context.t2 = [defaults.moduleSystem].concat(_toConsumableArray(polyfillModuleNames));\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(transformHelpers.getResolveDependencyFn(bundler, options.platform));\n\n        case 7:\n          _context.t3 = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(transformHelpers.getTransformFn([defaults.moduleSystem].concat(_toConsumableArray(polyfillModuleNames)), bundler, deltaBundler, config, transformOptions));\n\n        case 10:\n          _context.t4 = _context.sent;\n          _context.t5 = transformOptions;\n          _context.t6 = config.transformer.experimentalImportBundleSupport;\n          _context.t7 = {\n            resolve: _context.t3,\n            transform: _context.t4,\n            transformOptions: _context.t5,\n            onProgress: null,\n            experimentalImportBundleSupport: _context.t6,\n            shallow: false\n          };\n          _context.t8 = _context.t1.getDependencies.call(_context.t1, _context.t2, _context.t7);\n          _context.next = 17;\n          return _context.t0.awrap.call(_context.t0, _context.t8);\n\n        case 17:\n          dependencies = _context.sent;\n          return _context.abrupt(\"return\", [_getPrelude({\n            dev: options.dev,\n            globalPrefix: config.transformer.globalPrefix\n          })].concat(_toConsumableArray(dependencies.values())));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _getPrelude(_ref) {\n  var dev = _ref.dev,\n      globalPrefix = _ref.globalPrefix;\n  var code = getPreludeCode({\n    isDev: dev,\n    globalPrefix: globalPrefix\n  });\n  var name = \"__prelude__\";\n  return {\n    dependencies: new Map(),\n    getSource: function getSource() {\n      return Buffer.from(code);\n    },\n    inverseDependencies: new Set(),\n    path: name,\n    output: [{\n      type: \"js/script/virtual\",\n      data: {\n        code: code,\n        lineCount: countLines(code),\n        map: []\n      }\n    }, {\n      type: \"bytecode/script/virtual\",\n      data: {\n        bytecode: compile(code, {\n          sourceURL: \"__prelude__.virtual.js\"\n        }).bytecode\n      }\n    }]\n  };\n}\n\nmodule.exports = getPrependedScripts;","map":{"version":3,"names":["countLines","require","getPreludeCode","transformHelpers","defaults","compile","getPrependedScripts","config","options","bundler","deltaBundler","polyfillModuleNames","serializer","getPolyfills","platform","concat","transformOptions","type","moduleSystem","getResolveDependencyFn","getTransformFn","transformer","experimentalImportBundleSupport","resolve","transform","onProgress","shallow","getDependencies","dependencies","_getPrelude","dev","globalPrefix","values","code","isDev","name","Map","getSource","Buffer","from","inverseDependencies","Set","path","output","data","lineCount","map","bytecode","sourceURL","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/getPrependedScripts.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst countLines = require(\"./countLines\");\n\nconst getPreludeCode = require(\"./getPreludeCode\");\n\nconst transformHelpers = require(\"./transformHelpers\");\n\nconst defaults = require(\"metro-config/src/defaults/defaults\");\n\nconst { compile } = require(\"metro-hermes-compiler\");\n\nasync function getPrependedScripts(config, options, bundler, deltaBundler) {\n  // Get all the polyfills from the relevant option params (the\n  // `getPolyfills()` method and the `polyfillModuleNames` variable).\n  const polyfillModuleNames = config.serializer\n    .getPolyfills({\n      platform: options.platform,\n    })\n    .concat(config.serializer.polyfillModuleNames);\n  const transformOptions = { ...options, type: \"script\" };\n  const dependencies = await deltaBundler.getDependencies(\n    [defaults.moduleSystem, ...polyfillModuleNames],\n    {\n      resolve: await transformHelpers.getResolveDependencyFn(\n        bundler,\n        options.platform\n      ),\n      transform: await transformHelpers.getTransformFn(\n        [defaults.moduleSystem, ...polyfillModuleNames],\n        bundler,\n        deltaBundler,\n        config,\n        transformOptions\n      ),\n      transformOptions,\n      onProgress: null,\n      experimentalImportBundleSupport:\n        config.transformer.experimentalImportBundleSupport,\n      shallow: false,\n    }\n  );\n  return [\n    _getPrelude({\n      dev: options.dev,\n      globalPrefix: config.transformer.globalPrefix,\n    }),\n    ...dependencies.values(),\n  ];\n}\n\nfunction _getPrelude({ dev, globalPrefix }) {\n  const code = getPreludeCode({\n    isDev: dev,\n    globalPrefix,\n  });\n  const name = \"__prelude__\";\n  return {\n    dependencies: new Map(),\n    getSource: () => Buffer.from(code),\n    inverseDependencies: new Set(),\n    path: name,\n    output: [\n      {\n        type: \"js/script/virtual\",\n        data: {\n          code,\n          lineCount: countLines(code),\n          map: [],\n        },\n      },\n      {\n        type: \"bytecode/script/virtual\",\n        data: {\n          bytecode: compile(code, {\n            sourceURL: \"__prelude__.virtual.js\",\n          }).bytecode,\n        },\n      },\n    ],\n  };\n}\n\nmodule.exports = getPrependedScripts;\n"],"mappings":"AASA;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,gBAA1B;;AAEA,IAAMC,cAAc,GAAGD,OAAO,oBAA9B;;AAEA,IAAME,gBAAgB,GAAGF,OAAO,sBAAhC;;AAEA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,oCAAD,CAAxB;;AAEA,eAAoBA,OAAO,CAAC,uBAAD,CAA3B;AAAA,IAAQI,OAAR,YAAQA,OAAR;;AAEA,SAAeC,mBAAf,CAAmCC,MAAnC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6DC,YAA7D;EAAA;EAAA;IAAA;MAAA;QAAA;UAGQC,mBAHR,GAG8BJ,MAAM,CAACK,UAAP,CACzBC,YADyB,CACZ;YACZC,QAAQ,EAAEN,OAAO,CAACM;UADN,CADY,EAIzBC,MAJyB,CAIlBR,MAAM,CAACK,UAAP,CAAkBD,mBAJA,CAH9B;UAQQK,gBARR,mCAQgCR,OARhC;YAQyCS,IAAI,EAAE;UAR/C;UAAA;UAAA,cAS6BP,YAT7B;UAAA,eAUKN,QAAQ,CAACc,YAVd,4BAU+BP,mBAV/B;UAAA;UAAA,iCAYqBR,gBAAgB,CAACgB,sBAAjB,CACbV,OADa,EAEbD,OAAO,CAACM,QAFK,CAZrB;;QAAA;UAAA;UAAA;UAAA,iCAgBuBX,gBAAgB,CAACiB,cAAjB,EACdhB,QAAQ,CAACc,YADK,4BACYP,mBADZ,IAEfF,OAFe,EAGfC,YAHe,EAIfH,MAJe,EAKfS,gBALe,CAhBvB;;QAAA;UAAA;UAAA,cAuBMA,gBAvBN;UAAA,cA0BQT,MAAM,CAACc,WAAP,CAAmBC,+BA1B3B;UAAA;YAYMC,OAZN;YAgBMC,SAhBN;YAuBMR,gBAvBN;YAwBMS,UAxBN,EAwBkB,IAxBlB;YAyBMH,+BAzBN;YA2BMI,OA3BN,EA2Be;UA3Bf;UAAA,0BAS0CC,eAT1C;UAAA;UAAA;;QAAA;UASQC,YATR;UAAA,kCA+BIC,WAAW,CAAC;YACVC,GAAG,EAAEtB,OAAO,CAACsB,GADH;YAEVC,YAAY,EAAExB,MAAM,CAACc,WAAP,CAAmBU;UAFvB,CAAD,CA/Bf,4BAmCOH,YAAY,CAACI,MAAb,EAnCP;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAuCA,SAASH,WAAT,OAA4C;EAAA,IAArBC,GAAqB,QAArBA,GAAqB;EAAA,IAAhBC,YAAgB,QAAhBA,YAAgB;EAC1C,IAAME,IAAI,GAAG/B,cAAc,CAAC;IAC1BgC,KAAK,EAAEJ,GADmB;IAE1BC,YAAY,EAAZA;EAF0B,CAAD,CAA3B;EAIA,IAAMI,IAAI,GAAG,aAAb;EACA,OAAO;IACLP,YAAY,EAAE,IAAIQ,GAAJ,EADT;IAELC,SAAS,EAAE;MAAA,OAAMC,MAAM,CAACC,IAAP,CAAYN,IAAZ,CAAN;IAAA,CAFN;IAGLO,mBAAmB,EAAE,IAAIC,GAAJ,EAHhB;IAILC,IAAI,EAAEP,IAJD;IAKLQ,MAAM,EAAE,CACN;MACE1B,IAAI,EAAE,mBADR;MAEE2B,IAAI,EAAE;QACJX,IAAI,EAAJA,IADI;QAEJY,SAAS,EAAE7C,UAAU,CAACiC,IAAD,CAFjB;QAGJa,GAAG,EAAE;MAHD;IAFR,CADM,EASN;MACE7B,IAAI,EAAE,yBADR;MAEE2B,IAAI,EAAE;QACJG,QAAQ,EAAE1C,OAAO,CAAC4B,IAAD,EAAO;UACtBe,SAAS,EAAE;QADW,CAAP,CAAP,CAEPD;MAHC;IAFR,CATM;EALH,CAAP;AAwBD;;AAEDE,MAAM,CAACC,OAAP,GAAiB5C,mBAAjB"},"metadata":{},"sourceType":"script"}