{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _jestHasteMap = require(\"jest-haste-map\");\n\nvar createHasteMap = require(\"./DependencyGraph/createHasteMap\");\n\nvar _require = require(\"./DependencyGraph/ModuleResolution\"),\n    ModuleResolver = _require.ModuleResolver;\n\nvar Module = require(\"./Module\");\n\nvar ModuleCache = require(\"./ModuleCache\");\n\nvar _require2 = require(\"events\"),\n    EventEmitter = _require2.EventEmitter;\n\nvar fs = require(\"fs\");\n\nvar _require3 = require(\"metro-core\"),\n    AmbiguousModuleResolutionError = _require3.AmbiguousModuleResolutionError,\n    _require3$Logger = _require3.Logger,\n    createActionStartEntry = _require3$Logger.createActionStartEntry,\n    createActionEndEntry = _require3$Logger.createActionEndEntry,\n    log = _require3$Logger.log,\n    PackageResolutionError = _require3.PackageResolutionError;\n\nvar _require4 = require(\"metro-resolver\"),\n    InvalidPackageError = _require4.InvalidPackageError;\n\nvar nullthrows = require(\"nullthrows\");\n\nvar path = require(\"path\");\n\nvar DuplicateHasteCandidatesError = _jestHasteMap.ModuleMap.DuplicateHasteCandidatesError;\n\nfunction getOrCreate(map, field) {\n  var subMap = map.get(field);\n\n  if (!subMap) {\n    subMap = new Map();\n    map.set(field, subMap);\n  }\n\n  return subMap;\n}\n\nvar DependencyGraph = function (_EventEmitter) {\n  _inherits(DependencyGraph, _EventEmitter);\n\n  var _super = _createSuper(DependencyGraph);\n\n  function DependencyGraph(_ref) {\n    var _this;\n\n    var config = _ref.config,\n        haste = _ref.haste,\n        initialHasteFS = _ref.initialHasteFS,\n        initialModuleMap = _ref.initialModuleMap;\n\n    _classCallCheck(this, DependencyGraph);\n\n    _this = _super.call(this);\n\n    _this._doesFileExist = function (filePath) {\n      return _this._hasteFS.exists(filePath);\n    };\n\n    _this._config = config;\n    _this._haste = haste;\n    _this._hasteFS = initialHasteFS;\n    _this._moduleMap = initialModuleMap;\n    _this._assetExtensions = new Set(config.resolver.assetExts.map(function (asset) {\n      return \".\" + asset;\n    }));\n\n    _this._haste.on(\"change\", _this._onHasteChange.bind(_assertThisInitialized(_this)));\n\n    _this._resolutionCache = new Map();\n    _this._moduleCache = _this._createModuleCache();\n\n    _this._createModuleResolver();\n\n    return _this;\n  }\n\n  _createClass(DependencyGraph, [{\n    key: \"_getClosestPackage\",\n    value: function _getClosestPackage(filePath) {\n      var parsedPath = path.parse(filePath);\n      var root = parsedPath.root;\n      var dir = parsedPath.dir;\n\n      do {\n        var candidate = path.join(dir, \"package.json\");\n\n        if (this._hasteFS.exists(candidate)) {\n          return candidate;\n        }\n\n        dir = path.dirname(dir);\n      } while (dir !== \".\" && dir !== root);\n\n      return null;\n    }\n  }, {\n    key: \"_onHasteChange\",\n    value: function _onHasteChange(_ref2) {\n      var _this2 = this;\n\n      var eventsQueue = _ref2.eventsQueue,\n          hasteFS = _ref2.hasteFS,\n          moduleMap = _ref2.moduleMap;\n      this._hasteFS = hasteFS;\n      this._resolutionCache = new Map();\n      this._moduleMap = moduleMap;\n      eventsQueue.forEach(function (_ref3) {\n        var type = _ref3.type,\n            filePath = _ref3.filePath;\n        return _this2._moduleCache.processFileChange(type, filePath);\n      });\n\n      this._createModuleResolver();\n\n      this.emit(\"change\");\n    }\n  }, {\n    key: \"_createModuleResolver\",\n    value: function _createModuleResolver() {\n      var _this3 = this;\n\n      this._moduleResolver = new ModuleResolver({\n        dirExists: function dirExists(filePath) {\n          try {\n            return fs.lstatSync(filePath).isDirectory();\n          } catch (e) {}\n\n          return false;\n        },\n        disableHierarchicalLookup: this._config.resolver.disableHierarchicalLookup,\n        doesFileExist: this._doesFileExist,\n        emptyModulePath: this._config.resolver.emptyModulePath,\n        extraNodeModules: this._config.resolver.extraNodeModules,\n        isAssetFile: function isAssetFile(file) {\n          return _this3._assetExtensions.has(path.extname(file));\n        },\n        mainFields: this._config.resolver.resolverMainFields,\n        moduleCache: this._moduleCache,\n        moduleMap: this._moduleMap,\n        nodeModulesPaths: this._config.resolver.nodeModulesPaths,\n        preferNativePlatform: true,\n        projectRoot: this._config.projectRoot,\n        resolveAsset: function resolveAsset(dirPath, assetName, extension) {\n          var basePath = dirPath + path.sep + assetName;\n          var assets = [basePath + extension].concat(_toConsumableArray(_this3._config.resolver.assetResolutions.map(function (resolution) {\n            return basePath + \"@\" + resolution + \"x\" + extension;\n          }))).filter(function (candidate) {\n            return _this3._hasteFS.exists(candidate);\n          });\n          return assets.length ? assets : null;\n        },\n        resolveRequest: this._config.resolver.resolveRequest,\n        sourceExts: this._config.resolver.sourceExts\n      });\n    }\n  }, {\n    key: \"_createModuleCache\",\n    value: function _createModuleCache() {\n      return new ModuleCache({\n        getClosestPackage: this._getClosestPackage.bind(this)\n      });\n    }\n  }, {\n    key: \"getSha1\",\n    value: function getSha1(filename) {\n      var splitIndex = filename.indexOf(\".zip/\");\n      var containerName = splitIndex !== -1 ? filename.slice(0, splitIndex + 4) : filename;\n      var resolvedPath = fs.realpathSync(containerName);\n\n      var sha1 = this._hasteFS.getSha1(resolvedPath);\n\n      if (!sha1) {\n        throw new ReferenceError(\"SHA-1 for file \" + filename + \" (\" + resolvedPath + \") is not computed.\\n         Potential causes:\\n           1) You have symlinks in your project - watchman does not follow symlinks.\\n           2) Check `blockList` in your metro.config.js and make sure it isn't excluding the file path.\");\n      }\n\n      return sha1;\n    }\n  }, {\n    key: \"getWatcher\",\n    value: function getWatcher() {\n      return this._haste;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this._haste.end();\n    }\n  }, {\n    key: \"resolveDependency\",\n    value: function resolveDependency(from, to, platform) {\n      var _ref4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        assumeFlatNodeModules: false\n      },\n          assumeFlatNodeModules = _ref4.assumeFlatNodeModules;\n\n      var isSensitiveToOriginFolder = !assumeFlatNodeModules || to.includes(\"/\") || to === \".\" || to === \"..\" || from.includes(path.sep + \"node_modules\" + path.sep);\n      var mapByDirectory = getOrCreate(this._resolutionCache, isSensitiveToOriginFolder ? path.dirname(from) : \"\");\n      var mapByPlatform = getOrCreate(mapByDirectory, to);\n      var modulePath = mapByPlatform.get(platform);\n\n      if (!modulePath) {\n        try {\n          modulePath = this._moduleResolver.resolveDependency(this._moduleCache.getModule(from), to, true, platform).path;\n        } catch (error) {\n          if (error instanceof DuplicateHasteCandidatesError) {\n            throw new AmbiguousModuleResolutionError(from, error);\n          }\n\n          if (error instanceof InvalidPackageError) {\n            throw new PackageResolutionError({\n              packageError: error,\n              originModulePath: from,\n              targetModuleName: to\n            });\n          }\n\n          throw error;\n        }\n      }\n\n      mapByPlatform.set(platform, modulePath);\n      return modulePath;\n    }\n  }, {\n    key: \"getHasteName\",\n    value: function getHasteName(filePath) {\n      var hasteName = this._hasteFS.getModuleName(filePath);\n\n      if (hasteName) {\n        return hasteName;\n      }\n\n      return path.relative(this._config.projectRoot, filePath);\n    }\n  }, {\n    key: \"getDependencies\",\n    value: function getDependencies(filePath) {\n      return nullthrows(this._hasteFS.getDependencies(filePath));\n    }\n  }], [{\n    key: \"load\",\n    value: function load(config, options) {\n      var _ref5, hasReducedPerformance, watch, initializingMetroLogEntry, haste, _await$haste$build, hasteFS, moduleMap;\n\n      return _regeneratorRuntime.async(function load$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref5 = options !== null && options !== void 0 ? options : {}, hasReducedPerformance = _ref5.hasReducedPerformance, watch = _ref5.watch;\n              initializingMetroLogEntry = log(createActionStartEntry(\"Initializing Metro\"));\n              config.reporter.update({\n                type: \"dep_graph_loading\",\n                hasReducedPerformance: !!hasReducedPerformance\n              });\n              haste = createHasteMap(config, {\n                watch: watch\n              });\n              haste.setMaxListeners(1000);\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(haste.build());\n\n            case 7:\n              _await$haste$build = _context.sent;\n              hasteFS = _await$haste$build.hasteFS;\n              moduleMap = _await$haste$build.moduleMap;\n              log(createActionEndEntry(initializingMetroLogEntry));\n              config.reporter.update({\n                type: \"dep_graph_loaded\"\n              });\n              return _context.abrupt(\"return\", new DependencyGraph({\n                haste: haste,\n                initialHasteFS: hasteFS,\n                initialModuleMap: moduleMap,\n                config: config\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return DependencyGraph;\n}(EventEmitter);\n\nmodule.exports = DependencyGraph;","map":{"version":3,"names":["_jestHasteMap","require","createHasteMap","ModuleResolver","Module","ModuleCache","EventEmitter","fs","AmbiguousModuleResolutionError","Logger","createActionStartEntry","createActionEndEntry","log","PackageResolutionError","InvalidPackageError","nullthrows","path","DuplicateHasteCandidatesError","ModuleMap","getOrCreate","map","field","subMap","get","Map","set","DependencyGraph","config","haste","initialHasteFS","initialModuleMap","_doesFileExist","filePath","_hasteFS","exists","_config","_haste","_moduleMap","_assetExtensions","Set","resolver","assetExts","asset","on","_onHasteChange","bind","_resolutionCache","_moduleCache","_createModuleCache","_createModuleResolver","parsedPath","parse","root","dir","candidate","join","dirname","eventsQueue","hasteFS","moduleMap","forEach","type","processFileChange","emit","_moduleResolver","dirExists","lstatSync","isDirectory","e","disableHierarchicalLookup","doesFileExist","emptyModulePath","extraNodeModules","isAssetFile","file","has","extname","mainFields","resolverMainFields","moduleCache","nodeModulesPaths","preferNativePlatform","projectRoot","resolveAsset","dirPath","assetName","extension","basePath","sep","assets","assetResolutions","resolution","filter","length","resolveRequest","sourceExts","getClosestPackage","_getClosestPackage","filename","splitIndex","indexOf","containerName","slice","resolvedPath","realpathSync","sha1","getSha1","ReferenceError","end","from","to","platform","assumeFlatNodeModules","isSensitiveToOriginFolder","includes","mapByDirectory","mapByPlatform","modulePath","resolveDependency","getModule","error","packageError","originModulePath","targetModuleName","hasteName","getModuleName","relative","getDependencies","options","hasReducedPerformance","watch","initializingMetroLogEntry","reporter","update","setMaxListeners","build","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/node-haste/DependencyGraph.js"],"sourcesContent":["\"use strict\";\n\nvar _jestHasteMap = require(\"jest-haste-map\");\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\nconst createHasteMap = require(\"./DependencyGraph/createHasteMap\");\n\nconst { ModuleResolver } = require(\"./DependencyGraph/ModuleResolution\");\n\nconst Module = require(\"./Module\");\n\nconst ModuleCache = require(\"./ModuleCache\");\n\nconst { EventEmitter } = require(\"events\");\n\nconst fs = require(\"fs\");\n\nconst {\n  AmbiguousModuleResolutionError,\n  Logger: { createActionStartEntry, createActionEndEntry, log },\n  PackageResolutionError,\n} = require(\"metro-core\");\n\nconst { InvalidPackageError } = require(\"metro-resolver\");\n\nconst nullthrows = require(\"nullthrows\");\n\nconst path = require(\"path\");\n\nconst { DuplicateHasteCandidatesError } = _jestHasteMap.ModuleMap;\n\nfunction getOrCreate(map, field) {\n  let subMap = map.get(field);\n\n  if (!subMap) {\n    subMap = new Map();\n    map.set(field, subMap);\n  }\n\n  return subMap;\n}\n\nclass DependencyGraph extends EventEmitter {\n  constructor({ config, haste, initialHasteFS, initialModuleMap }) {\n    super();\n    this._config = config;\n    this._haste = haste;\n    this._hasteFS = initialHasteFS;\n    this._moduleMap = initialModuleMap;\n    this._assetExtensions = new Set(\n      config.resolver.assetExts.map((asset) => \".\" + asset)\n    ); // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n\n    this._haste.on(\"change\", this._onHasteChange.bind(this));\n\n    this._resolutionCache = new Map();\n    this._moduleCache = this._createModuleCache();\n\n    this._createModuleResolver();\n  }\n\n  static async load(config, options) {\n    const { hasReducedPerformance, watch } =\n      options !== null && options !== void 0 ? options : {};\n    const initializingMetroLogEntry = log(\n      createActionStartEntry(\"Initializing Metro\")\n    );\n    config.reporter.update({\n      type: \"dep_graph_loading\",\n      hasReducedPerformance: !!hasReducedPerformance,\n    });\n    const haste = createHasteMap(config, {\n      watch,\n    }); // We can have a lot of graphs listening to Haste for changes.\n    // Bump this up to silence the max listeners EventEmitter warning.\n\n    haste.setMaxListeners(1000);\n    const { hasteFS, moduleMap } = await haste.build();\n    log(createActionEndEntry(initializingMetroLogEntry));\n    config.reporter.update({\n      type: \"dep_graph_loaded\",\n    });\n    return new DependencyGraph({\n      haste,\n      initialHasteFS: hasteFS,\n      initialModuleMap: moduleMap,\n      config,\n    });\n  }\n\n  _getClosestPackage(filePath) {\n    const parsedPath = path.parse(filePath);\n    const root = parsedPath.root;\n    let dir = parsedPath.dir;\n\n    do {\n      const candidate = path.join(dir, \"package.json\");\n\n      if (this._hasteFS.exists(candidate)) {\n        return candidate;\n      }\n\n      dir = path.dirname(dir);\n    } while (dir !== \".\" && dir !== root);\n\n    return null;\n  }\n\n  _onHasteChange({ eventsQueue, hasteFS, moduleMap }) {\n    this._hasteFS = hasteFS;\n    this._resolutionCache = new Map();\n    this._moduleMap = moduleMap;\n    eventsQueue.forEach(({ type, filePath }) =>\n      this._moduleCache.processFileChange(type, filePath)\n    );\n\n    this._createModuleResolver();\n\n    this.emit(\"change\");\n  }\n\n  _createModuleResolver() {\n    this._moduleResolver = new ModuleResolver({\n      dirExists: (filePath) => {\n        try {\n          return fs.lstatSync(filePath).isDirectory();\n        } catch (e) {}\n\n        return false;\n      },\n      disableHierarchicalLookup:\n        this._config.resolver.disableHierarchicalLookup,\n      doesFileExist: this._doesFileExist,\n      emptyModulePath: this._config.resolver.emptyModulePath,\n      extraNodeModules: this._config.resolver.extraNodeModules,\n      isAssetFile: (file) => this._assetExtensions.has(path.extname(file)),\n      mainFields: this._config.resolver.resolverMainFields,\n      moduleCache: this._moduleCache,\n      moduleMap: this._moduleMap,\n      nodeModulesPaths: this._config.resolver.nodeModulesPaths,\n      preferNativePlatform: true,\n      projectRoot: this._config.projectRoot,\n      resolveAsset: (dirPath, assetName, extension) => {\n        const basePath = dirPath + path.sep + assetName;\n        const assets = [\n          basePath + extension,\n          ...this._config.resolver.assetResolutions.map(\n            (resolution) => basePath + \"@\" + resolution + \"x\" + extension\n          ),\n        ].filter((candidate) => this._hasteFS.exists(candidate));\n        return assets.length ? assets : null;\n      },\n      resolveRequest: this._config.resolver.resolveRequest,\n      sourceExts: this._config.resolver.sourceExts,\n    });\n  }\n\n  _createModuleCache() {\n    return new ModuleCache({\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      getClosestPackage: this._getClosestPackage.bind(this),\n    });\n  }\n\n  getSha1(filename) {\n    // TODO If it looks like we're trying to get the sha1 from a file located\n    // within a Zip archive, then we instead compute the sha1 for what looks\n    // like the Zip archive itself.\n    const splitIndex = filename.indexOf(\".zip/\");\n    const containerName =\n      splitIndex !== -1 ? filename.slice(0, splitIndex + 4) : filename; // TODO Calling realpath allows us to get a hash for a given path even when\n    // it's a symlink to a file, which prevents Metro from crashing in such a\n    // case. However, it doesn't allow Metro to track changes to the target file\n    // of the symlink. We should fix this by implementing a symlink map into\n    // Metro (or maybe by implementing those \"extra transformation sources\" we've\n    // been talking about for stuff like CSS or WASM).\n\n    const resolvedPath = fs.realpathSync(containerName);\n\n    const sha1 = this._hasteFS.getSha1(resolvedPath);\n\n    if (!sha1) {\n      throw new ReferenceError(`SHA-1 for file ${filename} (${resolvedPath}) is not computed.\n         Potential causes:\n           1) You have symlinks in your project - watchman does not follow symlinks.\n           2) Check \\`blockList\\` in your metro.config.js and make sure it isn't excluding the file path.`);\n    }\n\n    return sha1;\n  }\n\n  getWatcher() {\n    return this._haste;\n  }\n\n  end() {\n    this._haste.end();\n  }\n\n  resolveDependency(\n    from,\n    to,\n    platform,\n    { assumeFlatNodeModules } = {\n      assumeFlatNodeModules: false,\n    }\n  ) {\n    const isSensitiveToOriginFolder = // Resolution is always relative to the origin folder unless we assume a flat node_modules\n      !assumeFlatNodeModules || // Path requests are resolved relative to the origin folder\n      to.includes(\"/\") ||\n      to === \".\" ||\n      to === \"..\" || // Preserve standard assumptions under node_modules\n      from.includes(path.sep + \"node_modules\" + path.sep);\n    const mapByDirectory = getOrCreate(\n      this._resolutionCache,\n      isSensitiveToOriginFolder ? path.dirname(from) : \"\"\n    );\n    const mapByPlatform = getOrCreate(mapByDirectory, to);\n    let modulePath = mapByPlatform.get(platform);\n\n    if (!modulePath) {\n      try {\n        modulePath = this._moduleResolver.resolveDependency(\n          this._moduleCache.getModule(from),\n          to,\n          true,\n          platform\n        ).path;\n      } catch (error) {\n        if (error instanceof DuplicateHasteCandidatesError) {\n          throw new AmbiguousModuleResolutionError(from, error);\n        }\n\n        if (error instanceof InvalidPackageError) {\n          throw new PackageResolutionError({\n            packageError: error,\n            originModulePath: from,\n            targetModuleName: to,\n          });\n        }\n\n        throw error;\n      }\n    }\n\n    mapByPlatform.set(platform, modulePath);\n    return modulePath;\n  }\n\n  _doesFileExist = (filePath) => {\n    return this._hasteFS.exists(filePath);\n  };\n\n  getHasteName(filePath) {\n    const hasteName = this._hasteFS.getModuleName(filePath);\n\n    if (hasteName) {\n      return hasteName;\n    }\n\n    return path.relative(this._config.projectRoot, filePath);\n  }\n\n  getDependencies(filePath) {\n    return nullthrows(this._hasteFS.getDependencies(filePath));\n  }\n}\n\nmodule.exports = DependencyGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}