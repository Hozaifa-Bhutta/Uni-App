{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\n\nvar _HermesParserDeserializer = _interopRequireDefault(require(\"./HermesParserDeserializer\"));\n\nvar _HermesParserWASM = _interopRequireDefault(require(\"./HermesParserWASM\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar hermesParse = _HermesParserWASM.default.cwrap('hermesParse', 'number', ['number', 'number', 'number', 'number', 'number']);\n\nvar hermesParseResult_free = _HermesParserWASM.default.cwrap('hermesParseResult_free', 'void', ['number']);\n\nvar hermesParseResult_getError = _HermesParserWASM.default.cwrap('hermesParseResult_getError', 'string', ['number']);\n\nvar hermesParseResult_getErrorLine = _HermesParserWASM.default.cwrap('hermesParseResult_getErrorLine', 'number', ['number']);\n\nvar hermesParseResult_getErrorColumn = _HermesParserWASM.default.cwrap('hermesParseResult_getErrorColumn', 'number', ['number']);\n\nvar hermesParseResult_getProgramBuffer = _HermesParserWASM.default.cwrap('hermesParseResult_getProgramBuffer', 'number', ['number']);\n\nvar hermesParseResult_getPositionBuffer = _HermesParserWASM.default.cwrap('hermesParseResult_getPositionBuffer', 'number', ['number']);\n\nvar hermesParseResult_getPositionBufferSize = _HermesParserWASM.default.cwrap('hermesParseResult_getPositionBufferSize', 'number', ['number']);\n\nfunction copyToHeap(buffer, addr) {\n  _HermesParserWASM.default.HEAP8.set(buffer, addr);\n\n  _HermesParserWASM.default.HEAP8[addr + buffer.length] = 0;\n}\n\nfunction parse(source, options) {\n  var sourceBuffer = Buffer.from(source, 'utf8');\n\n  var sourceAddr = _HermesParserWASM.default._malloc(sourceBuffer.length + 1);\n\n  if (!sourceAddr) {\n    throw new Error('Parser out of memory');\n  }\n\n  try {\n    copyToHeap(sourceBuffer, sourceAddr);\n    var parseResult = hermesParse(sourceAddr, sourceBuffer.length + 1, options.flow === 'detect', options.tokens, options.allowReturnOutsideFunction);\n\n    try {\n      var err = hermesParseResult_getError(parseResult);\n\n      if (err) {\n        var syntaxError = new SyntaxError(err);\n        syntaxError.loc = {\n          line: hermesParseResult_getErrorLine(parseResult),\n          column: hermesParseResult_getErrorColumn(parseResult)\n        };\n        throw syntaxError;\n      }\n\n      var deserializer = new _HermesParserDeserializer.default(hermesParseResult_getProgramBuffer(parseResult), hermesParseResult_getPositionBuffer(parseResult), hermesParseResult_getPositionBufferSize(parseResult), _HermesParserWASM.default, options);\n      return deserializer.deserialize();\n    } finally {\n      hermesParseResult_free(parseResult);\n    }\n  } finally {\n    _HermesParserWASM.default._free(sourceAddr);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","parse","_HermesParserDeserializer","_interopRequireDefault","require","_HermesParserWASM","obj","__esModule","default","hermesParse","cwrap","hermesParseResult_free","hermesParseResult_getError","hermesParseResult_getErrorLine","hermesParseResult_getErrorColumn","hermesParseResult_getProgramBuffer","hermesParseResult_getPositionBuffer","hermesParseResult_getPositionBufferSize","copyToHeap","buffer","addr","HEAP8","set","length","source","options","sourceBuffer","Buffer","from","sourceAddr","_malloc","Error","parseResult","flow","tokens","allowReturnOutsideFunction","err","syntaxError","SyntaxError","loc","line","column","deserializer","deserialize","_free"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/hermes-parser/dist/HermesParser.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\n\nvar _HermesParserDeserializer = _interopRequireDefault(require(\"./HermesParserDeserializer\"));\n\nvar _HermesParserWASM = _interopRequireDefault(require(\"./HermesParserWASM\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst hermesParse = _HermesParserWASM.default.cwrap('hermesParse', 'number', ['number', 'number', 'number', 'number', 'number']);\n\nconst hermesParseResult_free = _HermesParserWASM.default.cwrap('hermesParseResult_free', 'void', ['number']);\n\nconst hermesParseResult_getError = _HermesParserWASM.default.cwrap('hermesParseResult_getError', 'string', ['number']);\n\nconst hermesParseResult_getErrorLine = _HermesParserWASM.default.cwrap('hermesParseResult_getErrorLine', 'number', ['number']);\n\nconst hermesParseResult_getErrorColumn = _HermesParserWASM.default.cwrap('hermesParseResult_getErrorColumn', 'number', ['number']);\n\nconst hermesParseResult_getProgramBuffer = _HermesParserWASM.default.cwrap('hermesParseResult_getProgramBuffer', 'number', ['number']);\n\nconst hermesParseResult_getPositionBuffer = _HermesParserWASM.default.cwrap('hermesParseResult_getPositionBuffer', 'number', ['number']);\n\nconst hermesParseResult_getPositionBufferSize = _HermesParserWASM.default.cwrap('hermesParseResult_getPositionBufferSize', 'number', ['number']); // Copy a string into the WASM heap and null-terminate\n\n\nfunction copyToHeap(buffer, addr) {\n  _HermesParserWASM.default.HEAP8.set(buffer, addr);\n\n  _HermesParserWASM.default.HEAP8[addr + buffer.length] = 0;\n}\n\nfunction parse(source, options) {\n  // Allocate space on heap for source text\n  const sourceBuffer = Buffer.from(source, 'utf8');\n\n  const sourceAddr = _HermesParserWASM.default._malloc(sourceBuffer.length + 1);\n\n  if (!sourceAddr) {\n    throw new Error('Parser out of memory');\n  }\n\n  try {\n    // Copy source text onto WASM heap\n    copyToHeap(sourceBuffer, sourceAddr);\n    const parseResult = hermesParse(sourceAddr, sourceBuffer.length + 1, options.flow === 'detect', options.tokens, options.allowReturnOutsideFunction);\n\n    try {\n      // Extract and throw error from parse result if parsing failed\n      const err = hermesParseResult_getError(parseResult);\n\n      if (err) {\n        const syntaxError = new SyntaxError(err); // $FlowExpectedError[prop-missing]\n\n        syntaxError.loc = {\n          line: hermesParseResult_getErrorLine(parseResult),\n          column: hermesParseResult_getErrorColumn(parseResult)\n        };\n        throw syntaxError;\n      }\n\n      const deserializer = new _HermesParserDeserializer.default(hermesParseResult_getProgramBuffer(parseResult), hermesParseResult_getPositionBuffer(parseResult), hermesParseResult_getPositionBufferSize(parseResult), _HermesParserWASM.default, options);\n      return deserializer.deserialize();\n    } finally {\n      hermesParseResult_free(parseResult);\n    }\n  } finally {\n    _HermesParserWASM.default._free(sourceAddr);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}