{"ast":null,"code":"\"use strict\";\n\nfunction canonicalize(key, value) {\n  if (value === null || typeof value !== \"object\" || Array.isArray(value)) {\n    return value;\n  }\n\n  var keys = Object.keys(value).sort();\n  var length = keys.length;\n  var object = {};\n\n  for (var i = 0; i < length; i++) {\n    object[keys[i]] = value[keys[i]];\n  }\n\n  return object;\n}\n\nmodule.exports = canonicalize;","map":{"version":3,"names":["canonicalize","key","value","Array","isArray","keys","Object","sort","length","object","i","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-core/src/canonicalize.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nfunction canonicalize(key, value) {\n  if (\n    // eslint-disable-next-line lint/strictly-null\n    value === null ||\n    typeof value !== \"object\" ||\n    Array.isArray(value)\n  ) {\n    return value;\n  }\n\n  const keys = Object.keys(value).sort();\n  const length = keys.length;\n  const object = {};\n\n  for (let i = 0; i < length; i++) {\n    object[keys[i]] = value[keys[i]];\n  }\n\n  return object;\n}\n\nmodule.exports = canonicalize;\n"],"mappings":"AASA;;AAEA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,KAA3B,EAAkC;EAChC,IAEEA,KAAK,KAAK,IAAV,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEAC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAJF,EAKE;IACA,OAAOA,KAAP;EACD;;EAED,IAAMG,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,KAAZ,EAAmBK,IAAnB,EAAb;EACA,IAAMC,MAAM,GAAGH,IAAI,CAACG,MAApB;EACA,IAAMC,MAAM,GAAG,EAAf;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;IAC/BD,MAAM,CAACJ,IAAI,CAACK,CAAD,CAAL,CAAN,GAAkBR,KAAK,CAACG,IAAI,CAACK,CAAD,CAAL,CAAvB;EACD;;EAED,OAAOD,MAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBZ,YAAjB"},"metadata":{},"sourceType":"script"}