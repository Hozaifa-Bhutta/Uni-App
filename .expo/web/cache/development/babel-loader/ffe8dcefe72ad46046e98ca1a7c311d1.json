{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findDependencies;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction findDependencies(root) {\n  var pjson;\n\n  try {\n    pjson = JSON.parse(_fs().default.readFileSync(_path().default.join(root, 'package.json'), 'UTF-8'));\n  } catch (e) {\n    return [];\n  }\n\n  var deps = [].concat(_toConsumableArray(Object.keys(pjson.dependencies || {})), _toConsumableArray(Object.keys(pjson.devDependencies || {})));\n  return deps;\n}","map":{"version":3,"sources":["../src/findDependencies.ts"],"names":["pjson","JSON","fs","path","deps","Object"],"mappings":";;;;;;;;;AAAA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;;;;;;;AAKe,SAAA,gBAAA,CAAA,IAAA,EAAuD;EACpE,IAAA,KAAA;;EAEA,IAAI;IACFA,KAAK,GAAGC,IAAI,CAAJA,KAAAA,CACNC,GAAAA,GAAAA,OAAAA,CAAAA,YAAAA,CAAgBC,KAAAA,GAAAA,OAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAhBD,cAAgBC,CAAhBD,EADFF,OACEE,CADMD,CAARD;EADF,CAAA,CAIE,OAAA,CAAA,EAAU;IACV,OAAA,EAAA;EACD;;EAED,IAAMI,IAAI,gCACLC,MAAM,CAANA,IAAAA,CAAYL,KAAK,CAALA,YAAAA,IADJ,EACRK,CADK,sBAELA,MAAM,CAANA,IAAAA,CAAYL,KAAK,CAALA,eAAAA,IAFjB,EAEKK,CAFK,EAAV;EAKA,OAAA,IAAA;AACD","sourcesContent":["import path from 'path';\nimport fs from 'fs';\n\n/**\n * Returns an array of dependencies from project's package.json\n */\nexport default function findDependencies(root: string): Array<string> {\n  let pjson;\n\n  try {\n    pjson = JSON.parse(\n      fs.readFileSync(path.join(root, 'package.json'), 'UTF-8'),\n    );\n  } catch (e) {\n    return [];\n  }\n\n  const deps = [\n    ...Object.keys(pjson.dependencies || {}),\n    ...Object.keys(pjson.devDependencies || {}),\n  ];\n\n  return deps;\n}\n"]},"metadata":{},"sourceType":"script"}