{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar SEPARATOR = ', ';\nvar verbose = false;\nvar disabled = false;\n\nvar formatMessages = function formatMessages(messages) {\n  return _chalk().default.reset(messages.join(SEPARATOR));\n};\n\nvar success = function success() {\n  if (!disabled) {\n    for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n      messages[_key] = arguments[_key];\n    }\n\n    console.log(_chalk().default.green.bold('success') + \" \" + formatMessages(messages));\n  }\n};\n\nvar info = function info() {\n  if (!disabled) {\n    for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      messages[_key2] = arguments[_key2];\n    }\n\n    console.log(_chalk().default.cyan.bold('info') + \" \" + formatMessages(messages));\n  }\n};\n\nvar warn = function warn() {\n  if (!disabled) {\n    for (var _len3 = arguments.length, messages = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      messages[_key3] = arguments[_key3];\n    }\n\n    console.warn(_chalk().default.yellow.bold('warn') + \" \" + formatMessages(messages));\n  }\n};\n\nvar error = function error() {\n  if (!disabled) {\n    for (var _len4 = arguments.length, messages = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      messages[_key4] = arguments[_key4];\n    }\n\n    console.error(_chalk().default.red.bold('error') + \" \" + formatMessages(messages));\n  }\n};\n\nvar debug = function debug() {\n  if (verbose && !disabled) {\n    for (var _len5 = arguments.length, messages = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      messages[_key5] = arguments[_key5];\n    }\n\n    console.log(_chalk().default.gray.bold('debug') + \" \" + formatMessages(messages));\n  }\n};\n\nvar log = function log() {\n  if (!disabled) {\n    for (var _len6 = arguments.length, messages = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      messages[_key6] = arguments[_key6];\n    }\n\n    console.log(\"\" + formatMessages(messages));\n  }\n};\n\nvar setVerbose = function setVerbose(level) {\n  verbose = level;\n};\n\nvar isVerbose = function isVerbose() {\n  return verbose;\n};\n\nvar disable = function disable() {\n  disabled = true;\n};\n\nvar enable = function enable() {\n  disabled = false;\n};\n\nvar _default = {\n  success: success,\n  info: info,\n  warn: warn,\n  error: error,\n  debug: debug,\n  log: log,\n  setVerbose: setVerbose,\n  isVerbose: isVerbose,\n  disable: disable,\n  enable: enable\n};\nexports.default = _default;","map":{"version":3,"sources":["../src/logger.ts"],"names":["SEPARATOR","verbose","disabled","formatMessages","messages","chalk","success","console","info","warn","error","debug","log","setVerbose","level","isVerbose","disable","enable"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\n\nconst SEPARATOR = ', ';\n\nlet verbose = false;\nlet disabled = false;\n\nconst formatMessages = (messages: Array<string>) =>\n  chalk.reset(messages.join(SEPARATOR));\n\nconst success = (...messages: Array<string>) => {\n  if (!disabled) {\n    console.log(`${chalk.green.bold('success')} ${formatMessages(messages)}`);\n  }\n};\n\nconst info = (...messages: Array<string>) => {\n  if (!disabled) {\n    console.log(`${chalk.cyan.bold('info')} ${formatMessages(messages)}`);\n  }\n};\n\nconst warn = (...messages: Array<string>) => {\n  if (!disabled) {\n    console.warn(`${chalk.yellow.bold('warn')} ${formatMessages(messages)}`);\n  }\n};\n\nconst error = (...messages: Array<string>) => {\n  if (!disabled) {\n    console.error(`${chalk.red.bold('error')} ${formatMessages(messages)}`);\n  }\n};\n\nconst debug = (...messages: Array<string>) => {\n  if (verbose && !disabled) {\n    console.log(`${chalk.gray.bold('debug')} ${formatMessages(messages)}`);\n  }\n};\n\nconst log = (...messages: Array<string>) => {\n  if (!disabled) {\n    console.log(`${formatMessages(messages)}`);\n  }\n};\n\nconst setVerbose = (level: boolean) => {\n  verbose = level;\n};\n\nconst isVerbose = () => verbose;\n\nconst disable = () => {\n  disabled = true;\n};\n\nconst enable = () => {\n  disabled = false;\n};\n\nexport default {\n  success,\n  info,\n  warn,\n  error,\n  debug,\n  log,\n  setVerbose,\n  isVerbose,\n  disable,\n  enable,\n};\n"]},"metadata":{},"sourceType":"script"}