{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _marked = _regeneratorRuntime.mark(zip);\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _require = require(\"./Assets\"),\n    getAsset = _require.getAsset;\n\nvar baseBytecodeBundle = require(\"./DeltaBundler/Serializers/baseBytecodeBundle\");\n\nvar baseJSBundle = require(\"./DeltaBundler/Serializers/baseJSBundle\");\n\nvar getAllFiles = require(\"./DeltaBundler/Serializers/getAllFiles\");\n\nvar _getAssets = require(\"./DeltaBundler/Serializers/getAssets\");\n\nvar _require2 = require(\"./DeltaBundler/Serializers/getExplodedSourceMap\"),\n    getExplodedSourceMap = _require2.getExplodedSourceMap;\n\nvar _getRamBundleInfo = require(\"./DeltaBundler/Serializers/getRamBundleInfo\");\n\nvar sourceMapString = require(\"./DeltaBundler/Serializers/sourceMapString\");\n\nvar IncrementalBundler = require(\"./IncrementalBundler\");\n\nvar ResourceNotFoundError = require(\"./IncrementalBundler/ResourceNotFoundError\");\n\nvar bundleToBytecode = require(\"./lib/bundleToBytecode\");\n\nvar bundleToString = require(\"./lib/bundleToString\");\n\nvar formatBundlingError = require(\"./lib/formatBundlingError\");\n\nvar getGraphId = require(\"./lib/getGraphId\");\n\nvar parseOptionsFromUrl = require(\"./lib/parseOptionsFromUrl\");\n\nvar splitBundleOptions = require(\"./lib/splitBundleOptions\");\n\nvar transformHelpers = require(\"./lib/transformHelpers\");\n\nvar parsePlatformFilePath = require(\"./node-haste/lib/parsePlatformFilePath\");\n\nvar MultipartResponse = require(\"./Server/MultipartResponse\");\n\nvar symbolicate = require(\"./Server/symbolicate\");\n\nvar _require3 = require(\"@babel/code-frame\"),\n    codeFrameColumns = _require3.codeFrameColumns;\n\nvar debug = require(\"debug\")(\"Metro:Server\");\n\nvar fs = require(\"graceful-fs\");\n\nvar _require4 = require(\"metro-core\"),\n    Logger = _require4.Logger,\n    _require4$Logger = _require4.Logger,\n    createActionStartEntry = _require4$Logger.createActionStartEntry,\n    createActionEndEntry = _require4$Logger.createActionEndEntry,\n    log = _require4$Logger.log;\n\nvar _require5 = require(\"metro-hermes-compiler\"),\n    BYTECODE_VERSION = _require5.VERSION;\n\nvar mime = require(\"mime-types\");\n\nvar nullthrows = require(\"nullthrows\");\n\nvar path = require(\"path\");\n\nvar querystring = require(\"querystring\");\n\nvar url = require(\"url\");\n\nvar DELTA_ID_HEADER = \"X-Metro-Delta-ID\";\nvar FILES_CHANGED_COUNT_HEADER = \"X-Metro-Files-Changed-Count\";\n\nvar Server = function () {\n  function Server(config, options) {\n    var _this = this;\n\n    _classCallCheck(this, Server);\n\n    this.processRequest = function (req, res, next) {\n      _this._processRequest(req, res, next).catch(next);\n    };\n\n    this._processBundleRequest = this._createRequestProcessor({\n      createStartEntry: function createStartEntry(context) {\n        return {\n          action_name: \"Requesting bundle\",\n          bundle_url: context.req.url,\n          entry_point: context.entryFile,\n          bundler: \"delta\",\n          build_id: context.buildID,\n          bundle_options: context.bundleOptions,\n          bundle_hash: context.graphId\n        };\n      },\n      createEndEntry: function createEndEntry(context) {\n        return {\n          outdated_modules: context.result.numModifiedFiles\n        };\n      },\n      build: function build(_ref) {\n        var entryFile, graphId, graphOptions, onProgress, serializerOptions, transformOptions, _this$_config$server$3, revPromise, _await, delta, revision, serializer, bundle, bundleCode;\n\n        return _regeneratorRuntime.async(function build$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                entryFile = _ref.entryFile, graphId = _ref.graphId, graphOptions = _ref.graphOptions, onProgress = _ref.onProgress, serializerOptions = _ref.serializerOptions, transformOptions = _ref.transformOptions;\n                revPromise = _this._bundler.getRevisionByGraphId(graphId);\n                _context.t0 = _regeneratorRuntime;\n\n                if (!(revPromise != null)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.t2 = _this._bundler;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(revPromise);\n\n              case 7:\n                _context.t3 = _context.sent;\n                _context.t1 = _context.t2.updateGraph.call(_context.t2, _context.t3, false);\n                _context.next = 12;\n                break;\n\n              case 11:\n                _context.t1 = _this._bundler.initializeGraph(entryFile, transformOptions, {\n                  onProgress: onProgress,\n                  shallow: graphOptions.shallow\n                });\n\n              case 12:\n                _context.t4 = _context.t1;\n                _context.next = 15;\n                return _context.t0.awrap.call(_context.t0, _context.t4);\n\n              case 15:\n                _await = _context.sent;\n                delta = _await.delta;\n                revision = _await.revision;\n\n                serializer = _this._config.serializer.customSerializer || function () {\n                  return bundleToString(baseJSBundle.apply(void 0, arguments)).code;\n                };\n\n                _context.t5 = _regeneratorRuntime;\n                _context.t6 = serializer;\n                _context.t7 = entryFile;\n                _context.t8 = revision.prepend;\n                _context.t9 = revision.graph;\n                _context.next = 26;\n                return _regeneratorRuntime.awrap(_this._resolveRelativePath(_this._config.transformer.asyncRequireModulePath, {\n                  transformOptions: transformOptions,\n                  relativeTo: \"project\"\n                }));\n\n              case 26:\n                _context.t10 = _context.sent;\n                _context.t11 = _this._config.serializer.processModuleFilter;\n                _context.t12 = _this._createModuleId;\n                _context.t13 = _this._config.serializer.getRunModuleStatement;\n                _context.t14 = transformOptions.dev;\n                _context.t15 = _this._config.projectRoot;\n                _context.t16 = serializerOptions.modulesOnly;\n                _context.t17 = _this._config.serializer.getModulesRunBeforeMainModule(path.relative(_this._config.projectRoot, entryFile));\n                _context.t18 = serializerOptions.runModule;\n                _context.t19 = serializerOptions.sourceMapUrl;\n                _context.t20 = serializerOptions.sourceUrl;\n                _context.t21 = serializerOptions.inlineSourceMap;\n                _context.t22 = (_this$_config$server$3 = _this._config.server.unstable_serverRoot) !== null && _this$_config$server$3 !== void 0 ? _this$_config$server$3 : _this._config.projectRoot;\n                _context.t23 = {\n                  asyncRequireModulePath: _context.t10,\n                  processModuleFilter: _context.t11,\n                  createModuleId: _context.t12,\n                  getRunModuleStatement: _context.t13,\n                  dev: _context.t14,\n                  projectRoot: _context.t15,\n                  modulesOnly: _context.t16,\n                  runBeforeMainModule: _context.t17,\n                  runModule: _context.t18,\n                  sourceMapUrl: _context.t19,\n                  sourceUrl: _context.t20,\n                  inlineSourceMap: _context.t21,\n                  serverRoot: _context.t22\n                };\n                _context.t24 = (0, _context.t6)(_context.t7, _context.t8, _context.t9, _context.t23);\n                _context.next = 43;\n                return _context.t5.awrap.call(_context.t5, _context.t24);\n\n              case 43:\n                bundle = _context.sent;\n                bundleCode = typeof bundle === \"string\" ? bundle : bundle.code;\n                return _context.abrupt(\"return\", {\n                  numModifiedFiles: delta.reset ? delta.added.size + revision.prepend.length : delta.added.size + delta.modified.size + delta.deleted.size,\n                  lastModifiedDate: revision.date,\n                  nextRevId: revision.id,\n                  bundle: bundleCode\n                });\n\n              case 46:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      finish: function finish(_ref2) {\n        var req = _ref2.req,\n            mres = _ref2.mres,\n            result = _ref2.result;\n\n        if (req.headers[\"if-modified-since\"] === result.lastModifiedDate.toUTCString()) {\n          debug(\"Responding with 304\");\n          mres.writeHead(304);\n          mres.end();\n        } else {\n          mres.setHeader(FILES_CHANGED_COUNT_HEADER, String(result.numModifiedFiles));\n          mres.setHeader(DELTA_ID_HEADER, String(result.nextRevId));\n          mres.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n          mres.setHeader(\"Last-Modified\", result.lastModifiedDate.toUTCString());\n          mres.setHeader(\"Content-Length\", String(Buffer.byteLength(result.bundle)));\n          mres.end(result.bundle);\n        }\n      },\n      delete: function _delete(_ref3) {\n        var graphId, res;\n        return _regeneratorRuntime.async(function _delete$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                graphId = _ref3.graphId, res = _ref3.res;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(_this._bundler.endGraph(graphId));\n\n              case 3:\n                res.statusCode = 204;\n                res.end();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    });\n    this._processBytecodeBundleRequest = this._createRequestProcessor({\n      createStartEntry: function createStartEntry(context) {\n        return {\n          action_name: \"Requesting bundle\",\n          bundle_url: context.req.url,\n          entry_point: context.entryFile,\n          bundler: \"delta\",\n          build_id: context.buildID,\n          bundle_options: context.bundleOptions,\n          bundle_hash: context.graphId\n        };\n      },\n      createEndEntry: function createEndEntry(context) {\n        return {\n          outdated_modules: context.result.numModifiedFiles\n        };\n      },\n      build: function build(_ref4) {\n        var entryFile, graphId, graphOptions, onProgress, serializerOptions, transformOptions, _this$_config$server$4, revPromise, _await2, delta, revision, bundle;\n\n        return _regeneratorRuntime.async(function build$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                entryFile = _ref4.entryFile, graphId = _ref4.graphId, graphOptions = _ref4.graphOptions, onProgress = _ref4.onProgress, serializerOptions = _ref4.serializerOptions, transformOptions = _ref4.transformOptions;\n                revPromise = _this._bundler.getRevisionByGraphId(graphId);\n                _context3.t0 = _regeneratorRuntime;\n\n                if (!(revPromise != null)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.t2 = _this._bundler;\n                _context3.next = 7;\n                return _regeneratorRuntime.awrap(revPromise);\n\n              case 7:\n                _context3.t3 = _context3.sent;\n                _context3.t1 = _context3.t2.updateGraph.call(_context3.t2, _context3.t3, false);\n                _context3.next = 12;\n                break;\n\n              case 11:\n                _context3.t1 = _this._bundler.initializeGraph(entryFile, transformOptions, {\n                  onProgress: onProgress,\n                  shallow: graphOptions.shallow\n                });\n\n              case 12:\n                _context3.t4 = _context3.t1;\n                _context3.next = 15;\n                return _context3.t0.awrap.call(_context3.t0, _context3.t4);\n\n              case 15:\n                _await2 = _context3.sent;\n                delta = _await2.delta;\n                revision = _await2.revision;\n                _context3.t5 = bundleToBytecode;\n                _context3.t6 = baseBytecodeBundle;\n                _context3.t7 = entryFile;\n                _context3.t8 = revision.prepend;\n                _context3.t9 = revision.graph;\n                _context3.next = 25;\n                return _regeneratorRuntime.awrap(_this._resolveRelativePath(_this._config.transformer.asyncRequireModulePath, {\n                  transformOptions: transformOptions,\n                  relativeTo: \"project\"\n                }));\n\n              case 25:\n                _context3.t10 = _context3.sent;\n                _context3.t11 = _this._config.serializer.processModuleFilter;\n                _context3.t12 = _this._createModuleId;\n                _context3.t13 = _this._config.serializer.getRunModuleStatement;\n                _context3.t14 = transformOptions.dev;\n                _context3.t15 = _this._config.projectRoot;\n                _context3.t16 = serializerOptions.modulesOnly;\n                _context3.t17 = _this._config.serializer.getModulesRunBeforeMainModule(path.relative(_this._config.projectRoot, entryFile));\n                _context3.t18 = serializerOptions.runModule;\n                _context3.t19 = serializerOptions.sourceMapUrl;\n                _context3.t20 = serializerOptions.sourceUrl;\n                _context3.t21 = serializerOptions.inlineSourceMap;\n                _context3.t22 = (_this$_config$server$4 = _this._config.server.unstable_serverRoot) !== null && _this$_config$server$4 !== void 0 ? _this$_config$server$4 : _this._config.projectRoot;\n                _context3.t23 = {\n                  asyncRequireModulePath: _context3.t10,\n                  processModuleFilter: _context3.t11,\n                  createModuleId: _context3.t12,\n                  getRunModuleStatement: _context3.t13,\n                  dev: _context3.t14,\n                  projectRoot: _context3.t15,\n                  modulesOnly: _context3.t16,\n                  runBeforeMainModule: _context3.t17,\n                  runModule: _context3.t18,\n                  sourceMapUrl: _context3.t19,\n                  sourceUrl: _context3.t20,\n                  inlineSourceMap: _context3.t21,\n                  serverRoot: _context3.t22\n                };\n                _context3.t24 = (0, _context3.t6)(_context3.t7, _context3.t8, _context3.t9, _context3.t23);\n                bundle = (0, _context3.t5)(_context3.t24);\n                return _context3.abrupt(\"return\", {\n                  numModifiedFiles: delta.reset ? delta.added.size + revision.prepend.length : delta.added.size + delta.modified.size + delta.deleted.size,\n                  lastModifiedDate: revision.date,\n                  nextRevId: revision.id,\n                  bytecode: bundle.bytecode\n                });\n\n              case 42:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      finish: function finish(_ref5) {\n        var req = _ref5.req,\n            mres = _ref5.mres,\n            result = _ref5.result;\n\n        if (req.headers[\"if-modified-since\"] === result.lastModifiedDate.toUTCString()) {\n          debug(\"Responding with 304\");\n          mres.writeHead(304);\n          mres.end();\n        } else {\n          mres.setHeader(FILES_CHANGED_COUNT_HEADER, String(result.numModifiedFiles));\n          mres.setHeader(DELTA_ID_HEADER, String(result.nextRevId));\n          mres.setHeader(\"Content-Type\", \"application/x-metro-bytecode-bundle\");\n          mres.setHeader(\"Last-Modified\", result.lastModifiedDate.toUTCString());\n          mres.setHeader(\"Content-Length\", String(Buffer.byteLength(result.bytecode)));\n          mres.end(result.bytecode);\n        }\n      }\n    });\n    this._processSourceMapRequest = this._createRequestProcessor({\n      createStartEntry: function createStartEntry(context) {\n        return {\n          action_name: \"Requesting sourcemap\",\n          bundle_url: context.req.url,\n          entry_point: context.entryFile,\n          bundler: \"delta\"\n        };\n      },\n      createEndEntry: function createEndEntry(context) {\n        return {\n          bundler: \"delta\"\n        };\n      },\n      build: function build(_ref6) {\n        var entryFile, graphId, graphOptions, onProgress, serializerOptions, transformOptions, revision, revPromise, _await$_this$_bundler, _await$_this$_bundler2, _revision, prepend, graph;\n\n        return _regeneratorRuntime.async(function build$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                entryFile = _ref6.entryFile, graphId = _ref6.graphId, graphOptions = _ref6.graphOptions, onProgress = _ref6.onProgress, serializerOptions = _ref6.serializerOptions, transformOptions = _ref6.transformOptions;\n                revPromise = _this._bundler.getRevisionByGraphId(graphId);\n\n                if (!(revPromise == null)) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                _context4.next = 5;\n                return _regeneratorRuntime.awrap(_this._bundler.initializeGraph(entryFile, transformOptions, {\n                  onProgress: onProgress,\n                  shallow: graphOptions.shallow\n                }));\n\n              case 5:\n                _await$_this$_bundler = _context4.sent;\n                revision = _await$_this$_bundler.revision;\n                _context4.next = 19;\n                break;\n\n              case 9:\n                _context4.t0 = _regeneratorRuntime;\n                _context4.t1 = _this._bundler;\n                _context4.next = 13;\n                return _regeneratorRuntime.awrap(revPromise);\n\n              case 13:\n                _context4.t2 = _context4.sent;\n                _context4.t3 = _context4.t1.updateGraph.call(_context4.t1, _context4.t2, false);\n                _context4.next = 17;\n                return _context4.t0.awrap.call(_context4.t0, _context4.t3);\n\n              case 17:\n                _await$_this$_bundler2 = _context4.sent;\n                revision = _await$_this$_bundler2.revision;\n\n              case 19:\n                _revision = revision, prepend = _revision.prepend, graph = _revision.graph;\n\n                if (serializerOptions.modulesOnly) {\n                  prepend = [];\n                }\n\n                return _context4.abrupt(\"return\", sourceMapString([].concat(_toConsumableArray(prepend), _toConsumableArray(_this._getSortedModules(graph))), {\n                  excludeSource: serializerOptions.excludeSource,\n                  processModuleFilter: _this._config.serializer.processModuleFilter\n                }));\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      finish: function finish(_ref7) {\n        var mres = _ref7.mres,\n            result = _ref7.result;\n        mres.setHeader(\"Content-Type\", \"application/json\");\n        mres.end(result.toString());\n      }\n    });\n    this._processAssetsRequest = this._createRequestProcessor({\n      createStartEntry: function createStartEntry(context) {\n        return {\n          action_name: \"Requesting assets\",\n          bundle_url: context.req.url,\n          entry_point: context.entryFile,\n          bundler: \"delta\"\n        };\n      },\n      createEndEntry: function createEndEntry(context) {\n        return {\n          bundler: \"delta\"\n        };\n      },\n      build: function build(_ref8) {\n        var entryFile, transformOptions, onProgress, dependencies;\n        return _regeneratorRuntime.async(function build$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                entryFile = _ref8.entryFile, transformOptions = _ref8.transformOptions, onProgress = _ref8.onProgress;\n                _context5.next = 3;\n                return _regeneratorRuntime.awrap(_this._bundler.getDependencies([entryFile], transformOptions, {\n                  onProgress: onProgress,\n                  shallow: false\n                }));\n\n              case 3:\n                dependencies = _context5.sent;\n                _context5.next = 6;\n                return _regeneratorRuntime.awrap(_getAssets(dependencies, {\n                  processModuleFilter: _this._config.serializer.processModuleFilter,\n                  assetPlugins: _this._config.transformer.assetPlugins,\n                  platform: transformOptions.platform,\n                  publicPath: _this._config.transformer.publicPath,\n                  projectRoot: _this._config.projectRoot\n                }));\n\n              case 6:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      finish: function finish(_ref9) {\n        var mres = _ref9.mres,\n            result = _ref9.result;\n        mres.setHeader(\"Content-Type\", \"application/json\");\n        mres.end(JSON.stringify(result));\n      }\n    });\n    this._config = config;\n    this._serverOptions = options;\n\n    if (this._config.resetCache) {\n      this._config.cacheStores.forEach(function (store) {\n        return store.clear();\n      });\n\n      this._config.reporter.update({\n        type: \"transform_cache_reset\"\n      });\n    }\n\n    this._reporter = config.reporter;\n    this._logger = Logger;\n    this._platforms = new Set(this._config.resolver.platforms);\n    this._isEnded = false;\n    this._createModuleId = config.serializer.createModuleIdFactory();\n    this._bundler = new IncrementalBundler(config, {\n      hasReducedPerformance: options && options.hasReducedPerformance,\n      watch: options ? options.watch : undefined\n    });\n    this._nextBundleBuildID = 1;\n  }\n\n  _createClass(Server, [{\n    key: \"end\",\n    value: function end() {\n      if (!this._isEnded) {\n        this._bundler.end();\n\n        this._isEnded = true;\n      }\n    }\n  }, {\n    key: \"getBundler\",\n    value: function getBundler() {\n      return this._bundler;\n    }\n  }, {\n    key: \"getCreateModuleId\",\n    value: function getCreateModuleId() {\n      return this._createModuleId;\n    }\n  }, {\n    key: \"build\",\n    value: function build(options) {\n      var _this$_config$server$, _splitBundleOptions, entryFile, graphOptions, onProgress, serializerOptions, transformOptions, _await$this$_bundler$, prepend, graph, entryPoint, bundleOptions, bundleCode, bundleMap, bundle;\n\n      return _regeneratorRuntime.async(function build$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _splitBundleOptions = splitBundleOptions(options), entryFile = _splitBundleOptions.entryFile, graphOptions = _splitBundleOptions.graphOptions, onProgress = _splitBundleOptions.onProgress, serializerOptions = _splitBundleOptions.serializerOptions, transformOptions = _splitBundleOptions.transformOptions;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(this._bundler.buildGraph(entryFile, transformOptions, {\n                onProgress: onProgress,\n                shallow: graphOptions.shallow\n              }));\n\n            case 3:\n              _await$this$_bundler$ = _context6.sent;\n              prepend = _await$this$_bundler$.prepend;\n              graph = _await$this$_bundler$.graph;\n              entryPoint = this._getEntryPointAbsolutePath(entryFile);\n              _context6.next = 9;\n              return _regeneratorRuntime.awrap(this._resolveRelativePath(this._config.transformer.asyncRequireModulePath, {\n                transformOptions: transformOptions,\n                relativeTo: \"project\"\n              }));\n\n            case 9:\n              _context6.t0 = _context6.sent;\n              _context6.t1 = this._config.serializer.processModuleFilter;\n              _context6.t2 = this._createModuleId;\n              _context6.t3 = this._config.serializer.getRunModuleStatement;\n              _context6.t4 = transformOptions.dev;\n              _context6.t5 = this._config.projectRoot;\n              _context6.t6 = serializerOptions.modulesOnly;\n              _context6.t7 = this._config.serializer.getModulesRunBeforeMainModule(path.relative(this._config.projectRoot, entryPoint));\n              _context6.t8 = serializerOptions.runModule;\n              _context6.t9 = serializerOptions.sourceMapUrl;\n              _context6.t10 = serializerOptions.sourceUrl;\n              _context6.t11 = serializerOptions.inlineSourceMap;\n              _context6.t12 = (_this$_config$server$ = this._config.server.unstable_serverRoot) !== null && _this$_config$server$ !== void 0 ? _this$_config$server$ : this._config.projectRoot;\n              bundleOptions = {\n                asyncRequireModulePath: _context6.t0,\n                processModuleFilter: _context6.t1,\n                createModuleId: _context6.t2,\n                getRunModuleStatement: _context6.t3,\n                dev: _context6.t4,\n                projectRoot: _context6.t5,\n                modulesOnly: _context6.t6,\n                runBeforeMainModule: _context6.t7,\n                runModule: _context6.t8,\n                sourceMapUrl: _context6.t9,\n                sourceUrl: _context6.t10,\n                inlineSourceMap: _context6.t11,\n                serverRoot: _context6.t12\n              };\n              bundleCode = null;\n              bundleMap = null;\n\n              if (!this._config.serializer.customSerializer) {\n                _context6.next = 32;\n                break;\n              }\n\n              _context6.next = 28;\n              return _regeneratorRuntime.awrap(this._config.serializer.customSerializer(entryPoint, prepend, graph, bundleOptions));\n\n            case 28:\n              bundle = _context6.sent;\n\n              if (typeof bundle === \"string\") {\n                bundleCode = bundle;\n              } else {\n                bundleCode = bundle.code;\n                bundleMap = bundle.map;\n              }\n\n              _context6.next = 33;\n              break;\n\n            case 32:\n              bundleCode = bundleToString(baseJSBundle(entryPoint, prepend, graph, bundleOptions)).code;\n\n            case 33:\n              if (!bundleMap) {\n                bundleMap = sourceMapString([].concat(_toConsumableArray(prepend), _toConsumableArray(this._getSortedModules(graph))), {\n                  excludeSource: serializerOptions.excludeSource,\n                  processModuleFilter: this._config.serializer.processModuleFilter\n                });\n              }\n\n              return _context6.abrupt(\"return\", {\n                code: bundleCode,\n                map: bundleMap\n              });\n\n            case 35:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getRamBundleInfo\",\n    value: function getRamBundleInfo(options) {\n      var _this$_config$server$2, _splitBundleOptions2, entryFile, graphOptions, onProgress, serializerOptions, transformOptions, _await$this$_bundler$2, prepend, graph, entryPoint;\n\n      return _regeneratorRuntime.async(function getRamBundleInfo$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _splitBundleOptions2 = splitBundleOptions(options), entryFile = _splitBundleOptions2.entryFile, graphOptions = _splitBundleOptions2.graphOptions, onProgress = _splitBundleOptions2.onProgress, serializerOptions = _splitBundleOptions2.serializerOptions, transformOptions = _splitBundleOptions2.transformOptions;\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(this._bundler.buildGraph(entryFile, transformOptions, {\n                onProgress: onProgress,\n                shallow: graphOptions.shallow\n              }));\n\n            case 3:\n              _await$this$_bundler$2 = _context7.sent;\n              prepend = _await$this$_bundler$2.prepend;\n              graph = _await$this$_bundler$2.graph;\n              entryPoint = this._getEntryPointAbsolutePath(entryFile);\n              _context7.t0 = _regeneratorRuntime;\n              _context7.t1 = _getRamBundleInfo;\n              _context7.t2 = entryPoint;\n              _context7.t3 = prepend;\n              _context7.t4 = graph;\n              _context7.next = 14;\n              return _regeneratorRuntime.awrap(this._resolveRelativePath(this._config.transformer.asyncRequireModulePath, {\n                transformOptions: transformOptions,\n                relativeTo: \"project\"\n              }));\n\n            case 14:\n              _context7.t5 = _context7.sent;\n              _context7.t6 = this._config.serializer.processModuleFilter;\n              _context7.t7 = this._createModuleId;\n              _context7.t8 = transformOptions.dev;\n              _context7.t9 = serializerOptions.excludeSource;\n              _context7.t10 = this._config.serializer.getRunModuleStatement;\n              _context7.t11 = this._config.transformer.getTransformOptions;\n              _context7.t12 = transformOptions.platform;\n              _context7.t13 = this._config.projectRoot;\n              _context7.t14 = serializerOptions.modulesOnly;\n              _context7.t15 = this._config.serializer.getModulesRunBeforeMainModule(path.relative(this._config.projectRoot, entryPoint));\n              _context7.t16 = serializerOptions.runModule;\n              _context7.t17 = serializerOptions.sourceMapUrl;\n              _context7.t18 = serializerOptions.sourceUrl;\n              _context7.t19 = serializerOptions.inlineSourceMap;\n              _context7.t20 = (_this$_config$server$2 = this._config.server.unstable_serverRoot) !== null && _this$_config$server$2 !== void 0 ? _this$_config$server$2 : this._config.projectRoot;\n              _context7.t21 = {\n                asyncRequireModulePath: _context7.t5,\n                processModuleFilter: _context7.t6,\n                createModuleId: _context7.t7,\n                dev: _context7.t8,\n                excludeSource: _context7.t9,\n                getRunModuleStatement: _context7.t10,\n                getTransformOptions: _context7.t11,\n                platform: _context7.t12,\n                projectRoot: _context7.t13,\n                modulesOnly: _context7.t14,\n                runBeforeMainModule: _context7.t15,\n                runModule: _context7.t16,\n                sourceMapUrl: _context7.t17,\n                sourceUrl: _context7.t18,\n                inlineSourceMap: _context7.t19,\n                serverRoot: _context7.t20\n              };\n              _context7.t22 = (0, _context7.t1)(_context7.t2, _context7.t3, _context7.t4, _context7.t21);\n              _context7.next = 34;\n              return _context7.t0.awrap.call(_context7.t0, _context7.t22);\n\n            case 34:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 35:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getAssets\",\n    value: function getAssets(options) {\n      var _splitBundleOptions3, entryFile, transformOptions, onProgress, dependencies;\n\n      return _regeneratorRuntime.async(function getAssets$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _splitBundleOptions3 = splitBundleOptions(options), entryFile = _splitBundleOptions3.entryFile, transformOptions = _splitBundleOptions3.transformOptions, onProgress = _splitBundleOptions3.onProgress;\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(this._bundler.getDependencies([entryFile], transformOptions, {\n                onProgress: onProgress,\n                shallow: false\n              }));\n\n            case 3:\n              dependencies = _context8.sent;\n              _context8.next = 6;\n              return _regeneratorRuntime.awrap(_getAssets(dependencies, {\n                processModuleFilter: this._config.serializer.processModuleFilter,\n                assetPlugins: this._config.transformer.assetPlugins,\n                platform: transformOptions.platform,\n                projectRoot: this._getServerRootDir(),\n                publicPath: this._config.transformer.publicPath\n              }));\n\n            case 6:\n              return _context8.abrupt(\"return\", _context8.sent);\n\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getOrderedDependencyPaths\",\n    value: function getOrderedDependencyPaths(options) {\n      var _splitBundleOptions4, entryFile, transformOptions, onProgress, _await$this$_bundler$3, prepend, graph, platform;\n\n      return _regeneratorRuntime.async(function getOrderedDependencyPaths$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _splitBundleOptions4 = splitBundleOptions(_objectSpread(_objectSpread(_objectSpread({}, Server.DEFAULT_BUNDLE_OPTIONS), options), {}, {\n                bundleType: \"bundle\"\n              })), entryFile = _splitBundleOptions4.entryFile, transformOptions = _splitBundleOptions4.transformOptions, onProgress = _splitBundleOptions4.onProgress;\n              _context9.next = 3;\n              return _regeneratorRuntime.awrap(this._bundler.buildGraph(entryFile, transformOptions, {\n                onProgress: onProgress,\n                shallow: false\n              }));\n\n            case 3:\n              _await$this$_bundler$3 = _context9.sent;\n              prepend = _await$this$_bundler$3.prepend;\n              graph = _await$this$_bundler$3.graph;\n              platform = transformOptions.platform || parsePlatformFilePath(entryFile, this._platforms).platform;\n              _context9.next = 9;\n              return _regeneratorRuntime.awrap(getAllFiles(prepend, graph, {\n                platform: platform,\n                processModuleFilter: this._config.serializer.processModuleFilter\n              }));\n\n            case 9:\n              return _context9.abrupt(\"return\", _context9.sent);\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_rangeRequestMiddleware\",\n    value: function _rangeRequestMiddleware(req, res, data, assetPath) {\n      if (req.headers && req.headers.range) {\n        var _req$headers$range$re = req.headers.range.replace(/bytes=/, \"\").split(\"-\"),\n            _req$headers$range$re2 = _slicedToArray(_req$headers$range$re, 2),\n            rangeStart = _req$headers$range$re2[0],\n            rangeEnd = _req$headers$range$re2[1];\n\n        var dataStart = parseInt(rangeStart, 10);\n        var dataEnd = rangeEnd ? parseInt(rangeEnd, 10) : data.length - 1;\n        var chunksize = dataEnd - dataStart + 1;\n        res.writeHead(206, {\n          \"Accept-Ranges\": \"bytes\",\n          \"Content-Length\": chunksize.toString(),\n          \"Content-Range\": \"bytes \" + dataStart + \"-\" + dataEnd + \"/\" + data.length,\n          \"Content-Type\": mime.lookup(path.basename(assetPath))\n        });\n        return data.slice(dataStart, dataEnd + 1);\n      }\n\n      return data;\n    }\n  }, {\n    key: \"_processSingleAssetRequest\",\n    value: function _processSingleAssetRequest(req, res) {\n      var urlObj, _ref10, _ref11, assetPath, _nullthrows, _nullthrows2, actualPath, secondaryQuery, processingAssetRequestLogEntry, data;\n\n      return _regeneratorRuntime.async(function _processSingleAssetRequest$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              urlObj = url.parse(decodeURI(req.url), true);\n              _ref10 = urlObj && urlObj.pathname && urlObj.pathname.match(/^\\/assets\\/(.+)$/) || [], _ref11 = _slicedToArray(_ref10, 2), assetPath = _ref11[1];\n\n              if (!assetPath && urlObj && urlObj.query && urlObj.query.unstable_path) {\n                _nullthrows = nullthrows(urlObj.query.unstable_path.match(/^([^?]*)\\??(.*)$/)), _nullthrows2 = _slicedToArray(_nullthrows, 3), actualPath = _nullthrows2[1], secondaryQuery = _nullthrows2[2];\n\n                if (secondaryQuery) {\n                  _extends(urlObj.query, querystring.parse(secondaryQuery));\n                }\n\n                assetPath = actualPath;\n              }\n\n              if (assetPath) {\n                _context10.next = 5;\n                break;\n              }\n\n              throw new Error(\"Could not extract asset path from URL\");\n\n            case 5:\n              processingAssetRequestLogEntry = log(createActionStartEntry({\n                action_name: \"Processing asset request\",\n                asset: assetPath[1]\n              }));\n              _context10.prev = 6;\n              _context10.next = 9;\n              return _regeneratorRuntime.awrap(getAsset(assetPath, this._config.projectRoot, this._config.watchFolders, urlObj.query.platform, this._config.resolver.assetExts));\n\n            case 9:\n              data = _context10.sent;\n\n              if (process.env.REACT_NATIVE_ENABLE_ASSET_CACHING === true) {\n                res.setHeader(\"Cache-Control\", \"max-age=31536000\");\n              }\n\n              res.end(this._rangeRequestMiddleware(req, res, data, assetPath));\n              process.nextTick(function () {\n                log(createActionEndEntry(processingAssetRequestLogEntry));\n              });\n              _context10.next = 20;\n              break;\n\n            case 15:\n              _context10.prev = 15;\n              _context10.t0 = _context10[\"catch\"](6);\n              console.error(_context10.t0.stack);\n              res.writeHead(404);\n              res.end(\"Asset not found\");\n\n            case 20:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, [[6, 15]], Promise);\n    }\n  }, {\n    key: \"_parseOptions\",\n    value: function _parseOptions(url) {\n      return parseOptionsFromUrl(url, new Set(this._config.resolver.platforms), BYTECODE_VERSION);\n    }\n  }, {\n    key: \"_processRequest\",\n    value: function _processRequest(req, res, next) {\n      var originalUrl, urlObj, host, formattedUrl, pathname, options;\n      return _regeneratorRuntime.async(function _processRequest$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              originalUrl = req.url;\n              req.url = this._config.server.rewriteRequestUrl(req.url);\n              urlObj = url.parse(req.url, true);\n              host = req.headers.host;\n              debug(\"Handling request: \" + (host ? \"http://\" + host : \"\") + req.url + (originalUrl !== req.url ? \" (rewritten from \" + originalUrl + \")\" : \"\"));\n              formattedUrl = url.format(_objectSpread(_objectSpread({}, urlObj), {}, {\n                host: host,\n                protocol: \"http\"\n              }));\n              pathname = urlObj.pathname || \"\";\n\n              if (!pathname.endsWith(\".bundle\")) {\n                _context11.next = 19;\n                break;\n              }\n\n              options = this._parseOptions(formattedUrl);\n\n              if (!options.runtimeBytecodeVersion) {\n                _context11.next = 14;\n                break;\n              }\n\n              _context11.next = 12;\n              return _regeneratorRuntime.awrap(this._processBytecodeBundleRequest(req, res, options));\n\n            case 12:\n              _context11.next = 16;\n              break;\n\n            case 14:\n              _context11.next = 16;\n              return _regeneratorRuntime.awrap(this._processBundleRequest(req, res, options));\n\n            case 16:\n              if (this._serverOptions && this._serverOptions.onBundleBuilt) {\n                this._serverOptions.onBundleBuilt(pathname);\n              }\n\n              _context11.next = 41;\n              break;\n\n            case 19:\n              if (!pathname.endsWith(\".map\")) {\n                _context11.next = 25;\n                break;\n              }\n\n              res.setHeader(\"Access-Control-Allow-Origin\", \"devtools://devtools\");\n              _context11.next = 23;\n              return _regeneratorRuntime.awrap(this._processSourceMapRequest(req, res, this._parseOptions(formattedUrl)));\n\n            case 23:\n              _context11.next = 41;\n              break;\n\n            case 25:\n              if (!pathname.endsWith(\".assets\")) {\n                _context11.next = 30;\n                break;\n              }\n\n              _context11.next = 28;\n              return _regeneratorRuntime.awrap(this._processAssetsRequest(req, res, this._parseOptions(formattedUrl)));\n\n            case 28:\n              _context11.next = 41;\n              break;\n\n            case 30:\n              if (!(pathname.startsWith(\"/assets/\") || pathname === \"/assets\")) {\n                _context11.next = 35;\n                break;\n              }\n\n              _context11.next = 33;\n              return _regeneratorRuntime.awrap(this._processSingleAssetRequest(req, res));\n\n            case 33:\n              _context11.next = 41;\n              break;\n\n            case 35:\n              if (!(pathname === \"/symbolicate\")) {\n                _context11.next = 40;\n                break;\n              }\n\n              _context11.next = 38;\n              return _regeneratorRuntime.awrap(this._symbolicate(req, res));\n\n            case 38:\n              _context11.next = 41;\n              break;\n\n            case 40:\n              next();\n\n            case 41:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_createRequestProcessor\",\n    value: function _createRequestProcessor(_ref12) {\n      var createStartEntry = _ref12.createStartEntry,\n          createEndEntry = _ref12.createEndEntry,\n          build = _ref12.build,\n          deleteFn = _ref12.delete,\n          finish = _ref12.finish;\n      return function requestProcessor(req, res, bundleOptions) {\n        var _this2 = this;\n\n        var _splitBundleOptions5, entryFile, graphOptions, transformOptions, serializerOptions, resolvedEntryFilePath, graphId, deleteContext, formattedError, status, mres, buildID, onProgress, lastProgress, startContext, logEntry, result, _formattedError, _status, endContext;\n\n        return _regeneratorRuntime.async(function requestProcessor$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _splitBundleOptions5 = splitBundleOptions(bundleOptions), entryFile = _splitBundleOptions5.entryFile, graphOptions = _splitBundleOptions5.graphOptions, transformOptions = _splitBundleOptions5.transformOptions, serializerOptions = _splitBundleOptions5.serializerOptions;\n                _context12.next = 3;\n                return _regeneratorRuntime.awrap(this._resolveRelativePath(entryFile, {\n                  transformOptions: transformOptions,\n                  relativeTo: \"server\"\n                }));\n\n              case 3:\n                resolvedEntryFilePath = _context12.sent;\n                graphId = getGraphId(resolvedEntryFilePath, transformOptions, {\n                  shallow: graphOptions.shallow,\n                  experimentalImportBundleSupport: this._config.transformer.experimentalImportBundleSupport\n                });\n\n                if (!(deleteFn && req.method === \"DELETE\")) {\n                  _context12.next = 19;\n                  break;\n                }\n\n                deleteContext = {\n                  graphId: graphId,\n                  req: req,\n                  res: res\n                };\n                _context12.prev = 7;\n                _context12.next = 10;\n                return _regeneratorRuntime.awrap(deleteFn(deleteContext));\n\n              case 10:\n                _context12.next = 18;\n                break;\n\n              case 12:\n                _context12.prev = 12;\n                _context12.t0 = _context12[\"catch\"](7);\n                formattedError = formatBundlingError(_context12.t0);\n                status = _context12.t0 instanceof ResourceNotFoundError ? 404 : 500;\n                res.writeHead(status, {\n                  \"Content-Type\": \"application/json; charset=UTF-8\"\n                });\n                res.end(JSON.stringify(formattedError));\n\n              case 18:\n                return _context12.abrupt(\"return\");\n\n              case 19:\n                mres = MultipartResponse.wrap(req, res);\n                buildID = this.getNewBuildID();\n                onProgress = null;\n                lastProgress = -1;\n\n                if (this._config.reporter) {\n                  onProgress = function onProgress(transformedFileCount, totalFileCount) {\n                    var currentProgress = parseInt(transformedFileCount / totalFileCount * 100, 10);\n\n                    if (currentProgress > lastProgress || totalFileCount < 10) {\n                      mres.writeChunk({\n                        \"Content-Type\": \"application/json\"\n                      }, JSON.stringify({\n                        done: transformedFileCount,\n                        total: totalFileCount\n                      }));\n\n                      if (res.socket != null && res.socket.uncork != null) {\n                        res.socket.uncork();\n                      }\n\n                      lastProgress = currentProgress;\n                    }\n\n                    _this2._reporter.update({\n                      buildID: buildID,\n                      type: \"bundle_transform_progressed\",\n                      transformedFileCount: transformedFileCount,\n                      totalFileCount: totalFileCount\n                    });\n                  };\n                }\n\n                this._reporter.update({\n                  buildID: buildID,\n                  bundleDetails: {\n                    bundleType: bundleOptions.bundleType,\n                    dev: transformOptions.dev,\n                    entryFile: resolvedEntryFilePath,\n                    minify: transformOptions.minify,\n                    platform: transformOptions.platform,\n                    runtimeBytecodeVersion: transformOptions.runtimeBytecodeVersion\n                  },\n                  type: \"bundle_build_started\"\n                });\n\n                startContext = {\n                  buildID: buildID,\n                  bundleOptions: bundleOptions,\n                  entryFile: resolvedEntryFilePath,\n                  graphId: graphId,\n                  graphOptions: graphOptions,\n                  mres: mres,\n                  onProgress: onProgress,\n                  req: req,\n                  serializerOptions: serializerOptions,\n                  transformOptions: transformOptions\n                };\n                logEntry = log(createActionStartEntry(createStartEntry(startContext)));\n                _context12.prev = 27;\n                _context12.next = 30;\n                return _regeneratorRuntime.awrap(build(startContext));\n\n              case 30:\n                result = _context12.sent;\n                _context12.next = 44;\n                break;\n\n              case 33:\n                _context12.prev = 33;\n                _context12.t1 = _context12[\"catch\"](27);\n                _formattedError = formatBundlingError(_context12.t1);\n                _status = _context12.t1 instanceof ResourceNotFoundError ? 404 : 500;\n                mres.writeHead(_status, {\n                  \"Content-Type\": \"application/json; charset=UTF-8\"\n                });\n                mres.end(JSON.stringify(_formattedError));\n\n                this._reporter.update({\n                  buildID: buildID,\n                  type: \"bundle_build_failed\",\n                  bundleOptions: bundleOptions\n                });\n\n                this._reporter.update({\n                  error: _context12.t1,\n                  type: \"bundling_error\"\n                });\n\n                log({\n                  action_name: \"bundling_error\",\n                  error_type: _formattedError.type,\n                  log_entry_label: \"bundling_error\",\n                  bundle_id: graphId,\n                  build_id: buildID,\n                  stack: _formattedError.message\n                });\n                debug(\"Bundling error\", _context12.t1);\n                return _context12.abrupt(\"return\");\n\n              case 44:\n                endContext = _objectSpread(_objectSpread({}, startContext), {}, {\n                  result: result\n                });\n                finish(endContext);\n\n                this._reporter.update({\n                  buildID: buildID,\n                  type: \"bundle_build_done\"\n                });\n\n                log(createActionEndEntry(_objectSpread(_objectSpread({}, logEntry), createEndEntry(endContext))));\n\n              case 48:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, null, this, [[7, 12], [27, 33]], Promise);\n      };\n    }\n  }, {\n    key: \"_getSortedModules\",\n    value: function _getSortedModules(graph) {\n      var _this3 = this;\n\n      var modules = _toConsumableArray(graph.dependencies.values());\n\n      for (var _iterator = _createForOfIteratorHelperLoose(modules), _step; !(_step = _iterator()).done;) {\n        var _module = _step.value;\n\n        this._createModuleId(_module.path);\n      }\n\n      return modules.sort(function (a, b) {\n        return _this3._createModuleId(a.path) - _this3._createModuleId(b.path);\n      });\n    }\n  }, {\n    key: \"_symbolicate\",\n    value: function _symbolicate(req, res) {\n      var _this4 = this;\n\n      var getCodeFrame, symbolicatingLogEntry, body, stack, urls, sourceMaps, symbolicatedStack;\n      return _regeneratorRuntime.async(function _symbolicate$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              getCodeFrame = function getCodeFrame(urls, symbolicatedStack) {\n                for (var i = 0; i < symbolicatedStack.length; i++) {\n                  var _symbolicatedStack$i = symbolicatedStack[i],\n                      collapse = _symbolicatedStack$i.collapse,\n                      column = _symbolicatedStack$i.column,\n                      file = _symbolicatedStack$i.file,\n                      lineNumber = _symbolicatedStack$i.lineNumber;\n                  var fileAbsolute = path.resolve(_this4._config.projectRoot, file !== null && file !== void 0 ? file : \"\");\n\n                  if (collapse || lineNumber == null || urls.has(fileAbsolute)) {\n                    continue;\n                  }\n\n                  try {\n                    return {\n                      content: codeFrameColumns(fs.readFileSync(fileAbsolute, \"utf8\"), {\n                        start: {\n                          column: column + 1,\n                          line: lineNumber\n                        }\n                      }, {\n                        forceColor: true\n                      }),\n                      location: {\n                        row: lineNumber,\n                        column: column\n                      },\n                      fileName: file\n                    };\n                  } catch (error) {\n                    console.error(error);\n                  }\n                }\n\n                return null;\n              };\n\n              _context13.prev = 1;\n              symbolicatingLogEntry = log(createActionStartEntry(\"Symbolicating\"));\n              debug(\"Start symbolication\");\n              _context13.next = 6;\n              return _regeneratorRuntime.awrap(req.rawBody);\n\n            case 6:\n              body = _context13.sent;\n              stack = JSON.parse(body).stack.map(function (frame) {\n                if (frame.file && frame.file.includes(\"://\")) {\n                  return _objectSpread(_objectSpread({}, frame), {}, {\n                    file: _this4._config.server.rewriteRequestUrl(frame.file)\n                  });\n                }\n\n                return frame;\n              });\n              urls = new Set();\n              stack.forEach(function (frame) {\n                var sourceUrl = frame.file;\n\n                if (sourceUrl != null && !urls.has(sourceUrl) && !sourceUrl.endsWith(\"/debuggerWorker.js\") && sourceUrl.startsWith(\"http\")) {\n                  urls.add(sourceUrl);\n                }\n              });\n              debug(\"Getting source maps for symbolication\");\n              _context13.next = 13;\n              return _regeneratorRuntime.awrap(Promise.all(Array.from(urls.values()).map(this._explodedSourceMapForURL, this)));\n\n            case 13:\n              sourceMaps = _context13.sent;\n              debug(\"Performing fast symbolication\");\n              _context13.t0 = _regeneratorRuntime;\n              _context13.next = 18;\n              return _regeneratorRuntime.awrap(symbolicate(stack, zip(urls.values(), sourceMaps), this._config));\n\n            case 18:\n              _context13.t1 = _context13.sent;\n              _context13.next = 21;\n              return _context13.t0.awrap.call(_context13.t0, _context13.t1);\n\n            case 21:\n              symbolicatedStack = _context13.sent;\n              debug(\"Symbolication done\");\n              res.end(JSON.stringify({\n                codeFrame: getCodeFrame(urls, symbolicatedStack),\n                stack: symbolicatedStack\n              }));\n              process.nextTick(function () {\n                log(createActionEndEntry(symbolicatingLogEntry));\n              });\n              _context13.next = 32;\n              break;\n\n            case 27:\n              _context13.prev = 27;\n              _context13.t2 = _context13[\"catch\"](1);\n              console.error(_context13.t2.stack || _context13.t2);\n              res.statusCode = 500;\n              res.end(JSON.stringify({\n                error: _context13.t2.message\n              }));\n\n            case 32:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, this, [[1, 27]], Promise);\n    }\n  }, {\n    key: \"_explodedSourceMapForURL\",\n    value: function _explodedSourceMapForURL(reqUrl) {\n      var options, _splitBundleOptions6, entryFile, transformOptions, serializerOptions, graphOptions, onProgress, resolvedEntryFilePath, graphId, revision, revPromise, _await$this$_bundler$4, _await$this$_bundler$5, _revision2, prepend, graph;\n\n      return _regeneratorRuntime.async(function _explodedSourceMapForURL$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              options = parseOptionsFromUrl(reqUrl, new Set(this._config.resolver.platforms), BYTECODE_VERSION);\n              _splitBundleOptions6 = splitBundleOptions(options), entryFile = _splitBundleOptions6.entryFile, transformOptions = _splitBundleOptions6.transformOptions, serializerOptions = _splitBundleOptions6.serializerOptions, graphOptions = _splitBundleOptions6.graphOptions, onProgress = _splitBundleOptions6.onProgress;\n              _context14.next = 4;\n              return _regeneratorRuntime.awrap(this._resolveRelativePath(entryFile, {\n                transformOptions: transformOptions,\n                relativeTo: \"server\"\n              }));\n\n            case 4:\n              resolvedEntryFilePath = _context14.sent;\n              graphId = getGraphId(resolvedEntryFilePath, transformOptions, {\n                shallow: graphOptions.shallow,\n                experimentalImportBundleSupport: this._config.transformer.experimentalImportBundleSupport\n              });\n              revPromise = this._bundler.getRevisionByGraphId(graphId);\n\n              if (!(revPromise == null)) {\n                _context14.next = 14;\n                break;\n              }\n\n              _context14.next = 10;\n              return _regeneratorRuntime.awrap(this._bundler.initializeGraph(resolvedEntryFilePath, transformOptions, {\n                onProgress: onProgress,\n                shallow: graphOptions.shallow\n              }));\n\n            case 10:\n              _await$this$_bundler$4 = _context14.sent;\n              revision = _await$this$_bundler$4.revision;\n              _context14.next = 24;\n              break;\n\n            case 14:\n              _context14.t0 = _regeneratorRuntime;\n              _context14.t1 = this._bundler;\n              _context14.next = 18;\n              return _regeneratorRuntime.awrap(revPromise);\n\n            case 18:\n              _context14.t2 = _context14.sent;\n              _context14.t3 = _context14.t1.updateGraph.call(_context14.t1, _context14.t2, false);\n              _context14.next = 22;\n              return _context14.t0.awrap.call(_context14.t0, _context14.t3);\n\n            case 22:\n              _await$this$_bundler$5 = _context14.sent;\n              revision = _await$this$_bundler$5.revision;\n\n            case 24:\n              _revision2 = revision, prepend = _revision2.prepend, graph = _revision2.graph;\n\n              if (serializerOptions.modulesOnly) {\n                prepend = [];\n              }\n\n              return _context14.abrupt(\"return\", getExplodedSourceMap([].concat(_toConsumableArray(prepend), _toConsumableArray(this._getSortedModules(graph))), {\n                processModuleFilter: this._config.serializer.processModuleFilter\n              }));\n\n            case 27:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_resolveRelativePath\",\n    value: function _resolveRelativePath(filePath, _ref13) {\n      var transformOptions, relativeTo, resolutionFn, rootDir;\n      return _regeneratorRuntime.async(function _resolveRelativePath$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              transformOptions = _ref13.transformOptions, relativeTo = _ref13.relativeTo;\n              _context15.next = 3;\n              return _regeneratorRuntime.awrap(transformHelpers.getResolveDependencyFn(this._bundler.getBundler(), transformOptions.platform));\n\n            case 3:\n              resolutionFn = _context15.sent;\n              rootDir = relativeTo === \"server\" ? this._getServerRootDir() : this._config.projectRoot;\n              return _context15.abrupt(\"return\", resolutionFn(rootDir + \"/.\", filePath));\n\n            case 6:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getNewBuildID\",\n    value: function getNewBuildID() {\n      return (this._nextBundleBuildID++).toString(36);\n    }\n  }, {\n    key: \"getPlatforms\",\n    value: function getPlatforms() {\n      return this._config.resolver.platforms;\n    }\n  }, {\n    key: \"getWatchFolders\",\n    value: function getWatchFolders() {\n      return this._config.watchFolders;\n    }\n  }, {\n    key: \"_getServerRootDir\",\n    value: function _getServerRootDir() {\n      var _this$_config$server$5;\n\n      return (_this$_config$server$5 = this._config.server.unstable_serverRoot) !== null && _this$_config$server$5 !== void 0 ? _this$_config$server$5 : this._config.projectRoot;\n    }\n  }, {\n    key: \"_getEntryPointAbsolutePath\",\n    value: function _getEntryPointAbsolutePath(entryFile) {\n      return path.resolve(this._getServerRootDir(), entryFile);\n    }\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      return _regeneratorRuntime.async(function ready$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return _regeneratorRuntime.awrap(this._bundler.ready());\n\n            case 2:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return Server;\n}();\n\nServer.DEFAULT_GRAPH_OPTIONS = {\n  customTransformOptions: Object.create(null),\n  dev: true,\n  hot: false,\n  minify: false,\n  runtimeBytecodeVersion: null,\n  unstable_transformProfile: \"default\"\n};\nServer.DEFAULT_BUNDLE_OPTIONS = _objectSpread(_objectSpread({}, Server.DEFAULT_GRAPH_OPTIONS), {}, {\n  excludeSource: false,\n  inlineSourceMap: false,\n  modulesOnly: false,\n  onProgress: null,\n  runModule: true,\n  shallow: false,\n  sourceMapUrl: null,\n  sourceUrl: null\n});\n\nfunction zip(xs, ys) {\n  var ysIter, _iterator2, _step2, x, y;\n\n  return _regeneratorRuntime.wrap(function zip$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          ysIter = ys[Symbol.iterator]();\n          _iterator2 = _createForOfIteratorHelperLoose(xs);\n\n        case 2:\n          if ((_step2 = _iterator2()).done) {\n            _context17.next = 11;\n            break;\n          }\n\n          x = _step2.value;\n          y = ysIter.next();\n\n          if (!y.done) {\n            _context17.next = 7;\n            break;\n          }\n\n          return _context17.abrupt(\"return\");\n\n        case 7:\n          _context17.next = 9;\n          return [x, y.value];\n\n        case 9:\n          _context17.next = 2;\n          break;\n\n        case 11:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked);\n}\n\nmodule.exports = Server;","map":{"version":3,"names":["zip","require","getAsset","baseBytecodeBundle","baseJSBundle","getAllFiles","getAssets","getExplodedSourceMap","getRamBundleInfo","sourceMapString","IncrementalBundler","ResourceNotFoundError","bundleToBytecode","bundleToString","formatBundlingError","getGraphId","parseOptionsFromUrl","splitBundleOptions","transformHelpers","parsePlatformFilePath","MultipartResponse","symbolicate","codeFrameColumns","debug","fs","Logger","createActionStartEntry","createActionEndEntry","log","BYTECODE_VERSION","VERSION","mime","nullthrows","path","querystring","url","DELTA_ID_HEADER","FILES_CHANGED_COUNT_HEADER","Server","config","options","processRequest","req","res","next","_processRequest","catch","_processBundleRequest","_createRequestProcessor","createStartEntry","context","action_name","bundle_url","entry_point","entryFile","bundler","build_id","buildID","bundle_options","bundleOptions","bundle_hash","graphId","createEndEntry","outdated_modules","result","numModifiedFiles","build","graphOptions","onProgress","serializerOptions","transformOptions","revPromise","_bundler","getRevisionByGraphId","updateGraph","initializeGraph","shallow","delta","revision","serializer","_config","customSerializer","code","prepend","graph","_resolveRelativePath","transformer","asyncRequireModulePath","relativeTo","processModuleFilter","_createModuleId","getRunModuleStatement","dev","projectRoot","modulesOnly","getModulesRunBeforeMainModule","relative","runModule","sourceMapUrl","sourceUrl","inlineSourceMap","_this$_config$server$3","server","unstable_serverRoot","createModuleId","runBeforeMainModule","serverRoot","bundle","bundleCode","reset","added","size","length","modified","deleted","lastModifiedDate","date","nextRevId","id","finish","mres","headers","toUTCString","writeHead","end","setHeader","String","Buffer","byteLength","delete","endGraph","statusCode","_processBytecodeBundleRequest","_this$_config$server$4","bytecode","_processSourceMapRequest","_getSortedModules","excludeSource","toString","_processAssetsRequest","getDependencies","dependencies","assetPlugins","platform","publicPath","JSON","stringify","_serverOptions","resetCache","cacheStores","forEach","store","clear","reporter","update","type","_reporter","_logger","_platforms","Set","resolver","platforms","_isEnded","createModuleIdFactory","hasReducedPerformance","watch","undefined","_nextBundleBuildID","buildGraph","entryPoint","_getEntryPointAbsolutePath","_this$_config$server$","bundleMap","map","getTransformOptions","_this$_config$server$2","_getServerRootDir","DEFAULT_BUNDLE_OPTIONS","bundleType","data","assetPath","range","replace","split","rangeStart","rangeEnd","dataStart","parseInt","dataEnd","chunksize","lookup","basename","slice","urlObj","parse","decodeURI","pathname","match","query","unstable_path","actualPath","secondaryQuery","Error","processingAssetRequestLogEntry","asset","watchFolders","assetExts","process","env","REACT_NATIVE_ENABLE_ASSET_CACHING","_rangeRequestMiddleware","nextTick","console","error","stack","originalUrl","rewriteRequestUrl","host","formattedUrl","format","protocol","endsWith","_parseOptions","runtimeBytecodeVersion","onBundleBuilt","startsWith","_processSingleAssetRequest","_symbolicate","deleteFn","requestProcessor","resolvedEntryFilePath","experimentalImportBundleSupport","method","deleteContext","formattedError","status","wrap","getNewBuildID","lastProgress","transformedFileCount","totalFileCount","currentProgress","writeChunk","done","total","socket","uncork","bundleDetails","minify","startContext","logEntry","error_type","log_entry_label","bundle_id","message","endContext","modules","values","module","sort","a","b","getCodeFrame","urls","symbolicatedStack","i","collapse","column","file","lineNumber","fileAbsolute","resolve","has","content","readFileSync","start","line","forceColor","location","row","fileName","symbolicatingLogEntry","rawBody","body","frame","includes","add","Promise","all","Array","from","_explodedSourceMapForURL","sourceMaps","codeFrame","reqUrl","filePath","getResolveDependencyFn","getBundler","resolutionFn","rootDir","_this$_config$server$5","ready","DEFAULT_GRAPH_OPTIONS","customTransformOptions","Object","create","hot","unstable_transformProfile","xs","ys","ysIter","Symbol","iterator","x","y","value","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/Server.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst { getAsset } = require(\"./Assets\");\n\nconst baseBytecodeBundle = require(\"./DeltaBundler/Serializers/baseBytecodeBundle\");\n\nconst baseJSBundle = require(\"./DeltaBundler/Serializers/baseJSBundle\");\n\nconst getAllFiles = require(\"./DeltaBundler/Serializers/getAllFiles\");\n\nconst getAssets = require(\"./DeltaBundler/Serializers/getAssets\");\n\nconst {\n  getExplodedSourceMap,\n} = require(\"./DeltaBundler/Serializers/getExplodedSourceMap\");\n\nconst getRamBundleInfo = require(\"./DeltaBundler/Serializers/getRamBundleInfo\");\n\nconst sourceMapString = require(\"./DeltaBundler/Serializers/sourceMapString\");\n\nconst IncrementalBundler = require(\"./IncrementalBundler\");\n\nconst ResourceNotFoundError = require(\"./IncrementalBundler/ResourceNotFoundError\");\n\nconst bundleToBytecode = require(\"./lib/bundleToBytecode\");\n\nconst bundleToString = require(\"./lib/bundleToString\");\n\nconst formatBundlingError = require(\"./lib/formatBundlingError\");\n\nconst getGraphId = require(\"./lib/getGraphId\");\n\nconst parseOptionsFromUrl = require(\"./lib/parseOptionsFromUrl\");\n\nconst splitBundleOptions = require(\"./lib/splitBundleOptions\");\n\nconst transformHelpers = require(\"./lib/transformHelpers\");\n\nconst parsePlatformFilePath = require(\"./node-haste/lib/parsePlatformFilePath\");\n\nconst MultipartResponse = require(\"./Server/MultipartResponse\");\n\nconst symbolicate = require(\"./Server/symbolicate\");\n\nconst { codeFrameColumns } = require(\"@babel/code-frame\");\n\nconst debug = require(\"debug\")(\"Metro:Server\");\n\nconst fs = require(\"graceful-fs\");\n\nconst {\n  Logger,\n  Logger: { createActionStartEntry, createActionEndEntry, log },\n} = require(\"metro-core\");\n\nconst { VERSION: BYTECODE_VERSION } = require(\"metro-hermes-compiler\");\n\nconst mime = require(\"mime-types\");\n\nconst nullthrows = require(\"nullthrows\");\n\nconst path = require(\"path\");\n\nconst querystring = require(\"querystring\");\n\nconst url = require(\"url\");\n\nconst DELTA_ID_HEADER = \"X-Metro-Delta-ID\";\nconst FILES_CHANGED_COUNT_HEADER = \"X-Metro-Files-Changed-Count\";\n\nclass Server {\n  constructor(config, options) {\n    this._config = config;\n    this._serverOptions = options;\n\n    if (this._config.resetCache) {\n      this._config.cacheStores.forEach((store) => store.clear());\n\n      this._config.reporter.update({\n        type: \"transform_cache_reset\",\n      });\n    }\n\n    this._reporter = config.reporter;\n    this._logger = Logger;\n    this._platforms = new Set(this._config.resolver.platforms);\n    this._isEnded = false; // TODO(T34760917): These two properties should eventually be instantiated\n    // elsewhere and passed as parameters, since they are also needed by\n    // the HmrServer.\n    // The whole bundling/serializing logic should follow as well.\n\n    this._createModuleId = config.serializer.createModuleIdFactory();\n    this._bundler = new IncrementalBundler(config, {\n      hasReducedPerformance: options && options.hasReducedPerformance,\n      watch: options ? options.watch : undefined,\n    });\n    this._nextBundleBuildID = 1;\n  }\n\n  end() {\n    if (!this._isEnded) {\n      this._bundler.end();\n\n      this._isEnded = true;\n    }\n  }\n\n  getBundler() {\n    return this._bundler;\n  }\n\n  getCreateModuleId() {\n    return this._createModuleId;\n  }\n\n  async build(options) {\n    var _this$_config$server$;\n\n    const {\n      entryFile,\n      graphOptions,\n      onProgress,\n      serializerOptions,\n      transformOptions,\n    } = splitBundleOptions(options);\n    const { prepend, graph } = await this._bundler.buildGraph(\n      entryFile,\n      transformOptions,\n      {\n        onProgress,\n        shallow: graphOptions.shallow,\n      }\n    );\n\n    const entryPoint = this._getEntryPointAbsolutePath(entryFile);\n\n    const bundleOptions = {\n      asyncRequireModulePath: await this._resolveRelativePath(\n        this._config.transformer.asyncRequireModulePath,\n        {\n          transformOptions,\n          relativeTo: \"project\",\n        }\n      ),\n      processModuleFilter: this._config.serializer.processModuleFilter,\n      createModuleId: this._createModuleId,\n      getRunModuleStatement: this._config.serializer.getRunModuleStatement,\n      dev: transformOptions.dev,\n      projectRoot: this._config.projectRoot,\n      modulesOnly: serializerOptions.modulesOnly,\n      runBeforeMainModule:\n        this._config.serializer.getModulesRunBeforeMainModule(\n          path.relative(this._config.projectRoot, entryPoint)\n        ),\n      runModule: serializerOptions.runModule,\n      sourceMapUrl: serializerOptions.sourceMapUrl,\n      sourceUrl: serializerOptions.sourceUrl,\n      inlineSourceMap: serializerOptions.inlineSourceMap,\n      serverRoot:\n        (_this$_config$server$ = this._config.server.unstable_serverRoot) !==\n          null && _this$_config$server$ !== void 0\n          ? _this$_config$server$\n          : this._config.projectRoot,\n    };\n    let bundleCode = null;\n    let bundleMap = null;\n\n    if (this._config.serializer.customSerializer) {\n      const bundle = await this._config.serializer.customSerializer(\n        entryPoint,\n        prepend,\n        graph,\n        bundleOptions\n      );\n\n      if (typeof bundle === \"string\") {\n        bundleCode = bundle;\n      } else {\n        bundleCode = bundle.code;\n        bundleMap = bundle.map;\n      }\n    } else {\n      bundleCode = bundleToString(\n        baseJSBundle(entryPoint, prepend, graph, bundleOptions)\n      ).code;\n    }\n\n    if (!bundleMap) {\n      bundleMap = sourceMapString(\n        [...prepend, ...this._getSortedModules(graph)],\n        {\n          excludeSource: serializerOptions.excludeSource,\n          processModuleFilter: this._config.serializer.processModuleFilter,\n        }\n      );\n    }\n\n    return {\n      code: bundleCode,\n      map: bundleMap,\n    };\n  }\n\n  async getRamBundleInfo(options) {\n    var _this$_config$server$2;\n\n    const {\n      entryFile,\n      graphOptions,\n      onProgress,\n      serializerOptions,\n      transformOptions,\n    } = splitBundleOptions(options);\n    const { prepend, graph } = await this._bundler.buildGraph(\n      entryFile,\n      transformOptions,\n      {\n        onProgress,\n        shallow: graphOptions.shallow,\n      }\n    );\n\n    const entryPoint = this._getEntryPointAbsolutePath(entryFile);\n\n    return await getRamBundleInfo(entryPoint, prepend, graph, {\n      asyncRequireModulePath: await this._resolveRelativePath(\n        this._config.transformer.asyncRequireModulePath,\n        {\n          transformOptions,\n          relativeTo: \"project\",\n        }\n      ),\n      processModuleFilter: this._config.serializer.processModuleFilter,\n      createModuleId: this._createModuleId,\n      dev: transformOptions.dev,\n      excludeSource: serializerOptions.excludeSource,\n      getRunModuleStatement: this._config.serializer.getRunModuleStatement,\n      getTransformOptions: this._config.transformer.getTransformOptions,\n      platform: transformOptions.platform,\n      projectRoot: this._config.projectRoot,\n      modulesOnly: serializerOptions.modulesOnly,\n      runBeforeMainModule:\n        this._config.serializer.getModulesRunBeforeMainModule(\n          path.relative(this._config.projectRoot, entryPoint)\n        ),\n      runModule: serializerOptions.runModule,\n      sourceMapUrl: serializerOptions.sourceMapUrl,\n      sourceUrl: serializerOptions.sourceUrl,\n      inlineSourceMap: serializerOptions.inlineSourceMap,\n      serverRoot:\n        (_this$_config$server$2 = this._config.server.unstable_serverRoot) !==\n          null && _this$_config$server$2 !== void 0\n          ? _this$_config$server$2\n          : this._config.projectRoot,\n    });\n  }\n\n  async getAssets(options) {\n    const { entryFile, transformOptions, onProgress } =\n      splitBundleOptions(options);\n    const dependencies = await this._bundler.getDependencies(\n      [entryFile],\n      transformOptions,\n      {\n        onProgress,\n        shallow: false,\n      }\n    );\n    return await getAssets(dependencies, {\n      processModuleFilter: this._config.serializer.processModuleFilter,\n      assetPlugins: this._config.transformer.assetPlugins,\n      platform: transformOptions.platform,\n      projectRoot: this._getServerRootDir(),\n      publicPath: this._config.transformer.publicPath,\n    });\n  }\n\n  async getOrderedDependencyPaths(options) {\n    /* $FlowFixMe(>=0.122.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.122.0 was deployed. To see the error, delete\n     * this comment and run Flow. */\n    const { entryFile, transformOptions, onProgress } = splitBundleOptions({\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      ...options,\n      bundleType: \"bundle\",\n    });\n    const { prepend, graph } = await this._bundler.buildGraph(\n      entryFile,\n      transformOptions,\n      {\n        onProgress,\n        shallow: false,\n      }\n    );\n    const platform =\n      transformOptions.platform ||\n      parsePlatformFilePath(entryFile, this._platforms).platform; // $FlowFixMe[incompatible-return]\n\n    return await getAllFiles(prepend, graph, {\n      platform,\n      processModuleFilter: this._config.serializer.processModuleFilter,\n    });\n  }\n\n  _rangeRequestMiddleware(req, res, data, assetPath) {\n    if (req.headers && req.headers.range) {\n      const [rangeStart, rangeEnd] = req.headers.range\n        .replace(/bytes=/, \"\")\n        .split(\"-\");\n      const dataStart = parseInt(rangeStart, 10);\n      const dataEnd = rangeEnd ? parseInt(rangeEnd, 10) : data.length - 1;\n      const chunksize = dataEnd - dataStart + 1;\n      res.writeHead(206, {\n        \"Accept-Ranges\": \"bytes\",\n        \"Content-Length\": chunksize.toString(),\n        \"Content-Range\": `bytes ${dataStart}-${dataEnd}/${data.length}`,\n        \"Content-Type\": mime.lookup(path.basename(assetPath)),\n      });\n      return data.slice(dataStart, dataEnd + 1);\n    }\n\n    return data;\n  }\n\n  async _processSingleAssetRequest(req, res) {\n    const urlObj = url.parse(decodeURI(req.url), true);\n    let [, assetPath] =\n      (urlObj &&\n        urlObj.pathname &&\n        urlObj.pathname.match(/^\\/assets\\/(.+)$/)) ||\n      [];\n\n    if (!assetPath && urlObj && urlObj.query && urlObj.query.unstable_path) {\n      const [, actualPath, secondaryQuery] = nullthrows(\n        urlObj.query.unstable_path.match(/^([^?]*)\\??(.*)$/)\n      );\n\n      if (secondaryQuery) {\n        Object.assign(urlObj.query, querystring.parse(secondaryQuery));\n      }\n\n      assetPath = actualPath;\n    }\n\n    if (!assetPath) {\n      throw new Error(\"Could not extract asset path from URL\");\n    }\n\n    const processingAssetRequestLogEntry = log(\n      createActionStartEntry({\n        action_name: \"Processing asset request\",\n        asset: assetPath[1],\n      })\n    );\n\n    try {\n      const data = await getAsset(\n        assetPath,\n        this._config.projectRoot,\n        this._config.watchFolders,\n        urlObj.query.platform,\n        this._config.resolver.assetExts\n      ); // Tell clients to cache this for 1 year.\n      // This is safe as the asset url contains a hash of the asset.\n\n      if (process.env.REACT_NATIVE_ENABLE_ASSET_CACHING === true) {\n        res.setHeader(\"Cache-Control\", \"max-age=31536000\");\n      }\n\n      res.end(this._rangeRequestMiddleware(req, res, data, assetPath));\n      process.nextTick(() => {\n        log(createActionEndEntry(processingAssetRequestLogEntry));\n      });\n    } catch (error) {\n      console.error(error.stack);\n      res.writeHead(404);\n      res.end(\"Asset not found\");\n    }\n  }\n\n  processRequest = (req, res, next) => {\n    this._processRequest(req, res, next).catch(next);\n  };\n\n  _parseOptions(url) {\n    return parseOptionsFromUrl(\n      url,\n      new Set(this._config.resolver.platforms),\n      BYTECODE_VERSION\n    );\n  }\n\n  async _processRequest(req, res, next) {\n    const originalUrl = req.url;\n    req.url = this._config.server.rewriteRequestUrl(req.url);\n    const urlObj = url.parse(req.url, true);\n    const { host } = req.headers;\n    debug(\n      `Handling request: ${host ? \"http://\" + host : \"\"}${req.url}` +\n        (originalUrl !== req.url ? ` (rewritten from ${originalUrl})` : \"\")\n    );\n    const formattedUrl = url.format({ ...urlObj, host, protocol: \"http\" });\n    const pathname = urlObj.pathname || \"\";\n\n    if (pathname.endsWith(\".bundle\")) {\n      const options = this._parseOptions(formattedUrl);\n\n      if (options.runtimeBytecodeVersion) {\n        await this._processBytecodeBundleRequest(req, res, options);\n      } else {\n        await this._processBundleRequest(req, res, options);\n      }\n\n      if (this._serverOptions && this._serverOptions.onBundleBuilt) {\n        this._serverOptions.onBundleBuilt(pathname);\n      }\n    } else if (pathname.endsWith(\".map\")) {\n      // Chrome dev tools may need to access the source maps.\n      res.setHeader(\"Access-Control-Allow-Origin\", \"devtools://devtools\");\n      await this._processSourceMapRequest(\n        req,\n        res,\n        this._parseOptions(formattedUrl)\n      );\n    } else if (pathname.endsWith(\".assets\")) {\n      await this._processAssetsRequest(\n        req,\n        res,\n        this._parseOptions(formattedUrl)\n      );\n    } else if (pathname.startsWith(\"/assets/\") || pathname === \"/assets\") {\n      await this._processSingleAssetRequest(req, res);\n    } else if (pathname === \"/symbolicate\") {\n      await this._symbolicate(req, res);\n    } else {\n      next();\n    }\n  }\n\n  _createRequestProcessor({\n    createStartEntry,\n    createEndEntry,\n    build,\n    delete: deleteFn,\n    finish,\n  }) {\n    return async function requestProcessor(req, res, bundleOptions) {\n      const { entryFile, graphOptions, transformOptions, serializerOptions } =\n        splitBundleOptions(bundleOptions);\n      /**\n       * `entryFile` is relative to projectRoot, we need to use resolution function\n       * to find the appropriate file with supported extensions.\n       */\n\n      const resolvedEntryFilePath = await this._resolveRelativePath(entryFile, {\n        transformOptions,\n        relativeTo: \"server\",\n      });\n      const graphId = getGraphId(resolvedEntryFilePath, transformOptions, {\n        shallow: graphOptions.shallow,\n        experimentalImportBundleSupport:\n          this._config.transformer.experimentalImportBundleSupport,\n      }); // For resources that support deletion, handle the DELETE method.\n\n      if (deleteFn && req.method === \"DELETE\") {\n        const deleteContext = {\n          graphId,\n          req,\n          res,\n        };\n\n        try {\n          await deleteFn(deleteContext);\n        } catch (error) {\n          const formattedError = formatBundlingError(error);\n          const status = error instanceof ResourceNotFoundError ? 404 : 500;\n          res.writeHead(status, {\n            \"Content-Type\": \"application/json; charset=UTF-8\",\n          });\n          res.end(JSON.stringify(formattedError));\n        }\n\n        return;\n      }\n\n      const mres = MultipartResponse.wrap(req, res);\n      const buildID = this.getNewBuildID();\n      let onProgress = null;\n      let lastProgress = -1;\n\n      if (this._config.reporter) {\n        onProgress = (transformedFileCount, totalFileCount) => {\n          const currentProgress = parseInt(\n            (transformedFileCount / totalFileCount) * 100,\n            10\n          ); // We want to throttle the updates so that we only show meaningful\n          // UI updates slow enough for the client to actually handle them. For\n          // that, we check the percentage, and only send percentages that are\n          // actually different and that have increased from the last one we sent.\n\n          if (currentProgress > lastProgress || totalFileCount < 10) {\n            mres.writeChunk(\n              {\n                \"Content-Type\": \"application/json\",\n              },\n              JSON.stringify({\n                done: transformedFileCount,\n                total: totalFileCount,\n              })\n            ); // The `uncork` called internally in Node via `promise.nextTick()` may not fire\n            // until all of the Promises are resolved because the microtask queue we're\n            // in could be starving the event loop. This can cause a bug where the progress\n            // is not actually sent in the response until after bundling is complete. This\n            // would defeat the purpose of sending progress, so we `uncork` the stream now\n            // which will force the response to flush to the client immediately.\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n\n            if (res.socket != null && res.socket.uncork != null) {\n              res.socket.uncork();\n            }\n\n            lastProgress = currentProgress;\n          }\n\n          this._reporter.update({\n            buildID,\n            type: \"bundle_transform_progressed\",\n            transformedFileCount,\n            totalFileCount,\n          });\n        };\n      }\n\n      this._reporter.update({\n        buildID,\n        bundleDetails: {\n          bundleType: bundleOptions.bundleType,\n          dev: transformOptions.dev,\n          entryFile: resolvedEntryFilePath,\n          minify: transformOptions.minify,\n          platform: transformOptions.platform,\n          runtimeBytecodeVersion: transformOptions.runtimeBytecodeVersion,\n        },\n        type: \"bundle_build_started\",\n      });\n\n      const startContext = {\n        buildID,\n        bundleOptions,\n        entryFile: resolvedEntryFilePath,\n        graphId,\n        graphOptions,\n        mres,\n        onProgress,\n        req,\n        serializerOptions,\n        transformOptions,\n      };\n      const logEntry = log(\n        createActionStartEntry(createStartEntry(startContext))\n      );\n      let result;\n\n      try {\n        result = await build(startContext);\n      } catch (error) {\n        const formattedError = formatBundlingError(error);\n        const status = error instanceof ResourceNotFoundError ? 404 : 500;\n        mres.writeHead(status, {\n          \"Content-Type\": \"application/json; charset=UTF-8\",\n        });\n        mres.end(JSON.stringify(formattedError));\n\n        this._reporter.update({\n          buildID,\n          type: \"bundle_build_failed\",\n          bundleOptions,\n        });\n\n        this._reporter.update({\n          error,\n          type: \"bundling_error\",\n        });\n\n        log({\n          action_name: \"bundling_error\",\n          error_type: formattedError.type,\n          log_entry_label: \"bundling_error\",\n          bundle_id: graphId,\n          build_id: buildID,\n          stack: formattedError.message,\n        });\n        debug(\"Bundling error\", error);\n        return;\n      }\n\n      const endContext = { ...startContext, result };\n      finish(endContext);\n\n      this._reporter.update({\n        buildID,\n        type: \"bundle_build_done\",\n      });\n\n      log(\n        /* $FlowFixMe(>=0.122.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.122.0 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        createActionEndEntry({ ...logEntry, ...createEndEntry(endContext) })\n      );\n    };\n  }\n\n  _processBundleRequest = this._createRequestProcessor({\n    createStartEntry(context) {\n      return {\n        action_name: \"Requesting bundle\",\n        bundle_url: context.req.url,\n        entry_point: context.entryFile,\n        bundler: \"delta\",\n        build_id: context.buildID,\n        bundle_options: context.bundleOptions,\n        bundle_hash: context.graphId,\n      };\n    },\n\n    createEndEntry(context) {\n      return {\n        outdated_modules: context.result.numModifiedFiles,\n      };\n    },\n\n    build: async ({\n      entryFile,\n      graphId,\n      graphOptions,\n      onProgress,\n      serializerOptions,\n      transformOptions,\n    }) => {\n      var _this$_config$server$3;\n\n      const revPromise = this._bundler.getRevisionByGraphId(graphId);\n\n      const { delta, revision } = await (revPromise != null\n        ? this._bundler.updateGraph(await revPromise, false)\n        : this._bundler.initializeGraph(entryFile, transformOptions, {\n            onProgress,\n            shallow: graphOptions.shallow,\n          }));\n\n      const serializer =\n        this._config.serializer.customSerializer ||\n        ((...args) => bundleToString(baseJSBundle(...args)).code);\n\n      const bundle = await serializer(\n        entryFile,\n        revision.prepend,\n        revision.graph,\n        {\n          asyncRequireModulePath: await this._resolveRelativePath(\n            this._config.transformer.asyncRequireModulePath,\n            {\n              transformOptions,\n              relativeTo: \"project\",\n            }\n          ),\n          processModuleFilter: this._config.serializer.processModuleFilter,\n          createModuleId: this._createModuleId,\n          getRunModuleStatement: this._config.serializer.getRunModuleStatement,\n          dev: transformOptions.dev,\n          projectRoot: this._config.projectRoot,\n          modulesOnly: serializerOptions.modulesOnly,\n          runBeforeMainModule:\n            this._config.serializer.getModulesRunBeforeMainModule(\n              path.relative(this._config.projectRoot, entryFile)\n            ),\n          runModule: serializerOptions.runModule,\n          sourceMapUrl: serializerOptions.sourceMapUrl,\n          sourceUrl: serializerOptions.sourceUrl,\n          inlineSourceMap: serializerOptions.inlineSourceMap,\n          serverRoot:\n            (_this$_config$server$3 =\n              this._config.server.unstable_serverRoot) !== null &&\n            _this$_config$server$3 !== void 0\n              ? _this$_config$server$3\n              : this._config.projectRoot,\n        }\n      );\n      const bundleCode = typeof bundle === \"string\" ? bundle : bundle.code;\n      return {\n        numModifiedFiles: delta.reset\n          ? delta.added.size + revision.prepend.length\n          : delta.added.size + delta.modified.size + delta.deleted.size,\n        lastModifiedDate: revision.date,\n        nextRevId: revision.id,\n        bundle: bundleCode,\n      };\n    },\n\n    finish({ req, mres, result }) {\n      if (\n        // We avoid parsing the dates since the client should never send a more\n        // recent date than the one returned by the Delta Bundler (if that's the\n        // case it's fine to return the whole bundle).\n        req.headers[\"if-modified-since\"] ===\n        result.lastModifiedDate.toUTCString()\n      ) {\n        debug(\"Responding with 304\");\n        mres.writeHead(304);\n        mres.end();\n      } else {\n        mres.setHeader(\n          FILES_CHANGED_COUNT_HEADER,\n          String(result.numModifiedFiles)\n        );\n        mres.setHeader(DELTA_ID_HEADER, String(result.nextRevId));\n        mres.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n        mres.setHeader(\"Last-Modified\", result.lastModifiedDate.toUTCString());\n        mres.setHeader(\n          \"Content-Length\",\n          String(Buffer.byteLength(result.bundle))\n        );\n        mres.end(result.bundle);\n      }\n    },\n\n    delete: async ({ graphId, res }) => {\n      await this._bundler.endGraph(graphId);\n      res.statusCode = 204;\n      res.end();\n    },\n  });\n  _processBytecodeBundleRequest = this._createRequestProcessor({\n    createStartEntry(context) {\n      return {\n        action_name: \"Requesting bundle\",\n        bundle_url: context.req.url,\n        entry_point: context.entryFile,\n        bundler: \"delta\",\n        build_id: context.buildID,\n        bundle_options: context.bundleOptions,\n        bundle_hash: context.graphId,\n      };\n    },\n\n    createEndEntry(context) {\n      return {\n        outdated_modules: context.result.numModifiedFiles,\n      };\n    },\n\n    build: async ({\n      entryFile,\n      graphId,\n      graphOptions,\n      onProgress,\n      serializerOptions,\n      transformOptions,\n    }) => {\n      var _this$_config$server$4;\n\n      const revPromise = this._bundler.getRevisionByGraphId(graphId);\n\n      const { delta, revision } = await (revPromise != null\n        ? this._bundler.updateGraph(await revPromise, false)\n        : this._bundler.initializeGraph(entryFile, transformOptions, {\n            onProgress,\n            shallow: graphOptions.shallow,\n          }));\n      const bundle = bundleToBytecode(\n        baseBytecodeBundle(entryFile, revision.prepend, revision.graph, {\n          asyncRequireModulePath: await this._resolveRelativePath(\n            this._config.transformer.asyncRequireModulePath,\n            {\n              transformOptions,\n              relativeTo: \"project\",\n            }\n          ),\n          processModuleFilter: this._config.serializer.processModuleFilter,\n          createModuleId: this._createModuleId,\n          getRunModuleStatement: this._config.serializer.getRunModuleStatement,\n          dev: transformOptions.dev,\n          projectRoot: this._config.projectRoot,\n          modulesOnly: serializerOptions.modulesOnly,\n          runBeforeMainModule:\n            this._config.serializer.getModulesRunBeforeMainModule(\n              path.relative(this._config.projectRoot, entryFile)\n            ),\n          runModule: serializerOptions.runModule,\n          sourceMapUrl: serializerOptions.sourceMapUrl,\n          sourceUrl: serializerOptions.sourceUrl,\n          inlineSourceMap: serializerOptions.inlineSourceMap,\n          serverRoot:\n            (_this$_config$server$4 =\n              this._config.server.unstable_serverRoot) !== null &&\n            _this$_config$server$4 !== void 0\n              ? _this$_config$server$4\n              : this._config.projectRoot,\n        })\n      );\n      return {\n        numModifiedFiles: delta.reset\n          ? delta.added.size + revision.prepend.length\n          : delta.added.size + delta.modified.size + delta.deleted.size,\n        lastModifiedDate: revision.date,\n        nextRevId: revision.id,\n        bytecode: bundle.bytecode,\n      };\n    },\n\n    finish({ req, mres, result }) {\n      if (\n        // We avoid parsing the dates since the client should never send a more\n        // recent date than the one returned by the Delta Bundler (if that's the\n        // case it's fine to return the whole bundle).\n        req.headers[\"if-modified-since\"] ===\n        result.lastModifiedDate.toUTCString()\n      ) {\n        debug(\"Responding with 304\");\n        mres.writeHead(304);\n        mres.end();\n      } else {\n        mres.setHeader(\n          FILES_CHANGED_COUNT_HEADER,\n          String(result.numModifiedFiles)\n        );\n        mres.setHeader(DELTA_ID_HEADER, String(result.nextRevId));\n        mres.setHeader(\"Content-Type\", \"application/x-metro-bytecode-bundle\");\n        mres.setHeader(\"Last-Modified\", result.lastModifiedDate.toUTCString());\n        mres.setHeader(\n          \"Content-Length\",\n          String(Buffer.byteLength(result.bytecode))\n        );\n        mres.end(result.bytecode);\n      }\n    },\n  }); // This function ensures that modules in source maps are sorted in the same\n  // order as in a plain JS bundle.\n\n  _getSortedModules(graph) {\n    const modules = [...graph.dependencies.values()]; // Assign IDs to modules in a consistent order\n\n    for (const module of modules) {\n      this._createModuleId(module.path);\n    } // Sort by IDs\n\n    return modules.sort(\n      (a, b) => this._createModuleId(a.path) - this._createModuleId(b.path)\n    );\n  }\n\n  _processSourceMapRequest = this._createRequestProcessor({\n    createStartEntry(context) {\n      return {\n        action_name: \"Requesting sourcemap\",\n        bundle_url: context.req.url,\n        entry_point: context.entryFile,\n        bundler: \"delta\",\n      };\n    },\n\n    createEndEntry(context) {\n      return {\n        bundler: \"delta\",\n      };\n    },\n\n    build: async ({\n      entryFile,\n      graphId,\n      graphOptions,\n      onProgress,\n      serializerOptions,\n      transformOptions,\n    }) => {\n      let revision;\n\n      const revPromise = this._bundler.getRevisionByGraphId(graphId);\n\n      if (revPromise == null) {\n        ({ revision } = await this._bundler.initializeGraph(\n          entryFile,\n          transformOptions,\n          {\n            onProgress,\n            shallow: graphOptions.shallow,\n          }\n        ));\n      } else {\n        ({ revision } = await this._bundler.updateGraph(\n          await revPromise,\n          false\n        ));\n      }\n\n      let { prepend, graph } = revision;\n\n      if (serializerOptions.modulesOnly) {\n        prepend = [];\n      }\n\n      return sourceMapString([...prepend, ...this._getSortedModules(graph)], {\n        excludeSource: serializerOptions.excludeSource,\n        processModuleFilter: this._config.serializer.processModuleFilter,\n      });\n    },\n\n    finish({ mres, result }) {\n      mres.setHeader(\"Content-Type\", \"application/json\");\n      mres.end(result.toString());\n    },\n  });\n  _processAssetsRequest = this._createRequestProcessor({\n    createStartEntry(context) {\n      return {\n        action_name: \"Requesting assets\",\n        bundle_url: context.req.url,\n        entry_point: context.entryFile,\n        bundler: \"delta\",\n      };\n    },\n\n    createEndEntry(context) {\n      return {\n        bundler: \"delta\",\n      };\n    },\n\n    build: async ({ entryFile, transformOptions, onProgress }) => {\n      const dependencies = await this._bundler.getDependencies(\n        [entryFile],\n        transformOptions,\n        {\n          onProgress,\n          shallow: false,\n        }\n      );\n      return await getAssets(dependencies, {\n        processModuleFilter: this._config.serializer.processModuleFilter,\n        assetPlugins: this._config.transformer.assetPlugins,\n        platform: transformOptions.platform,\n        publicPath: this._config.transformer.publicPath,\n        projectRoot: this._config.projectRoot,\n      });\n    },\n\n    finish({ mres, result }) {\n      mres.setHeader(\"Content-Type\", \"application/json\");\n      mres.end(JSON.stringify(result));\n    },\n  });\n\n  async _symbolicate(req, res) {\n    const getCodeFrame = (urls, symbolicatedStack) => {\n      for (let i = 0; i < symbolicatedStack.length; i++) {\n        const { collapse, column, file, lineNumber } = symbolicatedStack[i];\n        const fileAbsolute = path.resolve(\n          this._config.projectRoot,\n          file !== null && file !== void 0 ? file : \"\"\n        );\n\n        if (collapse || lineNumber == null || urls.has(fileAbsolute)) {\n          continue;\n        }\n\n        try {\n          return {\n            content: codeFrameColumns(\n              fs.readFileSync(fileAbsolute, \"utf8\"),\n              {\n                // Metro returns 0 based columns but codeFrameColumns expects 1-based columns\n                // $FlowFixMe[unsafe-addition]\n                start: {\n                  column: column + 1,\n                  line: lineNumber,\n                },\n              },\n              {\n                forceColor: true,\n              }\n            ),\n            location: {\n              row: lineNumber,\n              column,\n            },\n            fileName: file,\n          };\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      return null;\n    };\n\n    try {\n      const symbolicatingLogEntry = log(\n        createActionStartEntry(\"Symbolicating\")\n      );\n      debug(\"Start symbolication\");\n      /* $FlowFixMe: where is `rawBody` defined? Is it added by the `connect` framework? */\n\n      const body = await req.rawBody;\n      const stack = JSON.parse(body).stack.map((frame) => {\n        if (frame.file && frame.file.includes(\"://\")) {\n          return {\n            ...frame,\n            file: this._config.server.rewriteRequestUrl(frame.file),\n          };\n        }\n\n        return frame;\n      }); // In case of multiple bundles / HMR, some stack frames can have different URLs from others\n\n      const urls = new Set();\n      stack.forEach((frame) => {\n        const sourceUrl = frame.file; // Skip `/debuggerWorker.js` which does not need symbolication.\n\n        if (\n          sourceUrl != null &&\n          !urls.has(sourceUrl) &&\n          !sourceUrl.endsWith(\"/debuggerWorker.js\") &&\n          sourceUrl.startsWith(\"http\")\n        ) {\n          urls.add(sourceUrl);\n        }\n      });\n      debug(\"Getting source maps for symbolication\");\n      const sourceMaps = await Promise.all(\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        Array.from(urls.values()).map(this._explodedSourceMapForURL, this)\n      );\n      debug(\"Performing fast symbolication\");\n      const symbolicatedStack = await await symbolicate(\n        stack,\n        zip(urls.values(), sourceMaps),\n        this._config\n      );\n      debug(\"Symbolication done\");\n      res.end(\n        JSON.stringify({\n          codeFrame: getCodeFrame(urls, symbolicatedStack),\n          stack: symbolicatedStack,\n        })\n      );\n      process.nextTick(() => {\n        log(createActionEndEntry(symbolicatingLogEntry));\n      });\n    } catch (error) {\n      console.error(error.stack || error);\n      res.statusCode = 500;\n      res.end(\n        JSON.stringify({\n          error: error.message,\n        })\n      );\n    }\n  }\n\n  async _explodedSourceMapForURL(reqUrl) {\n    const options = parseOptionsFromUrl(\n      reqUrl,\n      new Set(this._config.resolver.platforms),\n      BYTECODE_VERSION\n    );\n    const {\n      entryFile,\n      transformOptions,\n      serializerOptions,\n      graphOptions,\n      onProgress,\n    } = splitBundleOptions(options);\n    /**\n     * `entryFile` is relative to projectRoot, we need to use resolution function\n     * to find the appropriate file with supported extensions.\n     */\n\n    const resolvedEntryFilePath = await this._resolveRelativePath(entryFile, {\n      transformOptions,\n      relativeTo: \"server\",\n    });\n    const graphId = getGraphId(resolvedEntryFilePath, transformOptions, {\n      shallow: graphOptions.shallow,\n      experimentalImportBundleSupport:\n        this._config.transformer.experimentalImportBundleSupport,\n    });\n    let revision;\n\n    const revPromise = this._bundler.getRevisionByGraphId(graphId);\n\n    if (revPromise == null) {\n      ({ revision } = await this._bundler.initializeGraph(\n        resolvedEntryFilePath,\n        transformOptions,\n        {\n          onProgress,\n          shallow: graphOptions.shallow,\n        }\n      ));\n    } else {\n      ({ revision } = await this._bundler.updateGraph(await revPromise, false));\n    }\n\n    let { prepend, graph } = revision;\n\n    if (serializerOptions.modulesOnly) {\n      prepend = [];\n    }\n\n    return getExplodedSourceMap(\n      [...prepend, ...this._getSortedModules(graph)],\n      {\n        processModuleFilter: this._config.serializer.processModuleFilter,\n      }\n    );\n  }\n\n  async _resolveRelativePath(filePath, { transformOptions, relativeTo }) {\n    const resolutionFn = await transformHelpers.getResolveDependencyFn(\n      this._bundler.getBundler(),\n      transformOptions.platform\n    );\n    const rootDir =\n      relativeTo === \"server\"\n        ? this._getServerRootDir()\n        : this._config.projectRoot;\n    return resolutionFn(`${rootDir}/.`, filePath);\n  }\n\n  getNewBuildID() {\n    return (this._nextBundleBuildID++).toString(36);\n  }\n\n  getPlatforms() {\n    return this._config.resolver.platforms;\n  }\n\n  getWatchFolders() {\n    return this._config.watchFolders;\n  }\n\n  static DEFAULT_GRAPH_OPTIONS = {\n    customTransformOptions: Object.create(null),\n    dev: true,\n    hot: false,\n    minify: false,\n    runtimeBytecodeVersion: null,\n    unstable_transformProfile: \"default\",\n  };\n  static DEFAULT_BUNDLE_OPTIONS = {\n    ...Server.DEFAULT_GRAPH_OPTIONS,\n    excludeSource: false,\n    inlineSourceMap: false,\n    modulesOnly: false,\n    onProgress: null,\n    runModule: true,\n    shallow: false,\n    sourceMapUrl: null,\n    sourceUrl: null,\n  };\n\n  _getServerRootDir() {\n    var _this$_config$server$5;\n\n    return (_this$_config$server$5 =\n      this._config.server.unstable_serverRoot) !== null &&\n      _this$_config$server$5 !== void 0\n      ? _this$_config$server$5\n      : this._config.projectRoot;\n  }\n\n  _getEntryPointAbsolutePath(entryFile) {\n    return path.resolve(this._getServerRootDir(), entryFile);\n  } // Wait for the server to finish initializing.\n\n  async ready() {\n    await this._bundler.ready();\n  }\n}\n\nfunction* zip(xs, ys) {\n  //$FlowIssue #9324959\n  const ysIter = ys[Symbol.iterator]();\n\n  for (const x of xs) {\n    const y = ysIter.next();\n\n    if (y.done) {\n      return;\n    }\n\n    yield [x, y.value];\n  }\n}\n\nmodule.exports = Server;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}