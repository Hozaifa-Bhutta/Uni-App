{"ast":null,"code":"\"use strict\";\n\nvar os = require(\"os\");\n\nmodule.exports = function (workers) {\n  var cores = os.cpus().length;\n  return typeof workers === \"number\" && Number.isInteger(workers) ? Math.min(cores, workers > 0 ? workers : 1) : Math.max(1, Math.ceil(cores * (0.5 + 0.5 * Math.exp(-cores * 0.07)) - 1));\n};","map":{"version":3,"names":["os","require","module","exports","workers","cores","cpus","length","Number","isInteger","Math","min","max","ceil","exp"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/getMaxWorkers.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst os = require(\"os\");\n\nmodule.exports = (workers) => {\n  const cores = os.cpus().length;\n  return typeof workers === \"number\" && Number.isInteger(workers)\n    ? Math.min(cores, workers > 0 ? workers : 1)\n    : Math.max(1, Math.ceil(cores * (0.5 + 0.5 * Math.exp(-cores * 0.07)) - 1));\n};\n"],"mappings":"AASA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,OAAD,EAAa;EAC5B,IAAMC,KAAK,GAAGL,EAAE,CAACM,IAAH,GAAUC,MAAxB;EACA,OAAO,OAAOH,OAAP,KAAmB,QAAnB,IAA+BI,MAAM,CAACC,SAAP,CAAiBL,OAAjB,CAA/B,GACHM,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBD,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,CAAxC,CADG,GAEHM,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYF,IAAI,CAACG,IAAL,CAAUR,KAAK,IAAI,MAAM,MAAMK,IAAI,CAACI,GAAL,CAAS,CAACT,KAAD,GAAS,IAAlB,CAAhB,CAAL,GAAgD,CAA1D,CAAZ,CAFJ;AAGD,CALD"},"metadata":{},"sourceType":"script"}