{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createShortcut = void 0;\n\nfunction _fs() {\n  var data = require(\"fs\");\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = require(\"path\");\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _os() {\n  var data = require(\"os\");\n\n  _os = function _os() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _executeWinCommand = require(\"./executeWinCommand\");\n\nvar createShortcut = function _callee(_ref) {\n  var path, name, ico, script, scriptPath;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          path = _ref.path, name = _ref.name, ico = _ref.ico;\n          script = \"option explicit\\nsub createLnk()\\n    dim objShell, strStartMenuPath, objLink\\n    set objShell = CreateObject(\\\"WScript.Shell\\\")\\n    strStartMenuPath = objShell.SpecialFolders(\\\"StartMenu\\\")\\n    set objLink = objShell.CreateShortcut(strStartMenuPath + \\\"\\\\\\\" + \\\"\" + name + \".lnk\\\")\\n    objLink.TargetPath = \\\"\" + path + \"\\\"\\n    objLink.IconLocation = \\\"\" + ico + \"\\\"\\n    objLink.Save\\nend sub\\n\\ncall createLnk()\";\n          scriptPath = (0, _path().join)((0, _os().tmpdir)(), \"shortcut-\" + Math.random() + \".vbs\");\n          (0, _fs().writeFileSync)(scriptPath, script, 'utf-8');\n          _context.next = 6;\n          return _regeneratorRuntime.awrap((0, _executeWinCommand.executeCommand)(scriptPath));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.createShortcut = createShortcut;","map":{"version":3,"sources":["../../../src/tools/windows/create-shortcut.ts"],"names":["createShortcut","ico","script","name","path","scriptPath","Math"],"mappings":";;;;;;;;;AAAA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,uBAAA;;AAWO,IAAMA,cAAc,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAO,IAAP,QAAO,IAAP,EAAO,IAAP,QAAO,IAAP,EAAoBC,GAApB,QAAoBA,GAApB;UAEtBC,MAFsB,kRAQyCC,IARzC,4CASFC,IATE,yCAUAH,GAVA;UAgBtBI,UAhBsB,GAgBT,CAAA,GAAA,KAAA,GAAA,IAAA,EAAK,CAAA,GAAA,GAAA,GAAL,MAAK,GAAL,gBAA2BC,IAAI,CAAlD,MAA8CA,EAA3B,UAhBS;UAiB5B,CAAA,GAAA,GAAA,GAAA,aAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA;UAjB4B;UAAA,iCAmBtB,CAAA,GAAA,kBAAA,CAAA,cAAA,EAAN,UAAM,CAnBsB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAvB","sourcesContent":["import {writeFileSync} from 'fs';\nimport {join} from 'path';\nimport {tmpdir} from 'os';\nimport {executeCommand} from './executeWinCommand';\n\ntype LnkOptions = {\n  path: string;\n  name: string;\n  ico: string;\n};\n\n/**\n * Creates a script in the user's Startup menu\n */\nexport const createShortcut = async ({path, name, ico}: LnkOptions) => {\n  // prettier-ignore\n  const script =\n`option explicit\nsub createLnk()\n    dim objShell, strStartMenuPath, objLink\n    set objShell = CreateObject(\"WScript.Shell\")\n    strStartMenuPath = objShell.SpecialFolders(\"StartMenu\")\n    set objLink = objShell.CreateShortcut(strStartMenuPath + \"\\\\\" + \"${name}.lnk\")\n    objLink.TargetPath = \"${path}\"\n    objLink.IconLocation = \"${ico}\"\n    objLink.Save\nend sub\n\ncall createLnk()`;\n\n  const scriptPath = join(tmpdir(), `shortcut-${Math.random()}.vbs`);\n  writeFileSync(scriptPath, script, 'utf-8');\n\n  await executeCommand(scriptPath);\n};\n"]},"metadata":{},"sourceType":"script"}