{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  var data = require(\"path\");\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _downloadAndUnzip = require(\"../downloadAndUnzip\");\n\nvar _executeWinCommand = require(\"../windows/executeWinCommand\");\n\nvar _androidWinHelpers = require(\"../windows/androidWinHelpers\");\n\nvar _createShortcut = require(\"../windows/create-shortcut\");\n\nvar _default = {\n  label: 'Android Studio',\n  description: 'Required for building and installing your app on Android',\n  getDiagnostics: function getDiagnostics(_ref) {\n    var IDEs, needsToBeFixed, missing, androidStudioPath, _await, stdout, version;\n\n    return _regeneratorRuntime.async(function getDiagnostics$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            IDEs = _ref.IDEs;\n            needsToBeFixed = IDEs['Android Studio'] === 'Not Found';\n            missing = {\n              needsToBeFixed: needsToBeFixed,\n              version: IDEs['Android Studio']\n            };\n\n            if (!(needsToBeFixed && process.platform === 'win32')) {\n              _context.next = 13;\n              break;\n            }\n\n            androidStudioPath = (0, _path().join)((0, _androidWinHelpers.getUserAndroidPath)(), 'android-studio', 'bin', 'studio.exe').replace(/\\\\/g, '\\\\\\\\');\n            _context.next = 7;\n            return _regeneratorRuntime.awrap((0, _executeWinCommand.executeCommand)(\"wmic datafile where name=\\\"\" + androidStudioPath + \"\\\" get Version\"));\n\n          case 7:\n            _await = _context.sent;\n            stdout = _await.stdout;\n            version = stdout.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n\n            if (!(version === '')) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", missing);\n\n          case 12:\n            return _context.abrupt(\"return\", {\n              needsToBeFixed: false,\n              version: version\n            });\n\n          case 13:\n            return _context.abrupt(\"return\", missing);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  win32AutomaticFix: function win32AutomaticFix(_ref2) {\n    var loader, androidStudioUrl, installPath, prefix, binFolder;\n    return _regeneratorRuntime.async(function win32AutomaticFix$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loader = _ref2.loader;\n            androidStudioUrl = 'https://redirector.gvt1.com/edgedl/android/studio/ide-zips/3.6.3.0/android-studio-ide-192.6392135-windows.zip';\n            installPath = (0, _androidWinHelpers.getUserAndroidPath)();\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap((0, _downloadAndUnzip.downloadAndUnzip)({\n              loader: loader,\n              downloadUrl: androidStudioUrl,\n              component: 'Android Studio',\n              installPath: installPath\n            }));\n\n          case 5:\n            prefix = process.arch === 'x64' ? '64' : '';\n            binFolder = (0, _path().join)(installPath, 'android-studio', 'bin');\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap((0, _createShortcut.createShortcut)({\n              path: (0, _path().join)(binFolder, \"studio\" + prefix + \".exe\"),\n              name: 'Android Studio',\n              ico: (0, _path().join)(binFolder, 'studio.ico')\n            }));\n\n          case 9:\n            loader.succeed(\"Android Studio installed successfully in \\\"\" + installPath + \"\\\".\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  runAutomaticFix: function runAutomaticFix(_ref3) {\n    var loader, logManualInstallation;\n    return _regeneratorRuntime.async(function runAutomaticFix$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            loader = _ref3.loader, logManualInstallation = _ref3.logManualInstallation;\n            loader.fail();\n            return _context3.abrupt(\"return\", logManualInstallation({\n              healthcheck: 'Android Studio',\n              url: 'https://reactnative.dev/docs/environment-setup'\n            }));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["../../../src/tools/healthchecks/androidStudio.ts"],"names":["label","description","getDiagnostics","IDEs","needsToBeFixed","missing","version","process","androidStudioPath","stdout","win32AutomaticFix","loader","androidStudioUrl","installPath","downloadUrl","component","prefix","binFolder","path","name","ico","runAutomaticFix","logManualInstallation","healthcheck","url"],"mappings":"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","sourcesContent":["import {join} from 'path';\n\nimport {HealthCheckInterface} from '../../types';\n\nimport {downloadAndUnzip} from '../downloadAndUnzip';\nimport {executeCommand} from '../windows/executeWinCommand';\nimport {getUserAndroidPath} from '../windows/androidWinHelpers';\nimport {createShortcut} from '../windows/create-shortcut';\n\nexport default {\n  label: 'Android Studio',\n  description: 'Required for building and installing your app on Android',\n  getDiagnostics: async ({IDEs}) => {\n    const needsToBeFixed = IDEs['Android Studio'] === 'Not Found';\n\n    const missing = {\n      needsToBeFixed,\n      version: IDEs['Android Studio'],\n    };\n\n    // On Windows `doctor` installs Android Studio locally in a well-known place\n    if (needsToBeFixed && process.platform === 'win32') {\n      const androidStudioPath = join(\n        getUserAndroidPath(),\n        'android-studio',\n        'bin',\n        'studio.exe',\n      ).replace(/\\\\/g, '\\\\\\\\');\n      const {stdout} = await executeCommand(\n        `wmic datafile where name=\"${androidStudioPath}\" get Version`,\n      );\n      const version = stdout.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n\n      if (version === '') {\n        return missing;\n      }\n\n      return {\n        needsToBeFixed: false,\n        version,\n      };\n    }\n\n    return missing;\n  },\n  win32AutomaticFix: async ({loader}) => {\n    // Need a GitHub action to update automatically. See #1180\n    const androidStudioUrl =\n      'https://redirector.gvt1.com/edgedl/android/studio/ide-zips/3.6.3.0/android-studio-ide-192.6392135-windows.zip';\n\n    const installPath = getUserAndroidPath();\n    await downloadAndUnzip({\n      loader,\n      downloadUrl: androidStudioUrl,\n      component: 'Android Studio',\n      installPath: installPath,\n    });\n\n    const prefix = process.arch === 'x64' ? '64' : '';\n    const binFolder = join(installPath, 'android-studio', 'bin');\n\n    await createShortcut({\n      path: join(binFolder, `studio${prefix}.exe`),\n      name: 'Android Studio',\n      ico: join(binFolder, 'studio.ico'),\n    });\n\n    loader.succeed(\n      `Android Studio installed successfully in \"${installPath}\".`,\n    );\n  },\n  runAutomaticFix: async ({loader, logManualInstallation}) => {\n    loader.fail();\n\n    return logManualInstallation({\n      healthcheck: 'Android Studio',\n      url: 'https://reactnative.dev/docs/environment-setup',\n    });\n  },\n} as HealthCheckInterface;\n"]},"metadata":{},"sourceType":"script"}