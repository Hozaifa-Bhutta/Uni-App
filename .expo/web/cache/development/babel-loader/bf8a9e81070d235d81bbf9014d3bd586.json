{"ast":null,"code":"var fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar invalidWin32Path = require(\"./win32\").invalidWin32Path;\n\nvar o777 = parseInt('0777', 8);\n\nfunction mkdirsSync(p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n\n  var mode = opts.mode;\n  var xfs = opts.fs || fs;\n\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    var errInval = new Error(p + ' contains invalid WIN32 path characters.');\n    errInval.code = 'EINVAL';\n    throw errInval;\n  }\n\n  if (mode === undefined) {\n    mode = o777 & ~process.umask();\n  }\n\n  if (!made) made = null;\n  p = path.resolve(p);\n\n  try {\n    xfs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT':\n        if (path.dirname(p) === p) throw err0;\n        made = mkdirsSync(path.dirname(p), opts, made);\n        mkdirsSync(p, opts, made);\n        break;\n\n      default:\n        var stat;\n\n        try {\n          stat = xfs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n\n  return made;\n}\n\nmodule.exports = mkdirsSync;","map":{"version":3,"names":["fs","require","path","invalidWin32Path","o777","parseInt","mkdirsSync","p","opts","made","mode","xfs","process","platform","errInval","Error","code","undefined","umask","resolve","mkdirSync","err0","dirname","stat","statSync","err1","isDirectory","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js"],"sourcesContent":["var fs = require('graceful-fs')\nvar path = require('path')\nvar invalidWin32Path = require('./win32').invalidWin32Path\n\nvar o777 = parseInt('0777', 8)\n\nfunction mkdirsSync (p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = { mode: opts }\n  }\n\n  var mode = opts.mode\n  var xfs = opts.fs || fs\n\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    var errInval = new Error(p + ' contains invalid WIN32 path characters.')\n    errInval.code = 'EINVAL'\n    throw errInval\n  }\n\n  if (mode === undefined) {\n    mode = o777 & (~process.umask())\n  }\n  if (!made) made = null\n\n  p = path.resolve(p)\n\n  try {\n    xfs.mkdirSync(p, mode)\n    made = made || p\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT':\n        if (path.dirname(p) === p) throw err0\n        made = mkdirsSync(path.dirname(p), opts, made)\n        mkdirsSync(p, opts, made)\n        break\n\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n      default:\n        var stat\n        try {\n          stat = xfs.statSync(p)\n        } catch (err1) {\n          throw err0\n        }\n        if (!stat.isDirectory()) throw err0\n        break\n    }\n  }\n\n  return made\n}\n\nmodule.exports = mkdirsSync\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,WAAP,CAAmBE,gBAA1C;;AAEA,IAAIC,IAAI,GAAGC,QAAQ,CAAC,MAAD,EAAS,CAAT,CAAnB;;AAEA,SAASC,UAAT,CAAqBC,CAArB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;EAClC,IAAI,CAACD,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;IACrCA,IAAI,GAAG;MAAEE,IAAI,EAAEF;IAAR,CAAP;EACD;;EAED,IAAIE,IAAI,GAAGF,IAAI,CAACE,IAAhB;EACA,IAAIC,GAAG,GAAGH,IAAI,CAACR,EAAL,IAAWA,EAArB;;EAEA,IAAIY,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCV,gBAAgB,CAACI,CAAD,CAApD,EAAyD;IACvD,IAAIO,QAAQ,GAAG,IAAIC,KAAJ,CAAUR,CAAC,GAAG,0CAAd,CAAf;IACAO,QAAQ,CAACE,IAAT,GAAgB,QAAhB;IACA,MAAMF,QAAN;EACD;;EAED,IAAIJ,IAAI,KAAKO,SAAb,EAAwB;IACtBP,IAAI,GAAGN,IAAI,GAAI,CAACQ,OAAO,CAACM,KAAR,EAAhB;EACD;;EACD,IAAI,CAACT,IAAL,EAAWA,IAAI,GAAG,IAAP;EAEXF,CAAC,GAAGL,IAAI,CAACiB,OAAL,CAAaZ,CAAb,CAAJ;;EAEA,IAAI;IACFI,GAAG,CAACS,SAAJ,CAAcb,CAAd,EAAiBG,IAAjB;IACAD,IAAI,GAAGA,IAAI,IAAIF,CAAf;EACD,CAHD,CAGE,OAAOc,IAAP,EAAa;IACb,QAAQA,IAAI,CAACL,IAAb;MACE,KAAK,QAAL;QACE,IAAId,IAAI,CAACoB,OAAL,CAAaf,CAAb,MAAoBA,CAAxB,EAA2B,MAAMc,IAAN;QAC3BZ,IAAI,GAAGH,UAAU,CAACJ,IAAI,CAACoB,OAAL,CAAaf,CAAb,CAAD,EAAkBC,IAAlB,EAAwBC,IAAxB,CAAjB;QACAH,UAAU,CAACC,CAAD,EAAIC,IAAJ,EAAUC,IAAV,CAAV;QACA;;MAKF;QACE,IAAIc,IAAJ;;QACA,IAAI;UACFA,IAAI,GAAGZ,GAAG,CAACa,QAAJ,CAAajB,CAAb,CAAP;QACD,CAFD,CAEE,OAAOkB,IAAP,EAAa;UACb,MAAMJ,IAAN;QACD;;QACD,IAAI,CAACE,IAAI,CAACG,WAAL,EAAL,EAAyB,MAAML,IAAN;QACzB;IAlBJ;EAoBD;;EAED,OAAOZ,IAAP;AACD;;AAEDkB,MAAM,CAACC,OAAP,GAAiBtB,UAAjB"},"metadata":{},"sourceType":"script"}