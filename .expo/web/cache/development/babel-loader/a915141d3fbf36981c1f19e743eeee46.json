{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _versionRanges = _interopRequireDefault(require(\"../versionRanges\"));\n\nvar _checkInstallation = require(\"../checkInstallation\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = {\n  label: 'Node.js',\n  getDiagnostics: function getDiagnostics(_ref) {\n    var Binaries;\n    return _regeneratorRuntime.async(function getDiagnostics$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Binaries = _ref.Binaries;\n            return _context.abrupt(\"return\", {\n              needsToBeFixed: (0, _checkInstallation.doesSoftwareNeedToBeFixed)({\n                version: Binaries.Node.version,\n                versionRange: _versionRanges.default.NODE_JS\n              }),\n              version: Binaries.Node.version,\n              versionRange: _versionRanges.default.NODE_JS\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  runAutomaticFix: function runAutomaticFix(_ref2) {\n    var loader, logManualInstallation;\n    return _regeneratorRuntime.async(function runAutomaticFix$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loader = _ref2.loader, logManualInstallation = _ref2.logManualInstallation;\n            loader.fail();\n            logManualInstallation({\n              healthcheck: 'Node.js',\n              url: 'https://nodejs.org/en/download/'\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["../../../src/tools/healthchecks/nodeJS.ts"],"names":["label","getDiagnostics","Binaries","needsToBeFixed","version","versionRange","versionRanges","NODE_JS","runAutomaticFix","logManualInstallation","loader","healthcheck","url"],"mappings":";;;;;;;;;AAAA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,wBAAA;;;;;;;;eAGe;EACbA,KAAK,EADQ,SAAA;EAEbC,cAAc,EAAE;IAAA;IAAA;MAAA;QAAA;UAAA;YAAQC,QAAR,QAAQA,QAAR;YAAA,iCAAuB;cACrCC,cAAc,EAAE,CAAA,GAAA,kBAAA,CAAA,yBAAA,EAA0B;gBACxCC,OAAO,EAAEF,QAAQ,CAARA,IAAAA,CAD+B,OAAA;gBAExCG,YAAY,EAAEC,cAAAA,CAAAA,OAAAA,CAAcC;cAFY,CAA1B,CADqB;cAKrCH,OAAO,EAAEF,QAAQ,CAARA,IAAAA,CAL4B,OAAA;cAMrCG,YAAY,EAAEC,cAAAA,CAAAA,OAAAA,CAAcC;YANS,CAAvB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAFH;EAUbC,eAAe,EAAE;IAAA;IAAA;MAAA;QAAA;UAAA;YAAO,MAAP,SAAO,MAAP,EAAgBC,qBAAhB,SAAgBA,qBAAhB;YACfC,MAAM,CAANA,IAAAA;YAEAD,qBAAqB,CAAC;cACpBE,WAAW,EADS,SAAA;cAEpBC,GAAG,EAAE;YAFe,CAAD,CAArBH;;UAHe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AAVJ,C","sourcesContent":["import versionRanges from '../versionRanges';\nimport {doesSoftwareNeedToBeFixed} from '../checkInstallation';\nimport {HealthCheckInterface} from '../../types';\n\nexport default {\n  label: 'Node.js',\n  getDiagnostics: async ({Binaries}) => ({\n    needsToBeFixed: doesSoftwareNeedToBeFixed({\n      version: Binaries.Node.version,\n      versionRange: versionRanges.NODE_JS,\n    }),\n    version: Binaries.Node.version,\n    versionRange: versionRanges.NODE_JS,\n  }),\n  runAutomaticFix: async ({loader, logManualInstallation}) => {\n    loader.fail();\n\n    logManualInstallation({\n      healthcheck: 'Node.js',\n      url: 'https://nodejs.org/en/download/',\n    });\n  },\n} as HealthCheckInterface;\n"]},"metadata":{},"sourceType":"script"}