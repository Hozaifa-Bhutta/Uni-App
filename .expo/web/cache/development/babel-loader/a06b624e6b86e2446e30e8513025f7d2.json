{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar createInlinePlatformChecks = require(\"./utils/createInlinePlatformChecks\");\n\nvar env = {\n  name: \"env\"\n};\nvar nodeEnv = {\n  name: \"NODE_ENV\"\n};\nvar processId = {\n  name: \"process\"\n};\nvar dev = {\n  name: \"__DEV__\"\n};\n\nfunction inlinePlugin(_ref, options) {\n  var t = _ref.types;\n  var isAssignmentExpression = t.isAssignmentExpression,\n      isIdentifier = t.isIdentifier,\n      isMemberExpression = t.isMemberExpression,\n      isObjectExpression = t.isObjectExpression,\n      isObjectMethod = t.isObjectMethod,\n      isObjectProperty = t.isObjectProperty,\n      isSpreadElement = t.isSpreadElement,\n      isStringLiteral = t.isStringLiteral;\n\n  var _createInlinePlatform = createInlinePlatformChecks(t, options.requireName || \"require\"),\n      isPlatformNode = _createInlinePlatform.isPlatformNode,\n      isPlatformSelectNode = _createInlinePlatform.isPlatformSelectNode;\n\n  var isGlobal = function isGlobal(binding) {\n    return !binding;\n  };\n\n  var isFlowDeclared = function isFlowDeclared(binding) {\n    return t.isDeclareVariable(binding.path);\n  };\n\n  var isGlobalOrFlowDeclared = function isGlobalOrFlowDeclared(binding) {\n    return isGlobal(binding) || isFlowDeclared(binding);\n  };\n\n  var isLeftHandSideOfAssignmentExpression = function isLeftHandSideOfAssignmentExpression(node, parent) {\n    return isAssignmentExpression(parent) && parent.left === node;\n  };\n\n  var isProcessEnvNodeEnv = function isProcessEnvNodeEnv(node, scope) {\n    return isIdentifier(node.property, nodeEnv) && isMemberExpression(node.object) && isIdentifier(node.object.property, env) && isIdentifier(node.object.object, processId) && isGlobal(scope.getBinding(processId.name));\n  };\n\n  var isDev = function isDev(node, parent, scope) {\n    return isIdentifier(node, dev) && isGlobalOrFlowDeclared(scope.getBinding(dev.name)) && !isMemberExpression(parent) && (!isObjectProperty(parent) || parent.value === node);\n  };\n\n  function findProperty(objectExpression, key, fallback) {\n    var _value;\n\n    var value = null;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(objectExpression.properties), _step; !(_step = _iterator()).done;) {\n      var p = _step.value;\n\n      if (!isObjectProperty(p) && !isObjectMethod(p)) {\n        continue;\n      }\n\n      if (isIdentifier(p.key) && p.key.name === key || isStringLiteral(p.key) && p.key.value === key) {\n        if (isObjectProperty(p)) {\n          value = p.value;\n          break;\n        } else if (isObjectMethod(p)) {\n          value = t.toExpression(p);\n          break;\n        }\n      }\n    }\n\n    return (_value = value) !== null && _value !== void 0 ? _value : fallback();\n  }\n\n  function hasStaticProperties(objectExpression) {\n    return objectExpression.properties.every(function (p) {\n      if (p.computed || isSpreadElement(p)) {\n        return false;\n      }\n\n      if (isObjectMethod(p) && p.kind !== \"method\") {\n        return false;\n      }\n\n      return isIdentifier(p.key) || isStringLiteral(p.key);\n    });\n  }\n\n  return {\n    visitor: {\n      Identifier: function Identifier(path, state) {\n        if (!state.opts.dev && isDev(path.node, path.parent, path.scope)) {\n          path.replaceWith(t.booleanLiteral(state.opts.dev));\n        }\n      },\n      MemberExpression: function MemberExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n        var opts = state.opts;\n\n        if (!isLeftHandSideOfAssignmentExpression(node, path.parent)) {\n          if (opts.inlinePlatform && isPlatformNode(node, scope, !!opts.isWrapped)) {\n            path.replaceWith(t.stringLiteral(opts.platform));\n          } else if (!opts.dev && isProcessEnvNodeEnv(node, scope)) {\n            path.replaceWith(t.stringLiteral(opts.dev ? \"development\" : \"production\"));\n          }\n        }\n      },\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n        var arg = node.arguments[0];\n        var opts = state.opts;\n\n        if (opts.inlinePlatform && isPlatformSelectNode(node, scope, !!opts.isWrapped) && isObjectExpression(arg)) {\n          if (hasStaticProperties(arg)) {\n            var fallback = function fallback() {\n              return findProperty(arg, \"native\", function () {\n                return findProperty(arg, \"default\", function () {\n                  return t.identifier(\"undefined\");\n                });\n              });\n            };\n\n            path.replaceWith(findProperty(arg, opts.platform, fallback));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = inlinePlugin;","map":{"version":3,"names":["createInlinePlatformChecks","require","env","name","nodeEnv","processId","dev","inlinePlugin","options","t","types","isAssignmentExpression","isIdentifier","isMemberExpression","isObjectExpression","isObjectMethod","isObjectProperty","isSpreadElement","isStringLiteral","requireName","isPlatformNode","isPlatformSelectNode","isGlobal","binding","isFlowDeclared","isDeclareVariable","path","isGlobalOrFlowDeclared","isLeftHandSideOfAssignmentExpression","node","parent","left","isProcessEnvNodeEnv","scope","property","object","getBinding","isDev","value","findProperty","objectExpression","key","fallback","_value","properties","p","toExpression","hasStaticProperties","every","computed","kind","visitor","Identifier","state","opts","replaceWith","booleanLiteral","MemberExpression","inlinePlatform","isWrapped","stringLiteral","platform","CallExpression","arg","arguments","identifier","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-transform-plugins/src/inline-plugin.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\n// type only import. No runtime dependency\n// eslint-disable-next-line import/no-extraneous-dependencies\nconst createInlinePlatformChecks = require(\"./utils/createInlinePlatformChecks\");\n\nconst env = {\n  name: \"env\",\n};\nconst nodeEnv = {\n  name: \"NODE_ENV\",\n};\nconst processId = {\n  name: \"process\",\n};\nconst dev = {\n  name: \"__DEV__\",\n};\n\nfunction inlinePlugin({ types: t }, options) {\n  const {\n    isAssignmentExpression,\n    isIdentifier,\n    isMemberExpression,\n    isObjectExpression,\n    isObjectMethod,\n    isObjectProperty,\n    isSpreadElement,\n    isStringLiteral,\n  } = t;\n  const { isPlatformNode, isPlatformSelectNode } = createInlinePlatformChecks(\n    t,\n    options.requireName || \"require\"\n  );\n\n  const isGlobal = (binding) => !binding;\n\n  const isFlowDeclared = (binding) => t.isDeclareVariable(binding.path);\n\n  const isGlobalOrFlowDeclared = (binding) =>\n    isGlobal(binding) || isFlowDeclared(binding);\n\n  const isLeftHandSideOfAssignmentExpression = (node, parent) =>\n    isAssignmentExpression(parent) && parent.left === node;\n\n  const isProcessEnvNodeEnv = (node, scope) =>\n    isIdentifier(node.property, nodeEnv) &&\n    isMemberExpression(node.object) &&\n    isIdentifier(node.object.property, env) &&\n    isIdentifier(node.object.object, processId) &&\n    isGlobal(scope.getBinding(processId.name));\n\n  const isDev = (node, parent, scope) =>\n    isIdentifier(node, dev) &&\n    isGlobalOrFlowDeclared(scope.getBinding(dev.name)) &&\n    !isMemberExpression(parent) && // not { __DEV__: 'value'}\n    (!isObjectProperty(parent) || parent.value === node);\n\n  function findProperty(objectExpression, key, fallback) {\n    var _value;\n\n    let value = null;\n\n    for (const p of objectExpression.properties) {\n      if (!isObjectProperty(p) && !isObjectMethod(p)) {\n        continue;\n      }\n\n      if (\n        (isIdentifier(p.key) && p.key.name === key) ||\n        (isStringLiteral(p.key) && p.key.value === key)\n      ) {\n        if (isObjectProperty(p)) {\n          value = p.value;\n          break;\n        } else if (isObjectMethod(p)) {\n          value = t.toExpression(p);\n          break;\n        }\n      }\n    }\n\n    return (_value = value) !== null && _value !== void 0 ? _value : fallback();\n  }\n\n  function hasStaticProperties(objectExpression) {\n    return objectExpression.properties.every((p) => {\n      if (p.computed || isSpreadElement(p)) {\n        return false;\n      }\n\n      if (isObjectMethod(p) && p.kind !== \"method\") {\n        return false;\n      }\n\n      return isIdentifier(p.key) || isStringLiteral(p.key);\n    });\n  }\n\n  return {\n    visitor: {\n      Identifier(path, state) {\n        if (!state.opts.dev && isDev(path.node, path.parent, path.scope)) {\n          path.replaceWith(t.booleanLiteral(state.opts.dev));\n        }\n      },\n\n      MemberExpression(path, state) {\n        const node = path.node;\n        const scope = path.scope;\n        const opts = state.opts;\n\n        if (!isLeftHandSideOfAssignmentExpression(node, path.parent)) {\n          if (\n            opts.inlinePlatform &&\n            isPlatformNode(node, scope, !!opts.isWrapped)\n          ) {\n            path.replaceWith(t.stringLiteral(opts.platform));\n          } else if (!opts.dev && isProcessEnvNodeEnv(node, scope)) {\n            path.replaceWith(\n              t.stringLiteral(opts.dev ? \"development\" : \"production\")\n            );\n          }\n        }\n      },\n\n      CallExpression(path, state) {\n        const node = path.node;\n        const scope = path.scope;\n        const arg = node.arguments[0];\n        const opts = state.opts;\n\n        if (\n          opts.inlinePlatform &&\n          isPlatformSelectNode(node, scope, !!opts.isWrapped) &&\n          isObjectExpression(arg)\n        ) {\n          if (hasStaticProperties(arg)) {\n            const fallback = () =>\n              findProperty(arg, \"native\", () =>\n                findProperty(arg, \"default\", () => t.identifier(\"undefined\"))\n              );\n\n            path.replaceWith(findProperty(arg, opts.platform, fallback));\n          }\n        }\n      },\n    },\n  };\n}\n\nmodule.exports = inlinePlugin;\n"],"mappings":"AASA;;;;;;;;AAIA,IAAMA,0BAA0B,GAAGC,OAAO,sCAA1C;;AAEA,IAAMC,GAAG,GAAG;EACVC,IAAI,EAAE;AADI,CAAZ;AAGA,IAAMC,OAAO,GAAG;EACdD,IAAI,EAAE;AADQ,CAAhB;AAGA,IAAME,SAAS,GAAG;EAChBF,IAAI,EAAE;AADU,CAAlB;AAGA,IAAMG,GAAG,GAAG;EACVH,IAAI,EAAE;AADI,CAAZ;;AAIA,SAASI,YAAT,OAAoCC,OAApC,EAA6C;EAAA,IAAdC,CAAc,QAArBC,KAAqB;EAC3C,IACEC,sBADF,GASIF,CATJ,CACEE,sBADF;EAAA,IAEEC,YAFF,GASIH,CATJ,CAEEG,YAFF;EAAA,IAGEC,kBAHF,GASIJ,CATJ,CAGEI,kBAHF;EAAA,IAIEC,kBAJF,GASIL,CATJ,CAIEK,kBAJF;EAAA,IAKEC,cALF,GASIN,CATJ,CAKEM,cALF;EAAA,IAMEC,gBANF,GASIP,CATJ,CAMEO,gBANF;EAAA,IAOEC,eAPF,GASIR,CATJ,CAOEQ,eAPF;EAAA,IAQEC,eARF,GASIT,CATJ,CAQES,eARF;;EAUA,4BAAiDlB,0BAA0B,CACzES,CADyE,EAEzED,OAAO,CAACW,WAAR,IAAuB,SAFkD,CAA3E;EAAA,IAAQC,cAAR,yBAAQA,cAAR;EAAA,IAAwBC,oBAAxB,yBAAwBA,oBAAxB;;EAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD;IAAA,OAAa,CAACA,OAAd;EAAA,CAAjB;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD;IAAA,OAAad,CAAC,CAACgB,iBAAF,CAAoBF,OAAO,CAACG,IAA5B,CAAb;EAAA,CAAvB;;EAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACJ,OAAD;IAAA,OAC7BD,QAAQ,CAACC,OAAD,CAAR,IAAqBC,cAAc,CAACD,OAAD,CADN;EAAA,CAA/B;;EAGA,IAAMK,oCAAoC,GAAG,SAAvCA,oCAAuC,CAACC,IAAD,EAAOC,MAAP;IAAA,OAC3CnB,sBAAsB,CAACmB,MAAD,CAAtB,IAAkCA,MAAM,CAACC,IAAP,KAAgBF,IADP;EAAA,CAA7C;;EAGA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,IAAD,EAAOI,KAAP;IAAA,OAC1BrB,YAAY,CAACiB,IAAI,CAACK,QAAN,EAAgB9B,OAAhB,CAAZ,IACAS,kBAAkB,CAACgB,IAAI,CAACM,MAAN,CADlB,IAEAvB,YAAY,CAACiB,IAAI,CAACM,MAAL,CAAYD,QAAb,EAAuBhC,GAAvB,CAFZ,IAGAU,YAAY,CAACiB,IAAI,CAACM,MAAL,CAAYA,MAAb,EAAqB9B,SAArB,CAHZ,IAIAiB,QAAQ,CAACW,KAAK,CAACG,UAAN,CAAiB/B,SAAS,CAACF,IAA3B,CAAD,CALkB;EAAA,CAA5B;;EAOA,IAAMkC,KAAK,GAAG,SAARA,KAAQ,CAACR,IAAD,EAAOC,MAAP,EAAeG,KAAf;IAAA,OACZrB,YAAY,CAACiB,IAAD,EAAOvB,GAAP,CAAZ,IACAqB,sBAAsB,CAACM,KAAK,CAACG,UAAN,CAAiB9B,GAAG,CAACH,IAArB,CAAD,CADtB,IAEA,CAACU,kBAAkB,CAACiB,MAAD,CAFnB,KAGC,CAACd,gBAAgB,CAACc,MAAD,CAAjB,IAA6BA,MAAM,CAACQ,KAAP,KAAiBT,IAH/C,CADY;EAAA,CAAd;;EAMA,SAASU,YAAT,CAAsBC,gBAAtB,EAAwCC,GAAxC,EAA6CC,QAA7C,EAAuD;IACrD,IAAIC,MAAJ;;IAEA,IAAIL,KAAK,GAAG,IAAZ;;IAEA,qDAAgBE,gBAAgB,CAACI,UAAjC,wCAA6C;MAAA,IAAlCC,CAAkC;;MAC3C,IAAI,CAAC7B,gBAAgB,CAAC6B,CAAD,CAAjB,IAAwB,CAAC9B,cAAc,CAAC8B,CAAD,CAA3C,EAAgD;QAC9C;MACD;;MAED,IACGjC,YAAY,CAACiC,CAAC,CAACJ,GAAH,CAAZ,IAAuBI,CAAC,CAACJ,GAAF,CAAMtC,IAAN,KAAesC,GAAvC,IACCvB,eAAe,CAAC2B,CAAC,CAACJ,GAAH,CAAf,IAA0BI,CAAC,CAACJ,GAAF,CAAMH,KAAN,KAAgBG,GAF7C,EAGE;QACA,IAAIzB,gBAAgB,CAAC6B,CAAD,CAApB,EAAyB;UACvBP,KAAK,GAAGO,CAAC,CAACP,KAAV;UACA;QACD,CAHD,MAGO,IAAIvB,cAAc,CAAC8B,CAAD,CAAlB,EAAuB;UAC5BP,KAAK,GAAG7B,CAAC,CAACqC,YAAF,CAAeD,CAAf,CAAR;UACA;QACD;MACF;IACF;;IAED,OAAO,CAACF,MAAM,GAAGL,KAAV,MAAqB,IAArB,IAA6BK,MAAM,KAAK,KAAK,CAA7C,GAAiDA,MAAjD,GAA0DD,QAAQ,EAAzE;EACD;;EAED,SAASK,mBAAT,CAA6BP,gBAA7B,EAA+C;IAC7C,OAAOA,gBAAgB,CAACI,UAAjB,CAA4BI,KAA5B,CAAkC,UAACH,CAAD,EAAO;MAC9C,IAAIA,CAAC,CAACI,QAAF,IAAchC,eAAe,CAAC4B,CAAD,CAAjC,EAAsC;QACpC,OAAO,KAAP;MACD;;MAED,IAAI9B,cAAc,CAAC8B,CAAD,CAAd,IAAqBA,CAAC,CAACK,IAAF,KAAW,QAApC,EAA8C;QAC5C,OAAO,KAAP;MACD;;MAED,OAAOtC,YAAY,CAACiC,CAAC,CAACJ,GAAH,CAAZ,IAAuBvB,eAAe,CAAC2B,CAAC,CAACJ,GAAH,CAA7C;IACD,CAVM,CAAP;EAWD;;EAED,OAAO;IACLU,OAAO,EAAE;MACPC,UADO,sBACI1B,IADJ,EACU2B,KADV,EACiB;QACtB,IAAI,CAACA,KAAK,CAACC,IAAN,CAAWhD,GAAZ,IAAmB+B,KAAK,CAACX,IAAI,CAACG,IAAN,EAAYH,IAAI,CAACI,MAAjB,EAAyBJ,IAAI,CAACO,KAA9B,CAA5B,EAAkE;UAChEP,IAAI,CAAC6B,WAAL,CAAiB9C,CAAC,CAAC+C,cAAF,CAAiBH,KAAK,CAACC,IAAN,CAAWhD,GAA5B,CAAjB;QACD;MACF,CALM;MAOPmD,gBAPO,4BAOU/B,IAPV,EAOgB2B,KAPhB,EAOuB;QAC5B,IAAMxB,IAAI,GAAGH,IAAI,CAACG,IAAlB;QACA,IAAMI,KAAK,GAAGP,IAAI,CAACO,KAAnB;QACA,IAAMqB,IAAI,GAAGD,KAAK,CAACC,IAAnB;;QAEA,IAAI,CAAC1B,oCAAoC,CAACC,IAAD,EAAOH,IAAI,CAACI,MAAZ,CAAzC,EAA8D;UAC5D,IACEwB,IAAI,CAACI,cAAL,IACAtC,cAAc,CAACS,IAAD,EAAOI,KAAP,EAAc,CAAC,CAACqB,IAAI,CAACK,SAArB,CAFhB,EAGE;YACAjC,IAAI,CAAC6B,WAAL,CAAiB9C,CAAC,CAACmD,aAAF,CAAgBN,IAAI,CAACO,QAArB,CAAjB;UACD,CALD,MAKO,IAAI,CAACP,IAAI,CAAChD,GAAN,IAAa0B,mBAAmB,CAACH,IAAD,EAAOI,KAAP,CAApC,EAAmD;YACxDP,IAAI,CAAC6B,WAAL,CACE9C,CAAC,CAACmD,aAAF,CAAgBN,IAAI,CAAChD,GAAL,GAAW,aAAX,GAA2B,YAA3C,CADF;UAGD;QACF;MACF,CAxBM;MA0BPwD,cA1BO,0BA0BQpC,IA1BR,EA0Bc2B,KA1Bd,EA0BqB;QAC1B,IAAMxB,IAAI,GAAGH,IAAI,CAACG,IAAlB;QACA,IAAMI,KAAK,GAAGP,IAAI,CAACO,KAAnB;QACA,IAAM8B,GAAG,GAAGlC,IAAI,CAACmC,SAAL,CAAe,CAAf,CAAZ;QACA,IAAMV,IAAI,GAAGD,KAAK,CAACC,IAAnB;;QAEA,IACEA,IAAI,CAACI,cAAL,IACArC,oBAAoB,CAACQ,IAAD,EAAOI,KAAP,EAAc,CAAC,CAACqB,IAAI,CAACK,SAArB,CADpB,IAEA7C,kBAAkB,CAACiD,GAAD,CAHpB,EAIE;UACA,IAAIhB,mBAAmB,CAACgB,GAAD,CAAvB,EAA8B;YAC5B,IAAMrB,QAAQ,GAAG,SAAXA,QAAW;cAAA,OACfH,YAAY,CAACwB,GAAD,EAAM,QAAN,EAAgB;gBAAA,OAC1BxB,YAAY,CAACwB,GAAD,EAAM,SAAN,EAAiB;kBAAA,OAAMtD,CAAC,CAACwD,UAAF,CAAa,WAAb,CAAN;gBAAA,CAAjB,CADc;cAAA,CAAhB,CADG;YAAA,CAAjB;;YAKAvC,IAAI,CAAC6B,WAAL,CAAiBhB,YAAY,CAACwB,GAAD,EAAMT,IAAI,CAACO,QAAX,EAAqBnB,QAArB,CAA7B;UACD;QACF;MACF;IA9CM;EADJ,CAAP;AAkDD;;AAEDwB,MAAM,CAACC,OAAP,GAAiB5D,YAAjB"},"metadata":{},"sourceType":"script"}