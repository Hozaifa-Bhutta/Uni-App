{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _assetPathUtils = _interopRequireDefault(require(\"./assetPathUtils\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getAssetDestPathAndroid(asset, scale) {\n  var androidFolder = _assetPathUtils.default.getAndroidResourceFolderName(asset, scale);\n\n  var fileName = _assetPathUtils.default.getAndroidResourceIdentifier(asset);\n\n  return _path().default.join(androidFolder, fileName + \".\" + asset.type);\n}\n\nvar _default = getAssetDestPathAndroid;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/commands/bundle/getAssetDestPathAndroid.ts"],"names":["androidFolder","assetPathUtils","fileName","path","asset","getAssetDestPathAndroid"],"mappings":";;;;;;;AAQA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA;;;;;;;;AAEA,SAAA,uBAAA,CAAA,KAAA,EAAA,KAAA,EAA8E;EAC5E,IAAMA,aAAa,GAAGC,eAAAA,CAAAA,OAAAA,CAAAA,4BAAAA,CAAAA,KAAAA,EAAtB,KAAsBA,CAAtB;;EAIA,IAAMC,QAAQ,GAAGD,eAAAA,CAAAA,OAAAA,CAAAA,4BAAAA,CAAjB,KAAiBA,CAAjB;;EACA,OAAOE,KAAAA,GAAAA,OAAAA,CAAAA,IAAAA,CAAAA,aAAAA,EAA4BD,QAA5BC,SAAwCC,KAAK,CAApD,IAAOD,CAAP;AACD;;eAEcE,uB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport path from 'path';\nimport assetPathUtils, {PackagerAsset} from './assetPathUtils';\n\nfunction getAssetDestPathAndroid(asset: PackagerAsset, scale: number): string {\n  const androidFolder = assetPathUtils.getAndroidResourceFolderName(\n    asset,\n    scale,\n  );\n  const fileName = assetPathUtils.getAndroidResourceIdentifier(asset);\n  return path.join(androidFolder, `${fileName}.${asset.type}`);\n}\n\nexport default getAssetDestPathAndroid;\n"]},"metadata":{},"sourceType":"script"}