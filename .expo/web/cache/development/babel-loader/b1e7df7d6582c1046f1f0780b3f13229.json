{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HermesParserDecodeUTF8String;\n\nfunction HermesParserDecodeUTF8String(ptrIn, length, heap) {\n  var ptr = ptrIn;\n  var endPtr = ptr + length;\n  var str = '';\n\n  while (ptr < endPtr) {\n    var u0 = heap[ptr++];\n\n    if (!(u0 & 0x80)) {\n      str += String.fromCharCode(u0);\n      continue;\n    }\n\n    var u1 = heap[ptr++] & 0x3f;\n\n    if ((u0 & 0xe0) === 0xc0) {\n      str += String.fromCharCode((u0 & 0x1f) << 6 | u1);\n      continue;\n    }\n\n    var u2 = heap[ptr++] & 0x3f;\n\n    if ((u0 & 0xf0) === 0xe0) {\n      u0 = (u0 & 0x0f) << 12 | u1 << 6 | u2;\n    } else {\n      u0 = (u0 & 0x07) << 18 | u1 << 12 | u2 << 6 | heap[ptr++] & 0x3f;\n    }\n\n    if (u0 < 0x10000) {\n      str += String.fromCharCode(u0);\n    } else {\n      u0 -= 0x10000;\n      str += String.fromCharCode(0xd800 | u0 >> 10, 0xdc00 | u0 & 0x3ff);\n    }\n  }\n\n  return str;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","HermesParserDecodeUTF8String","ptrIn","length","heap","ptr","endPtr","str","u0","String","fromCharCode","u1","u2"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/hermes-parser/dist/HermesParserDecodeUTF8String.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n/**\n * Decode a UTF-8 encoded string from Hermes with a known length.\n * Based on Emscripten's UTF8ToString with the following differences:\n * - Always reads all bytes up to the given length, including null bytes. This\n *   means that we can decode strings that contain null bytes in the middle.\n * - Allow UTF-8 encoded code points that are part of a surrogate pair, even though\n *   this is technically invalid UTF-8 that UTF8ToString would convert to 0xfffd.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HermesParserDecodeUTF8String;\n\nfunction HermesParserDecodeUTF8String(ptrIn, length, heap) {\n  let ptr = ptrIn;\n  const endPtr = ptr + length;\n  let str = '';\n\n  while (ptr < endPtr) {\n    // ASCII characters fit in single byte code point\n    let u0 = heap[ptr++];\n\n    if (!(u0 & 0x80)) {\n      str += String.fromCharCode(u0);\n      continue;\n    } // Two byte code point\n\n\n    const u1 = heap[ptr++] & 0x3f;\n\n    if ((u0 & 0xe0) === 0xc0) {\n      str += String.fromCharCode((u0 & 0x1f) << 6 | u1);\n      continue;\n    }\n\n    const u2 = heap[ptr++] & 0x3f;\n\n    if ((u0 & 0xf0) === 0xe0) {\n      // Three byte code point\n      u0 = (u0 & 0x0f) << 12 | u1 << 6 | u2;\n    } else {\n      // Four byte code point\n      u0 = (u0 & 0x07) << 18 | u1 << 12 | u2 << 6 | heap[ptr++] & 0x3f;\n    }\n\n    if (u0 < 0x10000) {\n      // Code point fits into a single UTF-16 code unit\n      str += String.fromCharCode(u0);\n    } else {\n      // Code point does not fit into single UTF-16 code unit so convert to surrogate pair\n      u0 -= 0x10000;\n      str += String.fromCharCode(0xd800 | u0 >> 10, 0xdc00 | u0 & 0x3ff);\n    }\n  }\n\n  return str;\n}"],"mappings":"AASA;;AAUAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,4BAAlB;;AAEA,SAASA,4BAAT,CAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2D;EACzD,IAAIC,GAAG,GAAGH,KAAV;EACA,IAAMI,MAAM,GAAGD,GAAG,GAAGF,MAArB;EACA,IAAII,GAAG,GAAG,EAAV;;EAEA,OAAOF,GAAG,GAAGC,MAAb,EAAqB;IAEnB,IAAIE,EAAE,GAAGJ,IAAI,CAACC,GAAG,EAAJ,CAAb;;IAEA,IAAI,EAAEG,EAAE,GAAG,IAAP,CAAJ,EAAkB;MAChBD,GAAG,IAAIE,MAAM,CAACC,YAAP,CAAoBF,EAApB,CAAP;MACA;IACD;;IAGD,IAAMG,EAAE,GAAGP,IAAI,CAACC,GAAG,EAAJ,CAAJ,GAAc,IAAzB;;IAEA,IAAI,CAACG,EAAE,GAAG,IAAN,MAAgB,IAApB,EAA0B;MACxBD,GAAG,IAAIE,MAAM,CAACC,YAAP,CAAoB,CAACF,EAAE,GAAG,IAAN,KAAe,CAAf,GAAmBG,EAAvC,CAAP;MACA;IACD;;IAED,IAAMC,EAAE,GAAGR,IAAI,CAACC,GAAG,EAAJ,CAAJ,GAAc,IAAzB;;IAEA,IAAI,CAACG,EAAE,GAAG,IAAN,MAAgB,IAApB,EAA0B;MAExBA,EAAE,GAAG,CAACA,EAAE,GAAG,IAAN,KAAe,EAAf,GAAoBG,EAAE,IAAI,CAA1B,GAA8BC,EAAnC;IACD,CAHD,MAGO;MAELJ,EAAE,GAAG,CAACA,EAAE,GAAG,IAAN,KAAe,EAAf,GAAoBG,EAAE,IAAI,EAA1B,GAA+BC,EAAE,IAAI,CAArC,GAAyCR,IAAI,CAACC,GAAG,EAAJ,CAAJ,GAAc,IAA5D;IACD;;IAED,IAAIG,EAAE,GAAG,OAAT,EAAkB;MAEhBD,GAAG,IAAIE,MAAM,CAACC,YAAP,CAAoBF,EAApB,CAAP;IACD,CAHD,MAGO;MAELA,EAAE,IAAI,OAAN;MACAD,GAAG,IAAIE,MAAM,CAACC,YAAP,CAAoB,SAASF,EAAE,IAAI,EAAnC,EAAuC,SAASA,EAAE,GAAG,KAArD,CAAP;IACD;EACF;;EAED,OAAOD,GAAP;AACD"},"metadata":{},"sourceType":"script"}