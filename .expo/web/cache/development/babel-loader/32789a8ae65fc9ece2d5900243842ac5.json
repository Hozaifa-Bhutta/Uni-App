{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPackageClassName;\nexports.matchClassName = matchClassName;\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _glob() {\n  var data = _interopRequireDefault(require(\"glob\"));\n\n  _glob = function _glob() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getPackageClassName(folder) {\n  var files = _glob().default.sync('**/+(*.java|*.kt)', {\n    cwd: folder\n  });\n\n  var packages = files.map(function (filePath) {\n    return _fs().default.readFileSync(_path().default.join(folder, filePath), 'utf8');\n  }).map(matchClassName).filter(function (match) {\n    return match;\n  });\n  return packages.length ? packages[0][1] : null;\n}\n\nfunction matchClassName(file) {\n  var nativeModuleMatch = file.match(/class\\s+(\\w+[^(\\s]*)[\\s\\w():]*(\\s+implements\\s+|:)[\\s\\w():,]*[^{]*ReactPackage/);\n\n  if (nativeModuleMatch) {\n    return nativeModuleMatch;\n  } else {\n    return file.match(/class\\s+(\\w+[^(\\s]*)[\\s\\w():]*(\\s+extends\\s+|:)[\\s\\w():,]*[^{]*TurboReactPackage/);\n  }\n}","map":{"version":3,"sources":["../../src/config/findPackageClassName.ts"],"names":["files","cwd","folder","packages","filePath","fs","path","match","nativeModuleMatch","file"],"mappings":";;;;;;;;AAQA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;;;;;;;AAEe,SAAA,mBAAA,CAAA,MAAA,EAA6C;EAC1D,IAAMA,KAAK,GAAG,KAAA,GAAA,OAAA,CAAA,IAAA,CAAA,mBAAA,EAA+B;IAACC,GAAG,EAAEC;EAAN,CAA/B,CAAd;;EAEA,IAAMC,QAAQ,GAAGH,KAAK,CAALA,GAAAA,CACTI,UAAAA,QAAD;IAAA,OAAcC,GAAAA,GAAAA,OAAAA,CAAAA,YAAAA,CAAgBC,KAAAA,GAAAA,OAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAhBD,QAAgBC,CAAhBD,EADJL,MACIK,CAAd;EAAA,CADUL,EAAAA,GAAAA,CAAAA,cAAAA,EAAAA,MAAAA,CAGNO,UAAAA,KAAD;IAAA,OANgD,KAMhD;EAAA,CAHOP,CAAjB;EAMA,OAAOG,QAAQ,CAARA,MAAAA,GAAkBA,QAAQ,CAARA,CAAQ,CAARA,CAAlBA,CAAkBA,CAAlBA,GAAP,IAAA;AACD;;AAEM,SAAA,cAAA,CAAA,IAAA,EAAsC;EAC3C,IAAMK,iBAAiB,GAAGC,IAAI,CAAJA,KAAAA,CADiB,gFACjBA,CAA1B;;EAKA,IAAA,iBAAA,EAAuB;IACrB,OAAA,iBAAA;EADF,CAAA,MAEO;IACL,OAAOA,IAAI,CAAJA,KAAAA,CAAP,kFAAOA,CAAP;EAGD;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport fs from 'fs';\nimport glob from 'glob';\nimport path from 'path';\n\nexport default function getPackageClassName(folder: string) {\n  const files = glob.sync('**/+(*.java|*.kt)', {cwd: folder});\n\n  const packages = files\n    .map((filePath) => fs.readFileSync(path.join(folder, filePath), 'utf8'))\n    .map(matchClassName)\n    .filter((match) => match);\n\n  // @ts-ignore\n  return packages.length ? packages[0][1] : null;\n}\n\nexport function matchClassName(file: string) {\n  const nativeModuleMatch = file.match(\n    /class\\s+(\\w+[^(\\s]*)[\\s\\w():]*(\\s+implements\\s+|:)[\\s\\w():,]*[^{]*ReactPackage/,\n  );\n  // We first check for implementation of ReactPackage to find native\n  // modules and then for subclasses of TurboReactPackage to find turbo modules.\n  if (nativeModuleMatch) {\n    return nativeModuleMatch;\n  } else {\n    return file.match(\n      /class\\s+(\\w+[^(\\s]*)[\\s\\w():]*(\\s+extends\\s+|:)[\\s\\w():,]*[^{]*TurboReactPackage/,\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}