{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar parsePlatformFilePath = require(\"../node-haste/lib/parsePlatformFilePath\");\n\nvar parseCustomTransformOptions = require(\"./parseCustomTransformOptions\");\n\nvar nullthrows = require(\"nullthrows\");\n\nvar path = require(\"path\");\n\nvar url = require(\"url\");\n\nvar getBoolean = function getBoolean(query, opt, defaultValue) {\n  return query[opt] == null ? defaultValue : query[opt] === \"true\" || query[opt] === \"1\";\n};\n\nvar getNumber = function getNumber(query, opt, defaultValue) {\n  var number = parseInt(query[opt], 10);\n  return Number.isNaN(number) ? defaultValue : number;\n};\n\nvar getBundleType = function getBundleType(bundleType) {\n  return bundleType === \"map\" ? bundleType : \"bundle\";\n};\n\nvar getTransformProfile = function getTransformProfile(transformProfile) {\n  return transformProfile === \"hermes-stable\" || transformProfile === \"hermes-canary\" ? transformProfile : \"default\";\n};\n\nmodule.exports = function parseOptionsFromUrl(requestUrl, platforms, bytecodeVersion) {\n  var parsedURL = nullthrows(url.parse(requestUrl, true));\n  var query = nullthrows(parsedURL.query);\n  var pathname = query.bundleEntry || (parsedURL.pathname != null ? decodeURIComponent(parsedURL.pathname) : \"\");\n  var platform = query.platform || parsePlatformFilePath(pathname, platforms).platform;\n  var bundleType = getBundleType(path.extname(pathname).substr(1));\n  var runtimeBytecodeVersion = getNumber(query, \"runtimeBytecodeVersion\", null);\n  return {\n    bundleType: bundleType,\n    runtimeBytecodeVersion: bytecodeVersion === runtimeBytecodeVersion ? bytecodeVersion : null,\n    customTransformOptions: parseCustomTransformOptions(parsedURL),\n    dev: getBoolean(query, \"dev\", true),\n    entryFile: pathname.replace(/^(?:\\.?\\/)?/, \"./\").replace(/\\.[^/.]+$/, \"\"),\n    excludeSource: getBoolean(query, \"excludeSource\", false),\n    hot: true,\n    inlineSourceMap: getBoolean(query, \"inlineSourceMap\", false),\n    minify: getBoolean(query, \"minify\", false),\n    modulesOnly: getBoolean(query, \"modulesOnly\", false),\n    onProgress: null,\n    platform: platform,\n    runModule: getBoolean(query, \"runModule\", true),\n    shallow: getBoolean(query, \"shallow\", false),\n    sourceMapUrl: url.format(_objectSpread(_objectSpread({}, parsedURL), {}, {\n      protocol: platform != null && platform.match(/^(android|ios)$/) ? \"http\" : \"\",\n      pathname: pathname.replace(/\\.(bundle|delta)$/, \".map\")\n    })),\n    sourceUrl: requestUrl,\n    unstable_transformProfile: getTransformProfile(query.unstable_transformProfile)\n  };\n};","map":{"version":3,"names":["parsePlatformFilePath","require","parseCustomTransformOptions","nullthrows","path","url","getBoolean","query","opt","defaultValue","getNumber","number","parseInt","Number","isNaN","getBundleType","bundleType","getTransformProfile","transformProfile","module","exports","parseOptionsFromUrl","requestUrl","platforms","bytecodeVersion","parsedURL","parse","pathname","bundleEntry","decodeURIComponent","platform","extname","substr","runtimeBytecodeVersion","customTransformOptions","dev","entryFile","replace","excludeSource","hot","inlineSourceMap","minify","modulesOnly","onProgress","runModule","shallow","sourceMapUrl","format","protocol","match","sourceUrl","unstable_transformProfile"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/parseOptionsFromUrl.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst parsePlatformFilePath = require(\"../node-haste/lib/parsePlatformFilePath\");\n\nconst parseCustomTransformOptions = require(\"./parseCustomTransformOptions\");\n\nconst nullthrows = require(\"nullthrows\");\n\nconst path = require(\"path\");\n\nconst url = require(\"url\");\n\nconst getBoolean = (query, opt, defaultValue) =>\n  query[opt] == null\n    ? defaultValue\n    : query[opt] === \"true\" || query[opt] === \"1\";\n\nconst getNumber = (query, opt, defaultValue) => {\n  const number = parseInt(query[opt], 10);\n  return Number.isNaN(number) ? defaultValue : number;\n};\n\nconst getBundleType = (bundleType) =>\n  bundleType === \"map\" ? bundleType : \"bundle\";\n\nconst getTransformProfile = (transformProfile) =>\n  transformProfile === \"hermes-stable\" || transformProfile === \"hermes-canary\"\n    ? transformProfile\n    : \"default\";\n\nmodule.exports = function parseOptionsFromUrl(\n  requestUrl,\n  platforms,\n  bytecodeVersion\n) {\n  const parsedURL = nullthrows(url.parse(requestUrl, true)); // `true` to parse the query param as an object.\n\n  const query = nullthrows(parsedURL.query);\n  const pathname =\n    query.bundleEntry ||\n    (parsedURL.pathname != null ? decodeURIComponent(parsedURL.pathname) : \"\");\n  const platform =\n    query.platform || parsePlatformFilePath(pathname, platforms).platform;\n  const bundleType = getBundleType(path.extname(pathname).substr(1));\n  const runtimeBytecodeVersion = getNumber(\n    query,\n    \"runtimeBytecodeVersion\",\n    null\n  );\n  return {\n    bundleType,\n    runtimeBytecodeVersion:\n      bytecodeVersion === runtimeBytecodeVersion ? bytecodeVersion : null,\n    customTransformOptions: parseCustomTransformOptions(parsedURL),\n    dev: getBoolean(query, \"dev\", true),\n    entryFile: pathname.replace(/^(?:\\.?\\/)?/, \"./\").replace(/\\.[^/.]+$/, \"\"),\n    excludeSource: getBoolean(query, \"excludeSource\", false),\n    hot: true,\n    inlineSourceMap: getBoolean(query, \"inlineSourceMap\", false),\n    minify: getBoolean(query, \"minify\", false),\n    modulesOnly: getBoolean(query, \"modulesOnly\", false),\n    onProgress: null,\n    platform,\n    runModule: getBoolean(query, \"runModule\", true),\n    shallow: getBoolean(query, \"shallow\", false),\n    sourceMapUrl: url.format({\n      ...parsedURL,\n      // The Chrome Debugger loads bundles via Blob urls, whose\n      // protocol is blob:http. This breaks loading source maps through\n      // protocol-relative URLs, which is why we must force the HTTP protocol\n      // when loading the bundle for either Android or iOS.\n      protocol:\n        platform != null && platform.match(/^(android|ios)$/) ? \"http\" : \"\",\n      pathname: pathname.replace(/\\.(bundle|delta)$/, \".map\"),\n    }),\n    sourceUrl: requestUrl,\n    unstable_transformProfile: getTransformProfile(\n      query.unstable_transformProfile\n    ),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}