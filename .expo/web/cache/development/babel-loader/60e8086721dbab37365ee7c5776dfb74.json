{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _envinfo = _interopRequireDefault(require(\"../tools/envinfo\"));\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar info = function getInfo(_argv, ctx) {\n  var output;\n  return _regeneratorRuntime.async(function getInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          _cliTools().logger.info('Fetching system and libraries information...');\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap((0, _envinfo.default)(false));\n\n        case 4:\n          output = _context.sent;\n\n          _cliTools().logger.log(output);\n\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n\n          _cliTools().logger.error(\"Unable to print environment info.\\n\" + _context.t0);\n\n        case 11:\n          _context.prev = 11;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap((0, _cliTools().releaseChecker)(ctx.root));\n\n        case 14:\n          return _context.finish(11);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8, 11, 15]], Promise);\n};\n\nvar _default = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  func: info\n};\nexports.default = _default;","map":{"version":3,"sources":["../../src/commands/info.ts"],"names":["info","logger","output","ctx","name","description","func"],"mappings":";;;;;;;;;AAQA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA;;AACA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;;;;;;;AAGA,IAAMA,IAAI,GAAG,SAAA,OAAA,CAAA,KAAA,EAAA,GAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;;UAETC,SAAAA,GAAAA,MAAAA,CAAAA,IAAAA,CAAAA,8CAAAA;;UAFS;UAAA,iCAGY,CAAA,GAAA,QAAA,CAAA,OAAA,EAArB,KAAqB,CAHZ;;QAAA;UAGHC,MAHG;;UAITD,SAAAA,GAAAA,MAAAA,CAAAA,GAAAA,CAAAA,MAAAA;;UAJS;UAAA;;QAAA;UAAA;UAAA;;UAMTA,SAAAA,GAAAA,MAAAA,CAAAA,KAAAA;;QANS;UAAA;UAAA;UAAA,iCAQH,CAAA,GAAA,SAAA,GAAA,cAAA,EAAeE,GAAG,CAAxB,IAAM,CARG;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAb;;eAYe;EACbC,IAAI,EADS,MAAA;EAEbC,WAAW,EAFE,6DAAA;EAGbC,IAAI,EAAEN;AAHO,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// @ts-ignore untyped\nimport getEnvironmentInfo from '../tools/envinfo';\nimport {logger, releaseChecker} from '@react-native-community/cli-tools';\nimport {Config} from '@react-native-community/cli-types';\n\nconst info = async function getInfo(_argv: Array<string>, ctx: Config) {\n  try {\n    logger.info('Fetching system and libraries information...');\n    const output = await getEnvironmentInfo(false);\n    logger.log(output);\n  } catch (err) {\n    logger.error(`Unable to print environment info.\\n${err}`);\n  } finally {\n    await releaseChecker(ctx.root);\n  }\n};\n\nexport default {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  func: info,\n};\n"]},"metadata":{},"sourceType":"script"}