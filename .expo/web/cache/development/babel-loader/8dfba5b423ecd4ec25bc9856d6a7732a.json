{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Task(props) {\n  var isCompleted = false;\n  var width = Dimensions.get('window').width;\n  var height = Dimensions.get('window').height;\n\n  var _onPress = function onPress() {\n    console.log(isCompleted);\n    isCompleted = true;\n  };\n\n  if (!isCompleted) {\n    return _jsxs(View, {\n      style: {\n        width: \"70%\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 0.03 * height\n        },\n        children: props.title\n      }), _jsxs(Text, {\n        style: {\n          alignSelf: \"center\",\n          fontSize: 0.02 * height\n        },\n        children: [\"Description: \", props.description]\n      }), _jsx(Button, {\n        title: \"Complete\",\n        onPress: function onPress() {\n          return _onPress();\n        }\n      })]\n    });\n  } else {\n    isCompleted = false;\n    return _jsx(View, {});\n  }\n}","map":{"version":3,"names":["useState","useEffect","Task","props","isCompleted","width","Dimensions","get","height","onPress","console","log","fontSize","title","alignSelf","description"],"sources":["/Users/hozaifa/Documents/Uni App Github/Task.js"],"sourcesContent":["import { Dimensions, View, Text, Button } from 'react-native';\nimport { useState, useEffect } from 'react';\n\n\nexport default function Task(props) {\n    var isCompleted = false\n    const width = Dimensions.get('window').width\n    const height = Dimensions.get('window').height\n    const onPress = () => {\n        console.log(isCompleted)\n        isCompleted = true\n    }\n\n\n    if (!isCompleted) {\n        return <View style = {{width: \"70%\"}}>\n            <Text style = {{fontSize: 0.03 * height}}>\n                {props.title}\n            </Text>\n            <Text style = {{alignSelf: \"center\",fontSize: 0.02 * height }}>\n                Description: {props.description}\n            </Text>\n            <Button title = \"Complete\" onPress= {() => onPress()}></Button>\n        </View>\n    } \n    else {\n        isCompleted = false\n        return <View></View>\n    }\n}\n"],"mappings":";;;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAChC,IAAIC,WAAW,GAAG,KAAlB;EACA,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAvC;EACA,IAAMG,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAxC;;EACA,IAAMC,QAAO,GAAG,SAAVA,OAAU,GAAM;IAClBC,OAAO,CAACC,GAAR,CAAYP,WAAZ;IACAA,WAAW,GAAG,IAAd;EACH,CAHD;;EAMA,IAAI,CAACA,WAAL,EAAkB;IACd,OAAO,MAAC,IAAD;MAAM,KAAK,EAAI;QAACC,KAAK,EAAE;MAAR,CAAf;MAAA,WACH,KAAC,IAAD;QAAM,KAAK,EAAI;UAACO,QAAQ,EAAE,OAAOJ;QAAlB,CAAf;QAAA,UACKL,KAAK,CAACU;MADX,EADG,EAIH,MAAC,IAAD;QAAM,KAAK,EAAI;UAACC,SAAS,EAAE,QAAZ;UAAqBF,QAAQ,EAAE,OAAOJ;QAAtC,CAAf;QAAA,4BACkBL,KAAK,CAACY,WADxB;MAAA,EAJG,EAOH,KAAC,MAAD;QAAQ,KAAK,EAAG,UAAhB;QAA2B,OAAO,EAAG;UAAA,OAAMN,QAAO,EAAb;QAAA;MAArC,EAPG;IAAA,EAAP;EASH,CAVD,MAWK;IACDL,WAAW,GAAG,KAAd;IACA,OAAO,KAAC,IAAD,KAAP;EACH;AACJ"},"metadata":{},"sourceType":"module"}