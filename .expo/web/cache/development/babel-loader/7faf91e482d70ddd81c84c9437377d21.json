{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar relativizeSourceMapInline = require(\"../../lib/relativizeSourceMap\");\n\nvar Server = require(\"../../Server\");\n\nvar writeFile = require(\"./writeFile\");\n\nfunction buildBundle(packagerClient, requestOptions) {\n  return packagerClient.build(_objectSpread(_objectSpread(_objectSpread({}, Server.DEFAULT_BUNDLE_OPTIONS), requestOptions), {}, {\n    bundleType: \"bundle\"\n  }));\n}\n\nfunction relativateSerializedMap(map, sourceMapSourcesRoot) {\n  var sourceMap = JSON.parse(map);\n  relativizeSourceMapInline(sourceMap, sourceMapSourcesRoot);\n  return JSON.stringify(sourceMap);\n}\n\nfunction saveBundleAndMap(bundle, options, log) {\n  var bundleOutput, encoding, sourcemapOutput, sourcemapSourcesRoot, writeFns, map;\n  return _regeneratorRuntime.async(function saveBundleAndMap$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          bundleOutput = options.bundleOutput, encoding = options.bundleEncoding, sourcemapOutput = options.sourcemapOutput, sourcemapSourcesRoot = options.sourcemapSourcesRoot;\n          writeFns = [];\n          writeFns.push(function _callee() {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    log(\"Writing bundle output to:\", bundleOutput);\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(writeFile(bundleOutput, bundle.code, encoding));\n\n                  case 3:\n                    log(\"Done writing bundle output\");\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n\n          if (sourcemapOutput) {\n            map = bundle.map;\n\n            if (sourcemapSourcesRoot !== undefined) {\n              log(\"start relativating source map\");\n              map = relativateSerializedMap(map, sourcemapSourcesRoot);\n              log(\"finished relativating\");\n            }\n\n            writeFns.push(function _callee2() {\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      log(\"Writing sourcemap output to:\", sourcemapOutput);\n                      _context2.next = 3;\n                      return _regeneratorRuntime.awrap(writeFile(sourcemapOutput, map, null));\n\n                    case 3:\n                      log(\"Done writing sourcemap output\");\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n          }\n\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(Promise.all(writeFns.map(function (cb) {\n            return cb();\n          })));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.build = buildBundle;\nexports.save = saveBundleAndMap;\nexports.formatName = \"bundle\";","map":{"version":3,"names":["relativizeSourceMapInline","require","Server","writeFile","buildBundle","packagerClient","requestOptions","build","DEFAULT_BUNDLE_OPTIONS","bundleType","relativateSerializedMap","map","sourceMapSourcesRoot","sourceMap","JSON","parse","stringify","saveBundleAndMap","bundle","options","log","bundleOutput","encoding","bundleEncoding","sourcemapOutput","sourcemapSourcesRoot","writeFns","push","code","undefined","Promise","all","cb","exports","save","formatName"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/shared/output/bundle.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst relativizeSourceMapInline = require(\"../../lib/relativizeSourceMap\");\n\nconst Server = require(\"../../Server\");\n\nconst writeFile = require(\"./writeFile\");\n\nfunction buildBundle(packagerClient, requestOptions) {\n  return packagerClient.build({\n    ...Server.DEFAULT_BUNDLE_OPTIONS,\n    ...requestOptions,\n    bundleType: \"bundle\",\n  });\n}\n\nfunction relativateSerializedMap(map, sourceMapSourcesRoot) {\n  const sourceMap = JSON.parse(map);\n  relativizeSourceMapInline(sourceMap, sourceMapSourcesRoot);\n  return JSON.stringify(sourceMap);\n}\n\nasync function saveBundleAndMap(bundle, options, log) {\n  const {\n    bundleOutput,\n    bundleEncoding: encoding,\n    sourcemapOutput,\n    sourcemapSourcesRoot,\n  } = options;\n  const writeFns = [];\n  writeFns.push(async () => {\n    log(\"Writing bundle output to:\", bundleOutput);\n    await writeFile(bundleOutput, bundle.code, encoding);\n    log(\"Done writing bundle output\");\n  });\n\n  if (sourcemapOutput) {\n    let { map } = bundle;\n\n    if (sourcemapSourcesRoot !== undefined) {\n      log(\"start relativating source map\");\n      map = relativateSerializedMap(map, sourcemapSourcesRoot);\n      log(\"finished relativating\");\n    }\n\n    writeFns.push(async () => {\n      log(\"Writing sourcemap output to:\", sourcemapOutput);\n      await writeFile(sourcemapOutput, map, null);\n      log(\"Done writing sourcemap output\");\n    });\n  } // Wait until everything is written to disk.\n\n  await Promise.all(writeFns.map((cb) => cb()));\n}\n\nexports.build = buildBundle;\nexports.save = saveBundleAndMap;\nexports.formatName = \"bundle\";\n"],"mappings":"AASA;;;;;;;;;;AAEA,IAAMA,yBAAyB,GAAGC,OAAO,iCAAzC;;AAEA,IAAMC,MAAM,GAAGD,OAAO,gBAAtB;;AAEA,IAAME,SAAS,GAAGF,OAAO,eAAzB;;AAEA,SAASG,WAAT,CAAqBC,cAArB,EAAqCC,cAArC,EAAqD;EACnD,OAAOD,cAAc,CAACE,KAAf,+CACFL,MAAM,CAACM,sBADL,GAEFF,cAFE;IAGLG,UAAU,EAAE;EAHP,GAAP;AAKD;;AAED,SAASC,uBAAT,CAAiCC,GAAjC,EAAsCC,oBAAtC,EAA4D;EAC1D,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAlB;EACAX,yBAAyB,CAACa,SAAD,EAAYD,oBAAZ,CAAzB;EACA,OAAOE,IAAI,CAACE,SAAL,CAAeH,SAAf,CAAP;AACD;;AAED,SAAeI,gBAAf,CAAgCC,MAAhC,EAAwCC,OAAxC,EAAiDC,GAAjD;EAAA;EAAA;IAAA;MAAA;QAAA;UAEIC,YAFJ,GAMMF,OANN,CAEIE,YAFJ,EAGoBC,QAHpB,GAMMH,OANN,CAGII,cAHJ,EAIIC,eAJJ,GAMML,OANN,CAIIK,eAJJ,EAKIC,oBALJ,GAMMN,OANN,CAKIM,oBALJ;UAOQC,QAPR,GAOmB,EAPnB;UAQEA,QAAQ,CAACC,IAAT,CAAc;YAAA;cAAA;gBAAA;kBAAA;oBACZP,GAAG,CAAC,2BAAD,EAA8BC,YAA9B,CAAH;oBADY;oBAAA,iCAENlB,SAAS,CAACkB,YAAD,EAAeH,MAAM,CAACU,IAAtB,EAA4BN,QAA5B,CAFH;;kBAAA;oBAGZF,GAAG,CAAC,4BAAD,CAAH;;kBAHY;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CAAd;;UAMA,IAAII,eAAJ,EAAqB;YACbb,GADa,GACLO,MADK,CACbP,GADa;;YAGnB,IAAIc,oBAAoB,KAAKI,SAA7B,EAAwC;cACtCT,GAAG,CAAC,+BAAD,CAAH;cACAT,GAAG,GAAGD,uBAAuB,CAACC,GAAD,EAAMc,oBAAN,CAA7B;cACAL,GAAG,CAAC,uBAAD,CAAH;YACD;;YAEDM,QAAQ,CAACC,IAAT,CAAc;cAAA;gBAAA;kBAAA;oBAAA;sBACZP,GAAG,CAAC,8BAAD,EAAiCI,eAAjC,CAAH;sBADY;sBAAA,iCAENrB,SAAS,CAACqB,eAAD,EAAkBb,GAAlB,EAAuB,IAAvB,CAFH;;oBAAA;sBAGZS,GAAG,CAAC,+BAAD,CAAH;;oBAHY;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CAAd;UAKD;;UA5BH;UAAA,iCA8BQU,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACf,GAAT,CAAa,UAACqB,EAAD;YAAA,OAAQA,EAAE,EAAV;UAAA,CAAb,CAAZ,CA9BR;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAiCAC,OAAO,CAAC1B,KAAR,GAAgBH,WAAhB;AACA6B,OAAO,CAACC,IAAR,GAAejB,gBAAf;AACAgB,OAAO,CAACE,UAAR,GAAqB,QAArB"},"metadata":{},"sourceType":"script"}