{"ast":null,"code":"var fs = require('graceful-fs');\n\nvar BUF_LENGTH = 64 * 1024;\n\nvar _buff = new Buffer(BUF_LENGTH);\n\nfunction copyFileSync(srcFile, destFile, options) {\n  var clobber = options.clobber;\n  var preserveTimestamps = options.preserveTimestamps;\n\n  if (fs.existsSync(destFile)) {\n    if (clobber) {\n      fs.unlinkSync(destFile);\n    } else {\n      var err = new Error('EEXIST: ' + destFile + ' already exists.');\n      err.code = 'EEXIST';\n      err.errno = -17;\n      err.path = destFile;\n      throw err;\n    }\n  }\n\n  var fdr = fs.openSync(srcFile, 'r');\n  var stat = fs.fstatSync(fdr);\n  var fdw = fs.openSync(destFile, 'w', stat.mode);\n  var bytesRead = 1;\n  var pos = 0;\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime);\n  }\n\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n}\n\nmodule.exports = copyFileSync;","map":{"version":3,"names":["fs","require","BUF_LENGTH","_buff","Buffer","copyFileSync","srcFile","destFile","options","clobber","preserveTimestamps","existsSync","unlinkSync","err","Error","code","errno","path","fdr","openSync","stat","fstatSync","fdw","mode","bytesRead","pos","readSync","writeSync","futimesSync","atime","mtime","closeSync","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js"],"sourcesContent":["var fs = require('graceful-fs')\n\nvar BUF_LENGTH = 64 * 1024\nvar _buff = new Buffer(BUF_LENGTH)\n\nfunction copyFileSync (srcFile, destFile, options) {\n  var clobber = options.clobber\n  var preserveTimestamps = options.preserveTimestamps\n\n  if (fs.existsSync(destFile)) {\n    if (clobber) {\n      fs.unlinkSync(destFile)\n    } else {\n      var err = new Error('EEXIST: ' + destFile + ' already exists.')\n      err.code = 'EEXIST'\n      err.errno = -17\n      err.path = destFile\n      throw err\n    }\n  }\n\n  var fdr = fs.openSync(srcFile, 'r')\n  var stat = fs.fstatSync(fdr)\n  var fdw = fs.openSync(destFile, 'w', stat.mode)\n  var bytesRead = 1\n  var pos = 0\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime)\n  }\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nmodule.exports = copyFileSync\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AAEA,IAAIC,UAAU,GAAG,KAAK,IAAtB;;AACA,IAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAWF,UAAX,CAAZ;;AAEA,SAASG,YAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmD;EACjD,IAAIC,OAAO,GAAGD,OAAO,CAACC,OAAtB;EACA,IAAIC,kBAAkB,GAAGF,OAAO,CAACE,kBAAjC;;EAEA,IAAIV,EAAE,CAACW,UAAH,CAAcJ,QAAd,CAAJ,EAA6B;IAC3B,IAAIE,OAAJ,EAAa;MACXT,EAAE,CAACY,UAAH,CAAcL,QAAd;IACD,CAFD,MAEO;MACL,IAAIM,GAAG,GAAG,IAAIC,KAAJ,CAAU,aAAaP,QAAb,GAAwB,kBAAlC,CAAV;MACAM,GAAG,CAACE,IAAJ,GAAW,QAAX;MACAF,GAAG,CAACG,KAAJ,GAAY,CAAC,EAAb;MACAH,GAAG,CAACI,IAAJ,GAAWV,QAAX;MACA,MAAMM,GAAN;IACD;EACF;;EAED,IAAIK,GAAG,GAAGlB,EAAE,CAACmB,QAAH,CAAYb,OAAZ,EAAqB,GAArB,CAAV;EACA,IAAIc,IAAI,GAAGpB,EAAE,CAACqB,SAAH,CAAaH,GAAb,CAAX;EACA,IAAII,GAAG,GAAGtB,EAAE,CAACmB,QAAH,CAAYZ,QAAZ,EAAsB,GAAtB,EAA2Ba,IAAI,CAACG,IAAhC,CAAV;EACA,IAAIC,SAAS,GAAG,CAAhB;EACA,IAAIC,GAAG,GAAG,CAAV;;EAEA,OAAOD,SAAS,GAAG,CAAnB,EAAsB;IACpBA,SAAS,GAAGxB,EAAE,CAAC0B,QAAH,CAAYR,GAAZ,EAAiBf,KAAjB,EAAwB,CAAxB,EAA2BD,UAA3B,EAAuCuB,GAAvC,CAAZ;IACAzB,EAAE,CAAC2B,SAAH,CAAaL,GAAb,EAAkBnB,KAAlB,EAAyB,CAAzB,EAA4BqB,SAA5B;IACAC,GAAG,IAAID,SAAP;EACD;;EAED,IAAId,kBAAJ,EAAwB;IACtBV,EAAE,CAAC4B,WAAH,CAAeN,GAAf,EAAoBF,IAAI,CAACS,KAAzB,EAAgCT,IAAI,CAACU,KAArC;EACD;;EAED9B,EAAE,CAAC+B,SAAH,CAAab,GAAb;EACAlB,EAAE,CAAC+B,SAAH,CAAaT,GAAb;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiB5B,YAAjB"},"metadata":{},"sourceType":"script"}