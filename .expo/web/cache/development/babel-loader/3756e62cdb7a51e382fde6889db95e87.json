{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLoader = getLoader;\nexports.NoopLoader = void 0;\n\nfunction _ora() {\n  var data = _interopRequireDefault(require(\"ora\"));\n\n  _ora = function _ora() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar OraNoop = function () {\n  function OraNoop() {\n    _classCallCheck(this, OraNoop);\n\n    _defineProperty(this, \"spinner\", {\n      interval: 1,\n      frames: []\n    });\n\n    _defineProperty(this, \"indent\", 0);\n\n    _defineProperty(this, \"isSpinning\", false);\n\n    _defineProperty(this, \"text\", '');\n\n    _defineProperty(this, \"prefixText\", '');\n\n    _defineProperty(this, \"color\", 'blue');\n  }\n\n  _createClass(OraNoop, [{\n    key: \"succeed\",\n    value: function succeed(_text) {\n      return this;\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(_text) {\n      return this;\n    }\n  }, {\n    key: \"start\",\n    value: function start(_text) {\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      return this;\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(_text) {\n      return this;\n    }\n  }, {\n    key: \"info\",\n    value: function info(_text) {\n      return this;\n    }\n  }, {\n    key: \"stopAndPersist\",\n    value: function stopAndPersist() {\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this;\n    }\n  }, {\n    key: \"frame\",\n    value: function frame() {\n      return this.text;\n    }\n  }]);\n\n  return OraNoop;\n}();\n\nfunction getLoader(options) {\n  return _logger.default.isVerbose() ? new OraNoop() : (0, _ora().default)(options);\n}\n\nvar NoopLoader = OraNoop;\nexports.NoopLoader = NoopLoader;","map":{"version":3,"sources":["../src/loader.ts"],"names":["interval","frames","succeed","fail","start","stop","warn","info","stopAndPersist","clear","render","frame","logger","NoopLoader"],"mappings":";;;;;;;;;;;;AAAA,SAAA,IAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;;EAAA,IAAA,GAAA,gBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AAEA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IAIA,O;EAAgC,mBAAA;IAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EACX;MAACA,QAAQ,EAAT,CAAA;MAAcC,MAAM,EAAE;IAAtB,CADW,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,EAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,MAAA,CAAA;EAAA;;;;WAQ9BC,iBAAO,KAAPA,EAAoC;MAClC,OAAA,IAAA;IACD;;;WACDC,cAAI,KAAJA,EAAqB;MACnB,OAAA,IAAA;IACD;;;WACDC,eAAK,KAALA,EAAsB;MACpB,OAAA,IAAA;IACD;;;WACDC,gBAAO;MACL,OAAA,IAAA;IACD;;;WACDC,cAAI,KAAJA,EAAqB;MACnB,OAAA,IAAA;IACD;;;WACDC,cAAI,KAAJA,EAAqB;MACnB,OAAA,IAAA;IACD;;;WACDC,0BAAiB;MACf,OAAA,IAAA;IACD;;;WACDC,iBAAQ;MACN,OAAA,IAAA;IACD;;;WACDC,kBAAS;MACP,OAAA,IAAA;IACD;;;WACDC,iBAAQ;MACN,OAAO,KAAP,IAAA;IACD;;;;;;AAGI,SAAA,SAAA,CAAA,OAAA,EAAmE;EACxE,OAAOC,OAAAA,CAAAA,OAAAA,CAAAA,SAAAA,KAAqB,IAArBA,OAAqB,EAArBA,GAAqC,CAAA,GAAA,IAAA,GAAA,OAAA,EAA5C,OAA4C,CAA5C;AACD;;AAEM,IAAMC,UAAU,GAAhB,OAAA","sourcesContent":["import ora from 'ora';\nimport type {Ora, Options, Spinner, Color} from 'ora';\nimport logger from './logger';\n\nexport type Loader = Ora;\n\nclass OraNoop implements Loader {\n  spinner: Spinner = {interval: 1, frames: []};\n  indent: number = 0;\n  isSpinning: boolean = false;\n  text: string = '';\n  prefixText: string = '';\n  color: Color = 'blue';\n\n  succeed(_text?: string | undefined) {\n    return this;\n  }\n  fail(_text?: string) {\n    return this;\n  }\n  start(_text?: string) {\n    return this;\n  }\n  stop() {\n    return this;\n  }\n  warn(_text?: string) {\n    return this;\n  }\n  info(_text?: string) {\n    return this;\n  }\n  stopAndPersist() {\n    return this;\n  }\n  clear() {\n    return this;\n  }\n  render() {\n    return this;\n  }\n  frame() {\n    return this.text;\n  }\n}\n\nexport function getLoader(options?: string | Options | undefined): Loader {\n  return logger.isVerbose() ? new OraNoop() : ora(options);\n}\n\nexport const NoopLoader = OraNoop;\n"]},"metadata":{},"sourceType":"script"}