{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _countLines = _interopRequireDefault(require(\"../../../lib/countLines\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar invariant = require(\"invariant\");\n\nfunction lineToLineSourceMap(source) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var firstLine = \"AAAA;\";\n  var line = \"AACA;\";\n  return {\n    file: filename,\n    mappings: firstLine + Array((0, _countLines.default)(source)).join(line),\n    sources: [filename],\n    names: [],\n    version: 3\n  };\n}\n\nvar wrapperEnd = function wrapperEnd(wrappedCode) {\n  return wrappedCode.indexOf(\"{\") + 1;\n};\n\nvar Section = function Section(line, column, map) {\n  return {\n    map: map,\n    offset: {\n      line: line,\n      column: column\n    }\n  };\n};\n\nfunction combineSourceMaps(modules, moduleGroups, options) {\n  var sections = combineMaps(modules, null, moduleGroups, options);\n  return {\n    sections: sections,\n    version: 3\n  };\n}\n\nfunction combineSourceMapsAddingOffsets(modules, x_metro_module_paths, moduleGroups, options) {\n  var x_facebook_offsets = [];\n  var sections = combineMaps(modules, x_facebook_offsets, moduleGroups, options);\n  return {\n    sections: sections,\n    version: 3,\n    x_facebook_offsets: x_facebook_offsets,\n    x_metro_module_paths: x_metro_module_paths\n  };\n}\n\nfunction combineMaps(modules, offsets, moduleGroups, options) {\n  var sections = [];\n  var line = 0;\n  modules.forEach(function (moduleTransport) {\n    var code = moduleTransport.code,\n        id = moduleTransport.id,\n        name = moduleTransport.name;\n    var column = 0;\n    var group;\n    var groupLines = 0;\n    var map = moduleTransport.map;\n\n    if (moduleGroups && moduleGroups.modulesInGroups.has(id)) {\n      return;\n    }\n\n    if (offsets != null) {\n      group = moduleGroups && moduleGroups.groups.get(id);\n\n      if (group && moduleGroups) {\n        var modulesById = moduleGroups.modulesById;\n        var otherModules = Array.from(group || []).map(function (moduleId) {\n          return modulesById.get(moduleId);\n        }).filter(Boolean);\n        otherModules.forEach(function (m) {\n          groupLines += (0, _countLines.default)(m.code);\n        });\n        map = combineSourceMaps([moduleTransport].concat(otherModules));\n      }\n\n      column = options && options.fixWrapperOffset ? wrapperEnd(code) : 0;\n    }\n\n    invariant(!Array.isArray(map), \"Random Access Bundle source maps cannot be built from raw mappings\");\n    sections.push(Section(line, column, map || lineToLineSourceMap(code, name)));\n\n    if (offsets != null && id != null) {\n      offsets[id] = line;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(group || []), _step; !(_step = _iterator()).done;) {\n        var moduleId = _step.value;\n        offsets[moduleId] = line;\n      }\n    }\n\n    line += (0, _countLines.default)(code) + groupLines;\n  });\n  return sections;\n}\n\nvar joinModules = function joinModules(modules) {\n  return modules.map(function (m) {\n    return m.code;\n  }).join(\"\\n\");\n};\n\nmodule.exports = {\n  combineSourceMaps: combineSourceMaps,\n  combineSourceMapsAddingOffsets: combineSourceMapsAddingOffsets,\n  countLines: _countLines.default,\n  joinModules: joinModules,\n  lineToLineSourceMap: lineToLineSourceMap\n};","map":{"version":3,"names":["_countLines","_interopRequireDefault","require","obj","__esModule","default","invariant","lineToLineSourceMap","source","filename","firstLine","line","file","mappings","Array","join","sources","names","version","wrapperEnd","wrappedCode","indexOf","Section","column","map","offset","combineSourceMaps","modules","moduleGroups","options","sections","combineMaps","combineSourceMapsAddingOffsets","x_metro_module_paths","x_facebook_offsets","offsets","forEach","moduleTransport","code","id","name","group","groupLines","modulesInGroups","has","groups","get","modulesById","otherModules","from","moduleId","filter","Boolean","m","concat","fixWrapperOffset","isArray","push","joinModules","module","exports","countLines"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/shared/output/RamBundle/util.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nvar _countLines = _interopRequireDefault(require(\"../../../lib/countLines\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nconst invariant = require(\"invariant\");\n\nfunction lineToLineSourceMap(source, filename = \"\") {\n  // The first line mapping in our package is the base64vlq code for zeros (A).\n  const firstLine = \"AAAA;\"; // Most other lines in our mappings are all zeros (for module, column etc)\n  // except for the lineno mapping: curLineno - prevLineno = 1; Which is C.\n\n  const line = \"AACA;\";\n  return {\n    file: filename,\n    mappings: firstLine + Array((0, _countLines.default)(source)).join(line),\n    sources: [filename],\n    names: [],\n    version: 3,\n  };\n}\n\nconst wrapperEnd = (wrappedCode) => wrappedCode.indexOf(\"{\") + 1;\n\nconst Section = (line, column, map) => ({\n  map,\n  offset: {\n    line,\n    column,\n  },\n});\n\nfunction combineSourceMaps(modules, moduleGroups, options) {\n  const sections = combineMaps(modules, null, moduleGroups, options);\n  return {\n    sections,\n    version: 3,\n  };\n}\n\nfunction combineSourceMapsAddingOffsets(\n  modules,\n  x_metro_module_paths,\n  moduleGroups,\n  options\n) {\n  const x_facebook_offsets = [];\n  const sections = combineMaps(\n    modules,\n    x_facebook_offsets,\n    moduleGroups,\n    options\n  );\n  return {\n    sections,\n    version: 3,\n    x_facebook_offsets,\n    x_metro_module_paths,\n  };\n}\n\nfunction combineMaps(modules, offsets, moduleGroups, options) {\n  const sections = [];\n  let line = 0;\n  modules.forEach((moduleTransport) => {\n    const { code, id, name } = moduleTransport;\n    let column = 0;\n    let group;\n    let groupLines = 0;\n    let { map } = moduleTransport;\n\n    if (moduleGroups && moduleGroups.modulesInGroups.has(id)) {\n      // this is a module appended to another module\n      return;\n    }\n\n    if (offsets != null) {\n      group = moduleGroups && moduleGroups.groups.get(id);\n\n      if (group && moduleGroups) {\n        const { modulesById } = moduleGroups;\n        const otherModules = Array.from(group || [])\n          .map((moduleId) => modulesById.get(moduleId))\n          .filter(Boolean); // needed to appease flow\n\n        otherModules.forEach((m) => {\n          groupLines += (0, _countLines.default)(m.code);\n        });\n        map = combineSourceMaps([moduleTransport].concat(otherModules));\n      }\n\n      column = options && options.fixWrapperOffset ? wrapperEnd(code) : 0;\n    }\n\n    invariant(\n      !Array.isArray(map),\n      \"Random Access Bundle source maps cannot be built from raw mappings\"\n    );\n    sections.push(\n      Section(line, column, map || lineToLineSourceMap(code, name))\n    );\n\n    if (offsets != null && id != null) {\n      offsets[id] = line;\n\n      for (const moduleId of group || []) {\n        offsets[moduleId] = line;\n      }\n    }\n\n    line += (0, _countLines.default)(code) + groupLines;\n  });\n  return sections;\n}\n\nconst joinModules = (modules) => modules.map((m) => m.code).join(\"\\n\");\n\nmodule.exports = {\n  combineSourceMaps,\n  combineSourceMapsAddingOffsets,\n  countLines: _countLines.default,\n  joinModules,\n  lineToLineSourceMap,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}