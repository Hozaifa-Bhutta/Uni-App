{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction findXcodeProject(files) {\n  var sortedFiles = files.sort();\n\n  for (var i = sortedFiles.length - 1; i >= 0; i--) {\n    var fileName = files[i];\n\n    var ext = _path().default.extname(fileName);\n\n    if (ext === '.xcworkspace') {\n      return {\n        name: fileName,\n        isWorkspace: true\n      };\n    }\n\n    if (ext === '.xcodeproj') {\n      return {\n        name: fileName,\n        isWorkspace: false\n      };\n    }\n  }\n\n  return null;\n}\n\nvar _default = findXcodeProject;\nexports.default = _default;","map":{"version":3,"sources":["../../src/config/findXcodeProject.ts"],"names":["sortedFiles","files","i","fileName","ext","path","name","isWorkspace","findXcodeProject"],"mappings":";;;;;;;AAQA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;;;;;;;AAGA,SAAA,gBAAA,CAAA,KAAA,EAAuE;EACrE,IAAMA,WAAW,GAAGC,KAAK,CAAzB,IAAoBA,EAApB;;EAEA,KAAK,IAAIC,CAAC,GAAGF,WAAW,CAAXA,MAAAA,GAAb,CAAA,EAAqCE,CAAC,IAAtC,CAAA,EAA6CA,CAA7C,EAAA,EAAkD;IAChD,IAAMC,QAAQ,GAAGF,KAAK,CAAtB,CAAsB,CAAtB;;IACA,IAAMG,GAAG,GAAGC,KAAAA,GAAAA,OAAAA,CAAAA,OAAAA,CAAZ,QAAYA,CAAZ;;IAEA,IAAID,GAAG,KAAP,cAAA,EAA4B;MAC1B,OAAO;QACLE,IAAI,EADC,QAAA;QAELC,WAAW,EAAE;MAFR,CAAP;IAID;;IACD,IAAIH,GAAG,KAAP,YAAA,EAA0B;MACxB,OAAO;QACLE,IAAI,EADC,QAAA;QAELC,WAAW,EAAE;MAFR,CAAP;IAID;EACF;;EAED,OAAA,IAAA;AACD;;eAEcC,gB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport path from 'path';\nimport {IOSProjectInfo} from '@react-native-community/cli-types';\n\nfunction findXcodeProject(files: Array<string>): IOSProjectInfo | null {\n  const sortedFiles = files.sort();\n\n  for (let i = sortedFiles.length - 1; i >= 0; i--) {\n    const fileName = files[i];\n    const ext = path.extname(fileName);\n\n    if (ext === '.xcworkspace') {\n      return {\n        name: fileName,\n        isWorkspace: true,\n      };\n    }\n    if (ext === '.xcodeproj') {\n      return {\n        name: fileName,\n        isWorkspace: false,\n      };\n    }\n  }\n\n  return null;\n}\n\nexport default findXcodeProject;\n"]},"metadata":{},"sourceType":"script"}