{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar getAppendScripts = require(\"../../lib/getAppendScripts\");\n\nvar _require = require(\"./helpers/js\"),\n    getJsOutput = _require.getJsOutput;\n\nvar processBytecodeModules = require(\"./helpers/processBytecodeModules\");\n\nvar _require2 = require(\"metro-hermes-compiler\"),\n    compile = _require2.compile;\n\nfunction baseBytecodeBundle(entryPoint, preModules, graph, options) {\n  for (var _iterator = _createForOfIteratorHelperLoose(graph.dependencies.values()), _step; !(_step = _iterator()).done;) {\n    var _module = _step.value;\n    options.createModuleId(_module.path);\n  }\n\n  var processModulesOptions = {\n    filter: options.processModuleFilter,\n    createModuleId: options.createModuleId,\n    dev: options.dev,\n    projectRoot: options.projectRoot\n  };\n\n  if (options.modulesOnly) {\n    preModules = [];\n  }\n\n  var modules = _toConsumableArray(graph.dependencies.values()).sort(function (a, b) {\n    return options.createModuleId(a.path) - options.createModuleId(b.path);\n  });\n\n  var post = processBytecodeModules(getAppendScripts(entryPoint, [].concat(_toConsumableArray(preModules), _toConsumableArray(modules)), graph.importBundleNames, {\n    asyncRequireModulePath: options.asyncRequireModulePath,\n    createModuleId: options.createModuleId,\n    getRunModuleStatement: options.getRunModuleStatement,\n    inlineSourceMap: options.inlineSourceMap,\n    projectRoot: options.projectRoot,\n    runBeforeMainModule: options.runBeforeMainModule,\n    runModule: options.runModule,\n    serverRoot: options.serverRoot,\n    sourceMapUrl: options.sourceMapUrl,\n    sourceUrl: options.sourceUrl\n  }).map(function (module) {\n    return _objectSpread(_objectSpread({}, module), {}, {\n      output: [].concat(_toConsumableArray(module.output), [{\n        type: \"bytecode/script/virtual\",\n        data: {\n          bytecode: compile(getJsOutput(module).data.code, {\n            sourceURL: module.path\n          }).bytecode\n        }\n      }])\n    });\n  }), processModulesOptions).flatMap(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        module = _ref2[0],\n        bytecodeBundle = _ref2[1];\n\n    return bytecodeBundle;\n  });\n  var processedModules = processBytecodeModules(_toConsumableArray(graph.dependencies.values()), processModulesOptions).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        module = _ref4[0],\n        bytecodeBundle = _ref4[1];\n\n    return [options.createModuleId(module.path), bytecodeBundle];\n  });\n  return {\n    pre: processBytecodeModules(preModules, processModulesOptions).flatMap(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          _ = _ref6[0],\n          bytecodeBundle = _ref6[1];\n\n      return bytecodeBundle;\n    }),\n    post: post,\n    modules: processedModules\n  };\n}\n\nmodule.exports = baseBytecodeBundle;","map":{"version":3,"names":["getAppendScripts","require","getJsOutput","processBytecodeModules","compile","baseBytecodeBundle","entryPoint","preModules","graph","options","dependencies","values","module","createModuleId","path","processModulesOptions","filter","processModuleFilter","dev","projectRoot","modulesOnly","modules","sort","a","b","post","importBundleNames","asyncRequireModulePath","getRunModuleStatement","inlineSourceMap","runBeforeMainModule","runModule","serverRoot","sourceMapUrl","sourceUrl","map","output","type","data","bytecode","code","sourceURL","flatMap","bytecodeBundle","processedModules","pre","_","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/DeltaBundler/Serializers/baseBytecodeBundle.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst getAppendScripts = require(\"../../lib/getAppendScripts\");\n\nconst { getJsOutput } = require(\"./helpers/js\");\n\nconst processBytecodeModules = require(\"./helpers/processBytecodeModules\");\n\nconst { compile } = require(\"metro-hermes-compiler\");\n\nfunction baseBytecodeBundle(entryPoint, preModules, graph, options) {\n  for (const module of graph.dependencies.values()) {\n    options.createModuleId(module.path);\n  }\n\n  const processModulesOptions = {\n    filter: options.processModuleFilter,\n    createModuleId: options.createModuleId,\n    dev: options.dev,\n    projectRoot: options.projectRoot,\n  }; // Do not prepend polyfills or the require runtime when only modules are requested\n\n  if (options.modulesOnly) {\n    preModules = [];\n  }\n\n  const modules = [...graph.dependencies.values()].sort(\n    (a, b) => options.createModuleId(a.path) - options.createModuleId(b.path)\n  );\n  const post = processBytecodeModules(\n    getAppendScripts(\n      entryPoint,\n      [...preModules, ...modules],\n      graph.importBundleNames,\n      {\n        asyncRequireModulePath: options.asyncRequireModulePath,\n        createModuleId: options.createModuleId,\n        getRunModuleStatement: options.getRunModuleStatement,\n        inlineSourceMap: options.inlineSourceMap,\n        projectRoot: options.projectRoot,\n        runBeforeMainModule: options.runBeforeMainModule,\n        runModule: options.runModule,\n        serverRoot: options.serverRoot,\n        sourceMapUrl: options.sourceMapUrl,\n        sourceUrl: options.sourceUrl,\n      }\n    ).map((module) => {\n      return {\n        ...module,\n        output: [\n          ...module.output,\n          {\n            type: \"bytecode/script/virtual\",\n            data: {\n              bytecode: compile(getJsOutput(module).data.code, {\n                sourceURL: module.path,\n              }).bytecode,\n            },\n          },\n        ],\n      };\n    }),\n    processModulesOptions\n  ).flatMap(([module, bytecodeBundle]) => bytecodeBundle);\n  const processedModules = processBytecodeModules(\n    [...graph.dependencies.values()],\n    processModulesOptions\n  ).map(([module, bytecodeBundle]) => [\n    options.createModuleId(module.path),\n    bytecodeBundle,\n  ]);\n  return {\n    pre: processBytecodeModules(preModules, processModulesOptions).flatMap(\n      ([_, bytecodeBundle]) => bytecodeBundle\n    ),\n    post,\n    modules: processedModules,\n  };\n}\n\nmodule.exports = baseBytecodeBundle;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}