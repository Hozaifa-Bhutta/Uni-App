{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _visitorKeys = require(\"./generated/visitor-keys\");\n\nvar HermesASTAdapter = function () {\n  function HermesASTAdapter(options) {\n    _classCallCheck(this, HermesASTAdapter);\n\n    this.sourceFilename = void 0;\n    this.sourceType = void 0;\n    this.sourceFilename = options.sourceFilename;\n    this.sourceType = options.sourceType;\n  }\n\n  _createClass(HermesASTAdapter, [{\n    key: \"transform\",\n    value: function transform(program) {\n      var comments = program.comments;\n\n      for (var i = 0; i < comments.length; i++) {\n        var comment = comments[i];\n        this.fixSourceLocation(comment);\n        comments[i] = this.mapComment(comment);\n      }\n\n      program.interpreter = comments.length > 0 && comments[0].type === 'InterpreterDirective' ? comments.shift() : null;\n      var tokens = program.tokens;\n\n      if (tokens) {\n        for (var _i = 0; _i < tokens.length; _i++) {\n          this.fixSourceLocation(tokens[_i]);\n        }\n      }\n\n      return this.mapNode(program);\n    }\n  }, {\n    key: \"mapNode\",\n    value: function mapNode(_node) {\n      throw new Error('Implemented in subclasses');\n    }\n  }, {\n    key: \"mapNodeDefault\",\n    value: function mapNodeDefault(node) {\n      var visitorKeys = _visitorKeys.HERMES_AST_VISITOR_KEYS[node.type];\n\n      for (var key in visitorKeys) {\n        var childType = visitorKeys[key];\n\n        if (childType === _visitorKeys.NODE_CHILD) {\n          var child = node[key];\n\n          if (child != null) {\n            node[key] = this.mapNode(child);\n          }\n        } else if (childType === _visitorKeys.NODE_LIST_CHILD) {\n          var children = node[key];\n\n          for (var i = 0; i < children.length; i++) {\n            var _child = children[i];\n\n            if (_child != null) {\n              children[i] = this.mapNode(_child);\n            }\n          }\n        }\n      }\n\n      return node;\n    }\n  }, {\n    key: \"fixSourceLocation\",\n    value: function fixSourceLocation(_node) {\n      throw new Error('Implemented in subclasses');\n    }\n  }, {\n    key: \"getSourceType\",\n    value: function getSourceType() {\n      var _this$sourceType;\n\n      return (_this$sourceType = this.sourceType) != null ? _this$sourceType : 'script';\n    }\n  }, {\n    key: \"setModuleSourceType\",\n    value: function setModuleSourceType() {\n      if (this.sourceType == null) {\n        this.sourceType = 'module';\n      }\n    }\n  }, {\n    key: \"mapComment\",\n    value: function mapComment(node) {\n      return node;\n    }\n  }, {\n    key: \"mapEmpty\",\n    value: function mapEmpty(_node) {\n      return null;\n    }\n  }, {\n    key: \"mapImportDeclaration\",\n    value: function mapImportDeclaration(node) {\n      if (node.importKind === 'value') {\n        this.setModuleSourceType();\n      }\n\n      return this.mapNodeDefault(node);\n    }\n  }, {\n    key: \"mapImportSpecifier\",\n    value: function mapImportSpecifier(node) {\n      if (node.importKind === 'value') {\n        node.importKind = null;\n      }\n\n      return this.mapNodeDefault(node);\n    }\n  }, {\n    key: \"mapExportDefaultDeclaration\",\n    value: function mapExportDefaultDeclaration(node) {\n      this.setModuleSourceType();\n      return this.mapNodeDefault(node);\n    }\n  }, {\n    key: \"mapExportNamedDeclaration\",\n    value: function mapExportNamedDeclaration(node) {\n      if (node.exportKind === 'value') {\n        this.setModuleSourceType();\n      }\n\n      return this.mapNodeDefault(node);\n    }\n  }, {\n    key: \"mapExportAllDeclaration\",\n    value: function mapExportAllDeclaration(node) {\n      if (node.exportKind === 'value') {\n        this.setModuleSourceType();\n      }\n\n      return this.mapNodeDefault(node);\n    }\n  }, {\n    key: \"mapPrivateProperty\",\n    value: function mapPrivateProperty(node) {\n      throw new SyntaxError(this.formatError(node, 'Private properties are not supported'));\n    }\n  }, {\n    key: \"formatError\",\n    value: function formatError(node, message) {\n      return message + \" (\" + node.loc.start.line + \":\" + node.loc.start.column + \")\";\n    }\n  }]);\n\n  return HermesASTAdapter;\n}();\n\nexports.default = HermesASTAdapter;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_visitorKeys","require","HermesASTAdapter","options","sourceFilename","sourceType","program","comments","i","length","comment","fixSourceLocation","mapComment","interpreter","type","shift","tokens","mapNode","_node","Error","node","visitorKeys","HERMES_AST_VISITOR_KEYS","key","childType","NODE_CHILD","child","NODE_LIST_CHILD","children","_this$sourceType","importKind","setModuleSourceType","mapNodeDefault","exportKind","SyntaxError","formatError","message","loc","start","line","column"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/hermes-parser/dist/HermesASTAdapter.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _visitorKeys = require(\"./generated/visitor-keys\");\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n/*\nThis class does some very \"javascripty\" things in the name of\nperformance which are ultimately impossible to soundly type.\n\nSo instead of adding strict types and a large number of suppression\ncomments, instead it is left untyped and subclasses are strictly\ntyped via a separate flow declaration file.\n*/\n\n/**\n * The base class for transforming the Hermes AST to the desired output format.\n * Extended by concrete adapters which output an ESTree or Babel AST.\n */\nclass HermesASTAdapter {\n  constructor(options) {\n    this.sourceFilename = void 0;\n    this.sourceType = void 0;\n    this.sourceFilename = options.sourceFilename;\n    this.sourceType = options.sourceType;\n  }\n  /**\n   * Transform the input Hermes AST to the desired output format.\n   * This modifies the input AST in place instead of constructing a new AST.\n   */\n\n\n  transform(program) {\n    // Comments are not traversed via visitor keys\n    const comments = program.comments;\n\n    for (let i = 0; i < comments.length; i++) {\n      const comment = comments[i];\n      this.fixSourceLocation(comment);\n      comments[i] = this.mapComment(comment);\n    } // The first comment may be an interpreter directive and is stored directly on the program node\n\n\n    program.interpreter = comments.length > 0 && comments[0].type === 'InterpreterDirective' ? comments.shift() : null; // Tokens are not traversed via visitor keys\n\n    const tokens = program.tokens;\n\n    if (tokens) {\n      for (let i = 0; i < tokens.length; i++) {\n        this.fixSourceLocation(tokens[i]);\n      }\n    }\n\n    return this.mapNode(program);\n  }\n  /**\n   * Transform a Hermes AST node to the output AST format.\n   *\n   * This may modify the input node in-place and return that same node, or a completely\n   * new node may be constructed and returned. Overriden in child classes.\n   */\n\n\n  mapNode(_node) {\n    throw new Error('Implemented in subclasses');\n  }\n\n  mapNodeDefault(node) {\n    const visitorKeys = _visitorKeys.HERMES_AST_VISITOR_KEYS[node.type];\n\n    for (const key in visitorKeys) {\n      const childType = visitorKeys[key];\n\n      if (childType === _visitorKeys.NODE_CHILD) {\n        const child = node[key];\n\n        if (child != null) {\n          node[key] = this.mapNode(child);\n        }\n      } else if (childType === _visitorKeys.NODE_LIST_CHILD) {\n        const children = node[key];\n\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n\n          if (child != null) {\n            children[i] = this.mapNode(child);\n          }\n        }\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Update the source location for this node depending on the output AST format.\n   * This can modify the input node in-place. Overriden in child classes.\n   */\n\n\n  fixSourceLocation(_node) {\n    throw new Error('Implemented in subclasses');\n  }\n\n  getSourceType() {\n    var _this$sourceType;\n\n    return (_this$sourceType = this.sourceType) != null ? _this$sourceType : 'script';\n  }\n\n  setModuleSourceType() {\n    if (this.sourceType == null) {\n      this.sourceType = 'module';\n    }\n  }\n\n  mapComment(node) {\n    return node;\n  }\n\n  mapEmpty(_node) {\n    // $FlowExpectedError\n    return null;\n  }\n\n  mapImportDeclaration(node) {\n    if (node.importKind === 'value') {\n      this.setModuleSourceType();\n    }\n\n    return this.mapNodeDefault(node);\n  }\n\n  mapImportSpecifier(node) {\n    if (node.importKind === 'value') {\n      node.importKind = null;\n    }\n\n    return this.mapNodeDefault(node);\n  }\n\n  mapExportDefaultDeclaration(node) {\n    this.setModuleSourceType();\n    return this.mapNodeDefault(node);\n  }\n\n  mapExportNamedDeclaration(node) {\n    if (node.exportKind === 'value') {\n      this.setModuleSourceType();\n    }\n\n    return this.mapNodeDefault(node);\n  }\n\n  mapExportAllDeclaration(node) {\n    if (node.exportKind === 'value') {\n      this.setModuleSourceType();\n    }\n\n    return this.mapNodeDefault(node);\n  }\n\n  mapPrivateProperty(node) {\n    throw new SyntaxError(this.formatError(node, 'Private properties are not supported'));\n  }\n\n  formatError(node, message) {\n    return `${message} (${node.loc.start.line}:${node.loc.start.column})`;\n  }\n\n}\n\nexports.default = HermesASTAdapter;"],"mappings":"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"},"metadata":{},"sourceType":"script"}