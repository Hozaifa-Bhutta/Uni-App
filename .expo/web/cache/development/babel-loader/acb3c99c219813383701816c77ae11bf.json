{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findManifest;\n\nfunction _glob() {\n  var data = _interopRequireDefault(require(\"glob\"));\n\n  _glob = function _glob() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction findManifest(folder) {\n  var manifestPath = _glob().default.sync(_path().default.join('**', 'AndroidManifest.xml'), {\n    cwd: folder,\n    ignore: ['node_modules/**', '**/build/**', '**/debug/**', 'Examples/**', 'examples/**']\n  })[0];\n\n  return manifestPath ? _path().default.join(folder, manifestPath) : null;\n}","map":{"version":3,"sources":["../../src/config/findManifest.ts"],"names":["manifestPath","path","cwd","ignore"],"mappings":";;;;;;;AAQA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;;;;;;;AAEe,SAAA,YAAA,CAAA,MAAA,EAAsC;EACnD,IAAMA,YAAY,GAAG,KAAA,GAAA,OAAA,CAAA,IAAA,CAAUC,KAAAA,GAAAA,OAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAV,qBAAUA,CAAV,EAAkD;IACrEC,GAAG,EADkE,MAAA;IAErEC,MAAM,EAAE,CAAA,iBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA;EAF6D,CAAlD,EAArB,CAAqB,CAArB;;EAWA,OAAOH,YAAY,GAAGC,KAAAA,GAAAA,OAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAH,YAAGA,CAAH,GAAnB,IAAA;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport glob from 'glob';\nimport path from 'path';\n\nexport default function findManifest(folder: string) {\n  const manifestPath = glob.sync(path.join('**', 'AndroidManifest.xml'), {\n    cwd: folder,\n    ignore: [\n      'node_modules/**',\n      '**/build/**',\n      '**/debug/**',\n      'Examples/**',\n      'examples/**',\n    ],\n  })[0];\n\n  return manifestPath ? path.join(folder, manifestPath) : null;\n}\n"]},"metadata":{},"sourceType":"script"}