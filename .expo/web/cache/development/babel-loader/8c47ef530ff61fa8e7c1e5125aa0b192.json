{"ast":null,"code":"\"use strict\";\n\nvar InspectorProxy = require(\"./InspectorProxy\");\n\nvar _require = require(\"url\"),\n    parse = _require.parse;\n\nfunction runInspectorProxy(port, projectRoot) {\n  var inspectorProxy = new InspectorProxy(projectRoot);\n\n  var app = require(\"connect\")();\n\n  app.use(inspectorProxy.processRequest.bind(inspectorProxy));\n\n  var httpServer = require(\"http\").createServer(app);\n\n  httpServer.listen(port, \"127.0.0.1\", function () {\n    var websocketEndpoints = inspectorProxy.createWebSocketListeners(httpServer);\n    httpServer.on(\"upgrade\", function (request, socket, head) {\n      var _parse = parse(request.url),\n          pathname = _parse.pathname;\n\n      if (pathname != null && websocketEndpoints[pathname]) {\n        websocketEndpoints[pathname].handleUpgrade(request, socket, head, function (ws) {\n          websocketEndpoints[pathname].emit(\"connection\", ws, request);\n        });\n      } else {\n        socket.destroy();\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  InspectorProxy: InspectorProxy,\n  runInspectorProxy: runInspectorProxy\n};","map":{"version":3,"names":["InspectorProxy","require","parse","runInspectorProxy","port","projectRoot","inspectorProxy","app","use","processRequest","bind","httpServer","createServer","listen","websocketEndpoints","createWebSocketListeners","on","request","socket","head","url","pathname","handleUpgrade","ws","emit","destroy","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-inspector-proxy/src/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst InspectorProxy = require(\"./InspectorProxy\");\n\nconst { parse } = require(\"url\"); // Runs new HTTP Server and attaches Inspector Proxy to it.\n// Requires are inlined here because we don't want to import them\n// when someone needs only InspectorProxy instance (without starting\n// new HTTP server).\n\nfunction runInspectorProxy(port, projectRoot) {\n  const inspectorProxy = new InspectorProxy(projectRoot);\n\n  const app = require(\"connect\")(); // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n\n  app.use(inspectorProxy.processRequest.bind(inspectorProxy));\n\n  const httpServer = require(\"http\").createServer(app);\n\n  httpServer.listen(port, \"127.0.0.1\", () => {\n    const websocketEndpoints =\n      inspectorProxy.createWebSocketListeners(httpServer);\n    httpServer.on(\"upgrade\", (request, socket, head) => {\n      const { pathname } = parse(request.url);\n\n      if (pathname != null && websocketEndpoints[pathname]) {\n        websocketEndpoints[pathname].handleUpgrade(\n          request,\n          socket,\n          head,\n          (ws) => {\n            websocketEndpoints[pathname].emit(\"connection\", ws, request);\n          }\n        );\n      } else {\n        socket.destroy();\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  InspectorProxy,\n  runInspectorProxy,\n};\n"],"mappings":"AASA;;AAEA,IAAMA,cAAc,GAAGC,OAAO,oBAA9B;;AAEA,eAAkBA,OAAO,CAAC,KAAD,CAAzB;AAAA,IAAQC,KAAR,YAAQA,KAAR;;AAKA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,WAAjC,EAA8C;EAC5C,IAAMC,cAAc,GAAG,IAAIN,cAAJ,CAAmBK,WAAnB,CAAvB;;EAEA,IAAME,GAAG,GAAGN,OAAO,CAAC,SAAD,CAAP,EAAZ;;EAEAM,GAAG,CAACC,GAAJ,CAAQF,cAAc,CAACG,cAAf,CAA8BC,IAA9B,CAAmCJ,cAAnC,CAAR;;EAEA,IAAMK,UAAU,GAAGV,OAAO,CAAC,MAAD,CAAP,CAAgBW,YAAhB,CAA6BL,GAA7B,CAAnB;;EAEAI,UAAU,CAACE,MAAX,CAAkBT,IAAlB,EAAwB,WAAxB,EAAqC,YAAM;IACzC,IAAMU,kBAAkB,GACtBR,cAAc,CAACS,wBAAf,CAAwCJ,UAAxC,CADF;IAEAA,UAAU,CAACK,EAAX,CAAc,SAAd,EAAyB,UAACC,OAAD,EAAUC,MAAV,EAAkBC,IAAlB,EAA2B;MAClD,aAAqBjB,KAAK,CAACe,OAAO,CAACG,GAAT,CAA1B;MAAA,IAAQC,QAAR,UAAQA,QAAR;;MAEA,IAAIA,QAAQ,IAAI,IAAZ,IAAoBP,kBAAkB,CAACO,QAAD,CAA1C,EAAsD;QACpDP,kBAAkB,CAACO,QAAD,CAAlB,CAA6BC,aAA7B,CACEL,OADF,EAEEC,MAFF,EAGEC,IAHF,EAIE,UAACI,EAAD,EAAQ;UACNT,kBAAkB,CAACO,QAAD,CAAlB,CAA6BG,IAA7B,CAAkC,YAAlC,EAAgDD,EAAhD,EAAoDN,OAApD;QACD,CANH;MAQD,CATD,MASO;QACLC,MAAM,CAACO,OAAP;MACD;IACF,CAfD;EAgBD,CAnBD;AAoBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EACf3B,cAAc,EAAdA,cADe;EAEfG,iBAAiB,EAAjBA;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}