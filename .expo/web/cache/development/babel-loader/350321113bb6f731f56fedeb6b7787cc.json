{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findProjectRoot;\n\nfunction _findUp() {\n  var data = _interopRequireDefault(require(\"find-up\"));\n\n  _findUp = function _findUp() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _errors = require(\"./errors\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction findProjectRoot() {\n  var cwd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : process.cwd();\n\n  var packageLocation = _findUp().default.sync('package.json', {\n    cwd: cwd\n  });\n\n  if (!packageLocation) {\n    throw new _errors.CLIError(\"\\n      We couldn't find a package.json in your project.\\n      Are you sure you are running it inside a React Native project?\\n    \");\n  }\n\n  return _path().default.dirname(packageLocation);\n}","map":{"version":3,"sources":["../src/findProjectRoot.ts"],"names":["cwd","process","packageLocation","CLIError","path"],"mappings":";;;;;;;AAAA,SAAA,OAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;EAAA,OAAA,GAAA,mBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,SAAA,KAAA,GAAA;EAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;EAAA,KAAA,GAAA,iBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,IAAA,OAAA,GAAA,OAAA,YAAA;;;;;;;;AAKe,SAAA,eAAA,GAAsD;EAAA,IAA7BA,GAA6B,uEAAvBC,OAAO,CAAtC,GAA+BA,EAAuB;;EACnE,IAAMC,eAAe,GAAG,OAAA,GAAA,OAAA,CAAA,IAAA,CAAA,cAAA,EAA4B;IAACF,GAAAA,EAAAA;EAAD,CAA5B,CAAxB;;EAQA,IAAI,CAAJ,eAAA,EAAsB;IACpB,MAAM,IAAIG,OAAAA,CAAJ,QAAA,wIAAN;EAID;;EAED,OAAOC,KAAAA,GAAAA,OAAAA,CAAAA,OAAAA,CAAP,eAAOA,CAAP;AACD","sourcesContent":["import findUp from 'find-up';\nimport path from 'path';\nimport {CLIError} from './errors';\n\n/**\n * Finds project root by looking for a closest `package.json`.\n */\nexport default function findProjectRoot(cwd = process.cwd()): string {\n  const packageLocation = findUp.sync('package.json', {cwd});\n  /**\n   * It is possible that `package.json` doesn't exist\n   * in the tree. In that case, we want to throw an error.\n   *\n   * When executing via `npx`, this will never happen as `npm`\n   * requires that file to be present in order to run.\n   */\n  if (!packageLocation) {\n    throw new CLIError(`\n      We couldn't find a package.json in your project.\n      Are you sure you are running it inside a React Native project?\n    `);\n  }\n\n  return path.dirname(packageLocation);\n}\n"]},"metadata":{},"sourceType":"script"}