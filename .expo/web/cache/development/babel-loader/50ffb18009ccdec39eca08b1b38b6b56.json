{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unzip = void 0;\n\nfunction _fs() {\n  var data = require(\"fs\");\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nvar StreamZip = require('node-stream-zip');\n\nvar unzip = function _callee(source, destination) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var zip = new StreamZip({\n              file: source,\n              storeEntries: true\n            });\n            (0, _fs().mkdirSync)(destination, {\n              recursive: true\n            });\n            zip.on('ready', function () {\n              zip.extract(null, destination, function (err) {\n                zip.close();\n\n                if (err) {\n                  return reject(err);\n                }\n\n                resolve();\n              });\n            });\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.unzip = unzip;","map":{"version":3,"sources":["../../src/tools/unzip.ts"],"names":["StreamZip","require","unzip","zip","file","storeEntries","recursive","err","reject","resolve"],"mappings":";;;;;;;;;AAAA,SAAA,GAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;EAAA,GAAA,GAAA,eAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAzB,iBAAyB,CAAzB;;AAEA,IAAMC,KAAK,GAAG,iBAAA,MAAA,EAAA,WAAA;EAAA;IAAA;MAAA;QAAA;UAAA,iCACL,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAqB;YACtC,IAAMC,GAAG,GAAG,IAAA,SAAA,CAAc;cACxBC,IAAI,EADoB,MAAA;cAExBC,YAAY,EAAE;YAFU,CAAd,CAAZ;YAKA,CAAA,GAAA,GAAA,GAAA,SAAA,EAAA,WAAA,EAAuB;cAACC,SAAS,EAAE;YAAZ,CAAvB;YAEAH,GAAG,CAAHA,EAAAA,CAAAA,OAAAA,EAAgB,YAAM;cACpBA,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAAgCI,UAAAA,GAAD,EAAuB;gBACpDJ,GAAG,CAAHA,KAAAA;;gBAEA,IAAA,GAAA,EAAS;kBACP,OAAOK,MAAM,CAAb,GAAa,CAAb;gBACD;;gBAEDC,OAAO;cAPTN,CAAAA;YADFA,CAAAA;UARF,CAAO,CADK;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAd","sourcesContent":["import {mkdirSync} from 'fs';\nconst StreamZip = require('node-stream-zip');\n\nconst unzip = async (source: string, destination: string) => {\n  return new Promise((resolve, reject) => {\n    const zip = new StreamZip({\n      file: source,\n      storeEntries: true,\n    });\n\n    mkdirSync(destination, {recursive: true});\n\n    zip.on('ready', () => {\n      zip.extract(null, destination, (err: Error | null) => {\n        zip.close();\n\n        if (err) {\n          return reject(err);\n        }\n\n        resolve();\n      });\n    });\n  });\n};\n\nexport {unzip};\n"]},"metadata":{},"sourceType":"script"}