{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _require = require(\"./helpers/js\"),\n    getJsOutput = _require.getJsOutput,\n    isJsModule = _require.isJsModule;\n\nfunction getExplodedSourceMap(modules, options) {\n  var modulesToProcess = modules.filter(isJsModule).filter(options.processModuleFilter);\n  var result = [];\n  var firstLine1Based = 1;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(modulesToProcess), _step; !(_step = _iterator()).done;) {\n    var _module = _step.value;\n    var path = _module.path;\n    var _getJsOutput$data = getJsOutput(_module).data,\n        lineCount = _getJsOutput$data.lineCount,\n        functionMap = _getJsOutput$data.functionMap,\n        map = _getJsOutput$data.map;\n    result.push({\n      firstLine1Based: firstLine1Based,\n      functionMap: functionMap,\n      path: path,\n      map: map\n    });\n    firstLine1Based += lineCount;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  getExplodedSourceMap: getExplodedSourceMap\n};","map":{"version":3,"names":["require","getJsOutput","isJsModule","getExplodedSourceMap","modules","options","modulesToProcess","filter","processModuleFilter","result","firstLine1Based","module","path","data","lineCount","functionMap","map","push","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/DeltaBundler/Serializers/getExplodedSourceMap.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst { getJsOutput, isJsModule } = require(\"./helpers/js\");\n\nfunction getExplodedSourceMap(modules, options) {\n  const modulesToProcess = modules\n    .filter(isJsModule)\n    .filter(options.processModuleFilter);\n  const result = [];\n  let firstLine1Based = 1;\n\n  for (const module of modulesToProcess) {\n    const { path } = module;\n    const { lineCount, functionMap, map } = getJsOutput(module).data;\n    result.push({\n      firstLine1Based,\n      functionMap,\n      path,\n      map,\n    });\n    firstLine1Based += lineCount;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  getExplodedSourceMap,\n};\n"],"mappings":"AASA;;;;;;;;AAEA,eAAoCA,OAAO,gBAA3C;AAAA,IAAQC,WAAR,YAAQA,WAAR;AAAA,IAAqBC,UAArB,YAAqBA,UAArB;;AAEA,SAASC,oBAAT,CAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;EAC9C,IAAMC,gBAAgB,GAAGF,OAAO,CAC7BG,MADsB,CACfL,UADe,EAEtBK,MAFsB,CAEfF,OAAO,CAACG,mBAFO,CAAzB;EAGA,IAAMC,MAAM,GAAG,EAAf;EACA,IAAIC,eAAe,GAAG,CAAtB;;EAEA,qDAAqBJ,gBAArB,wCAAuC;IAAA,IAA5BK,OAA4B;IACrC,IAAQC,IAAR,GAAiBD,OAAjB,CAAQC,IAAR;IACA,wBAAwCX,WAAW,CAACU,OAAD,CAAX,CAAoBE,IAA5D;IAAA,IAAQC,SAAR,qBAAQA,SAAR;IAAA,IAAmBC,WAAnB,qBAAmBA,WAAnB;IAAA,IAAgCC,GAAhC,qBAAgCA,GAAhC;IACAP,MAAM,CAACQ,IAAP,CAAY;MACVP,eAAe,EAAfA,eADU;MAEVK,WAAW,EAAXA,WAFU;MAGVH,IAAI,EAAJA,IAHU;MAIVI,GAAG,EAAHA;IAJU,CAAZ;IAMAN,eAAe,IAAII,SAAnB;EACD;;EAED,OAAOL,MAAP;AACD;;AAEDE,MAAM,CAACO,OAAP,GAAiB;EACff,oBAAoB,EAApBA;AADe,CAAjB"},"metadata":{},"sourceType":"script"}