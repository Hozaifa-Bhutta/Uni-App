{"ast":null,"code":"\"use strict\";\n\nvar GraphNotFoundError = require(\"../IncrementalBundler/GraphNotFoundError\");\n\nvar ResourceNotFoundError = require(\"../IncrementalBundler/ResourceNotFoundError\");\n\nvar RevisionNotFoundError = require(\"../IncrementalBundler/RevisionNotFoundError\");\n\nvar _require = require(\"../node-haste/DependencyGraph/ModuleResolution\"),\n    UnableToResolveError = _require.UnableToResolveError;\n\nvar _require2 = require(\"@babel/code-frame\"),\n    codeFrameColumns = _require2.codeFrameColumns;\n\nvar ErrorStackParser = require(\"error-stack-parser\");\n\nvar fs = require(\"fs\");\n\nvar _require3 = require(\"metro-core\"),\n    AmbiguousModuleResolutionError = _require3.AmbiguousModuleResolutionError;\n\nvar serializeError = require(\"serialize-error\");\n\nfunction formatBundlingError(error) {\n  if (error instanceof AmbiguousModuleResolutionError) {\n    var he = error.hasteError;\n    var message = \"Ambiguous resolution: module '\" + (error.fromModulePath + \"' tries to require '\" + he.hasteName + \"', but \") + \"there are several files providing this module. You can delete or \" + \"fix them: \\n\\n\" + Object.keys(he.duplicatesSet).sort().map(function (dupFilePath) {\n      return \"\" + dupFilePath;\n    }).join(\"\\n\\n\");\n    return {\n      type: \"AmbiguousModuleResolutionError\",\n      message: message,\n      errors: [{\n        description: message\n      }]\n    };\n  }\n\n  if (error instanceof UnableToResolveError || error instanceof Error && (error.type === \"TransformError\" || error.type === \"NotFoundError\")) {\n    error.errors = [{\n      description: error.message,\n      filename: error.filename,\n      lineNumber: error.lineNumber\n    }];\n    return serializeError(error);\n  } else if (error instanceof ResourceNotFoundError) {\n    return {\n      type: \"ResourceNotFoundError\",\n      errors: [],\n      message: error.message\n    };\n  } else if (error instanceof GraphNotFoundError) {\n    return {\n      type: \"GraphNotFoundError\",\n      errors: [],\n      message: error.message\n    };\n  } else if (error instanceof RevisionNotFoundError) {\n    return {\n      type: \"RevisionNotFoundError\",\n      errors: [],\n      message: error.message\n    };\n  } else {\n    var stack = ErrorStackParser.parse(error);\n    var fileName = stack[0].fileName;\n    var column = stack[0].columnNumber;\n    var line = stack[0].lineNumber;\n    var codeFrame = \"\";\n\n    try {\n      codeFrame = codeFrameColumns(fs.readFileSync(fileName, \"utf8\"), {\n        start: {\n          column: column,\n          line: line\n        }\n      }, {\n        forceColor: true\n      });\n    } catch (_unused) {}\n\n    return {\n      type: \"InternalError\",\n      errors: [],\n      message: \"Metro has encountered an error: \" + error.message + \": \" + fileName + \" (\" + line + \":\" + column + \")\\n\\n\" + codeFrame\n    };\n  }\n}\n\nmodule.exports = formatBundlingError;","map":{"version":3,"names":["GraphNotFoundError","require","ResourceNotFoundError","RevisionNotFoundError","UnableToResolveError","codeFrameColumns","ErrorStackParser","fs","AmbiguousModuleResolutionError","serializeError","formatBundlingError","error","he","hasteError","message","fromModulePath","hasteName","Object","keys","duplicatesSet","sort","map","dupFilePath","join","type","errors","description","Error","filename","lineNumber","stack","parse","fileName","column","columnNumber","line","codeFrame","readFileSync","start","forceColor","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/formatBundlingError.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *\n */\n\"use strict\";\n\nconst GraphNotFoundError = require(\"../IncrementalBundler/GraphNotFoundError\");\n\nconst ResourceNotFoundError = require(\"../IncrementalBundler/ResourceNotFoundError\");\n\nconst RevisionNotFoundError = require(\"../IncrementalBundler/RevisionNotFoundError\");\n\nconst {\n  UnableToResolveError,\n} = require(\"../node-haste/DependencyGraph/ModuleResolution\");\n\nconst { codeFrameColumns } = require(\"@babel/code-frame\");\n\nconst ErrorStackParser = require(\"error-stack-parser\");\n\nconst fs = require(\"fs\");\n\nconst { AmbiguousModuleResolutionError } = require(\"metro-core\");\n\nconst serializeError = require(\"serialize-error\");\n\nfunction formatBundlingError(error) {\n  if (error instanceof AmbiguousModuleResolutionError) {\n    const he = error.hasteError;\n    const message =\n      \"Ambiguous resolution: module '\" +\n      `${error.fromModulePath}\\' tries to require \\'${he.hasteName}\\', but ` +\n      \"there are several files providing this module. You can delete or \" +\n      \"fix them: \\n\\n\" +\n      Object.keys(he.duplicatesSet)\n        .sort()\n        .map((dupFilePath) => `${dupFilePath}`)\n        .join(\"\\n\\n\");\n    return {\n      type: \"AmbiguousModuleResolutionError\",\n      message,\n      errors: [\n        {\n          description: message,\n        },\n      ],\n    };\n  }\n\n  if (\n    error instanceof UnableToResolveError ||\n    (error instanceof Error &&\n      (error.type === \"TransformError\" || error.type === \"NotFoundError\"))\n  ) {\n    error.errors = [\n      {\n        description: error.message,\n        filename: error.filename,\n        lineNumber: error.lineNumber,\n      },\n    ];\n    return serializeError(error);\n  } else if (error instanceof ResourceNotFoundError) {\n    return {\n      type: \"ResourceNotFoundError\",\n      errors: [],\n      message: error.message,\n    };\n  } else if (error instanceof GraphNotFoundError) {\n    return {\n      type: \"GraphNotFoundError\",\n      errors: [],\n      message: error.message,\n    };\n  } else if (error instanceof RevisionNotFoundError) {\n    return {\n      type: \"RevisionNotFoundError\",\n      errors: [],\n      message: error.message,\n    };\n  } else {\n    const stack = ErrorStackParser.parse(error);\n    const fileName = stack[0].fileName;\n    const column = stack[0].columnNumber;\n    const line = stack[0].lineNumber;\n    let codeFrame = \"\";\n\n    try {\n      codeFrame = codeFrameColumns(\n        // If the error was thrown in a node.js builtin module, this call will fail and mask the real error.\n        fs.readFileSync(fileName, \"utf8\"),\n        {\n          start: {\n            column,\n            line,\n          },\n        },\n        {\n          forceColor: true,\n        }\n      );\n    } catch {}\n\n    return {\n      type: \"InternalError\",\n      errors: [],\n      message: `Metro has encountered an error: ${error.message}: ${fileName} (${line}:${column})\\n\\n${codeFrame}`,\n    };\n  }\n}\n\nmodule.exports = formatBundlingError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}