{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.downloadAndUnzip = void 0;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _unzip = require(\"./unzip\");\n\nvar _deleteFile = require(\"./deleteFile\");\n\nvar downloadAndUnzip = function _callee(_ref) {\n  var loader, downloadUrl, component, installPath, installer;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          loader = _ref.loader, downloadUrl = _ref.downloadUrl, component = _ref.component, installPath = _ref.installPath;\n          loader.start(\"Downloading \" + component + \" from \\\"\" + downloadUrl + \"\\\" (this may take a few minutes)\");\n          _context.next = 4;\n          return _regeneratorRuntime.awrap((0, _cliTools().fetchToTemp)(downloadUrl));\n\n        case 4:\n          installer = _context.sent;\n          loader.text = \"Installing \" + component + \" in \\\"\" + installPath + \"\\\"\";\n          _context.prev = 6;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap((0, _unzip.unzip)(installer, installPath));\n\n        case 9:\n          _context.prev = 9;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap((0, _deleteFile.deleteFile)(installer));\n\n        case 12:\n          return _context.finish(9);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6,, 9, 13]], Promise);\n};\n\nexports.downloadAndUnzip = downloadAndUnzip;","map":{"version":3,"sources":["../../src/tools/downloadAndUnzip.ts"],"names":["downloadAndUnzip","installPath","loader","component","installer"],"mappings":";;;;;;;;;AAAA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,WAAA;;AACA,IAAA,WAAA,GAAA,OAAA,gBAAA;;AAMO,IAAMA,gBAAgB,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAO,MAAP,QAAO,MAAP,EAAO,WAAP,QAAO,WAAP,EAAO,SAAP,QAAO,SAAP,EAI9BC,WAJ8B,QAI9BA,WAJ8B;UAW9BC,MAAM,CAANA,KAAAA,kBACiBC,SADjBD,gBAAAA,WAAAA;UAX8B;UAAA,iCAeN,CAAA,GAAA,SAAA,GAAA,WAAA,EAAxB,WAAwB,CAfM;;QAAA;UAexBE,SAfwB;UAiB9BF,MAAM,CAANA,IAAAA,mBAA4BC,SAA5BD,cAAAA,WAAAA;UAjB8B;UAAA;UAAA,iCAmBtB,CAAA,GAAA,MAAA,CAAA,KAAA,EAAA,SAAA,EAAN,WAAM,CAnBsB;;QAAA;UAAA;UAAA;UAAA,iCAqBtB,CAAA,GAAA,WAAA,CAAA,UAAA,EAAN,SAAM,CArBsB;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAzB","sourcesContent":["import {fetchToTemp} from '@react-native-community/cli-tools';\nimport {Loader} from '../types';\nimport {unzip} from './unzip';\nimport {deleteFile} from './deleteFile';\n\n/**\n * Downloads `downloadUrl` and unzips the contents to `installPath` while\n * updating the message of `loader` at each step.\n */\nexport const downloadAndUnzip = async ({\n  loader,\n  downloadUrl,\n  component,\n  installPath,\n}: {\n  loader: Loader;\n  component: string;\n  downloadUrl: string;\n  installPath: string;\n}) => {\n  loader.start(\n    `Downloading ${component} from \"${downloadUrl}\" (this may take a few minutes)`,\n  );\n\n  const installer = await fetchToTemp(downloadUrl);\n\n  loader.text = `Installing ${component} in \"${installPath}\"`;\n  try {\n    await unzip(installer, installPath);\n  } finally {\n    await deleteFile(installer);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}