{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar logToConsole = require(\"./logToConsole\");\n\nvar reporting = require(\"./reporting\");\n\nvar chalk = require(\"chalk\");\n\nvar throttle = require(\"lodash.throttle\");\n\nvar _require = require(\"metro-core\"),\n    AmbiguousModuleResolutionError = _require.AmbiguousModuleResolutionError;\n\nvar path = require(\"path\");\n\nvar GLOBAL_CACHE_DISABLED_MESSAGE_FORMAT = \"The global cache is now disabled because %s\";\nvar DARK_BLOCK_CHAR = \"\\u2593\";\nvar LIGHT_BLOCK_CHAR = \"\\u2591\";\nvar MAX_PROGRESS_BAR_CHAR_WIDTH = 16;\n\nvar TerminalReporter = function () {\n  function TerminalReporter(terminal) {\n    var _this = this;\n\n    _classCallCheck(this, TerminalReporter);\n\n    this._activeBundles = new Map();\n    this._scheduleUpdateBundleProgress = throttle(function (data) {\n      _this.update(_objectSpread(_objectSpread({}, data), {}, {\n        type: \"bundle_transform_progressed_throttled\"\n      }));\n    }, 100);\n    this.terminal = terminal;\n  }\n\n  _createClass(TerminalReporter, [{\n    key: \"_getBundleStatusMessage\",\n    value: function _getBundleStatusMessage(_ref, phase) {\n      var _ref$bundleDetails = _ref.bundleDetails,\n          entryFile = _ref$bundleDetails.entryFile,\n          bundleType = _ref$bundleDetails.bundleType,\n          runtimeBytecodeVersion = _ref$bundleDetails.runtimeBytecodeVersion,\n          transformedFileCount = _ref.transformedFileCount,\n          totalFileCount = _ref.totalFileCount,\n          ratio = _ref.ratio;\n\n      if (runtimeBytecodeVersion) {\n        bundleType = \"bytecodebundle\";\n      }\n\n      var localPath = path.relative(\".\", entryFile);\n      var filledBar = Math.floor(ratio * MAX_PROGRESS_BAR_CHAR_WIDTH);\n      var bundleTypeColor = phase === \"done\" ? chalk.green : phase === \"failed\" ? chalk.red : chalk.yellow;\n      var progress = phase === \"in_progress\" ? chalk.green.bgGreen(DARK_BLOCK_CHAR.repeat(filledBar)) + chalk.bgWhite.white(LIGHT_BLOCK_CHAR.repeat(MAX_PROGRESS_BAR_CHAR_WIDTH - filledBar)) + chalk.bold(\" \" + (100 * ratio).toFixed(1) + \"% \") + chalk.dim(\"(\" + transformedFileCount + \"/\" + totalFileCount + \")\") : \"\";\n      return bundleTypeColor.inverse.bold(\" \" + bundleType.toUpperCase() + \" \") + chalk.reset.dim(\" \" + path.dirname(localPath) + \"/\") + chalk.bold(path.basename(localPath)) + \" \" + progress + \"\\n\";\n    }\n  }, {\n    key: \"_logCacheDisabled\",\n    value: function _logCacheDisabled(reason) {\n      var format = GLOBAL_CACHE_DISABLED_MESSAGE_FORMAT;\n\n      switch (reason) {\n        case \"too_many_errors\":\n          reporting.logWarning(this.terminal, format, \"it has been failing too many times.\");\n          break;\n\n        case \"too_many_misses\":\n          reporting.logWarning(this.terminal, format, \"it has been missing too many consecutive keys.\");\n          break;\n      }\n    }\n  }, {\n    key: \"_logBundleBuildDone\",\n    value: function _logBundleBuildDone(buildID) {\n      var progress = this._activeBundles.get(buildID);\n\n      if (progress != null) {\n        var msg = this._getBundleStatusMessage(_objectSpread(_objectSpread({}, progress), {}, {\n          ratio: 1,\n          transformedFileCount: progress.totalFileCount\n        }), \"done\");\n\n        this.terminal.log(msg);\n\n        this._activeBundles.delete(buildID);\n      }\n    }\n  }, {\n    key: \"_logBundleBuildFailed\",\n    value: function _logBundleBuildFailed(buildID) {\n      var progress = this._activeBundles.get(buildID);\n\n      if (progress != null) {\n        var msg = this._getBundleStatusMessage(progress, \"failed\");\n\n        this.terminal.log(msg);\n      }\n    }\n  }, {\n    key: \"_logInitializing\",\n    value: function _logInitializing(port, hasReducedPerformance) {\n      var logon      var color = hasReducedPerformance ? chalk.red : chalk.blue;\n      this.terminal.log(color(logo.join(\"\\n\")));\n    }\n  }, {\n    key: \"_logInitializingFailed\",\n    value: function _logInitializingFailed(port, error) {\n      if (error.code === \"EADDRINUSE\") {\n        this.terminal.log(chalk.bgRed.bold(\" ERROR \"), chalk.red(\"Metro can't listen on port\", chalk.bold(String(port))));\n        this.terminal.log(\"Most likely another process is already using this port\");\n        this.terminal.log(\"Run the following command to find out which process:\");\n        this.terminal.log(\"\\n  \", chalk.bold(\"lsof -i :\" + port), \"\\n\");\n        this.terminal.log(\"Then, you can either shut down the other process:\");\n        this.terminal.log(\"\\n  \", chalk.bold(\"kill -9 <PID>\"), \"\\n\");\n        this.terminal.log(\"or run Metro on different port.\");\n      } else {\n        this.terminal.log(chalk.bgRed.bold(\" ERROR \"), chalk.red(error.message));\n        var errorAttributes = JSON.stringify(error);\n\n        if (errorAttributes !== \"{}\") {\n          this.terminal.log(chalk.red(errorAttributes));\n        }\n\n        this.terminal.log(chalk.red(error.stack));\n      }\n    }\n  }, {\n    key: \"_log\",\n    value: function _log(event) {\n      switch (event.type) {\n        case \"initialize_started\":\n          this._logInitializing(event.port, event.hasReducedPerformance);\n\n          break;\n\n        case \"initialize_failed\":\n          this._logInitializingFailed(event.port, event.error);\n\n          break;\n\n        case \"bundle_build_done\":\n          this._logBundleBuildDone(event.buildID);\n\n          break;\n\n        case \"bundle_build_failed\":\n          this._logBundleBuildFailed(event.buildID);\n\n          break;\n\n        case \"bundling_error\":\n          this._logBundlingError(event.error);\n\n          break;\n\n        case \"global_cache_disabled\":\n          this._logCacheDisabled(event.reason);\n\n          break;\n\n        case \"transform_cache_reset\":\n          reporting.logWarning(this.terminal, \"the transform cache was reset.\");\n          break;\n\n        case \"worker_stdout_chunk\":\n          this._logWorkerChunk(\"stdout\", event.chunk);\n\n          break;\n\n        case \"worker_stderr_chunk\":\n          this._logWorkerChunk(\"stderr\", event.chunk);\n\n          break;\n\n        case \"hmr_client_error\":\n          this._logHmrClientError(event.error);\n\n          break;\n\n        case \"client_log\":\n          logToConsole.apply(void 0, [this.terminal, event.level, event.mode].concat(_toConsumableArray(event.data)));\n          break;\n\n        case \"dep_graph_loading\":\n          var color = event.hasReducedPerformance ? chalk.red : chalk.blue;\n          this.terminal.log(color.bold(\"                    Welcome to Metro!\\n\") + chalk.dim(\"              Fast - Scalable - Integrated\\n\\n\"));\n\n          if (event.hasReducedPerformance) {\n            this.terminal.log(chalk.red(\"Metro is operating with reduced performance.\\n\" + \"Please fix the problem above and restart Metro.\\n\\n\"));\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"_logBundlingError\",\n    value: function _logBundlingError(error) {\n      if (error instanceof AmbiguousModuleResolutionError) {\n        var he = error.hasteError;\n\n        var _message = \"ambiguous resolution: module `\" + (error.fromModulePath + \"` tries to require `\" + he.hasteName + \"`, \") + \"but there are several files providing this module. You can delete \" + \"or fix them: \\n\\n\" + Object.keys(he.duplicatesSet).sort().map(function (dupFilePath) {\n          return \"  * `\" + dupFilePath + \"`\\n\";\n        }).join(\"\");\n\n        reporting.logError(this.terminal, _message);\n        return;\n      }\n\n      var message = error.message;\n\n      if (!(error instanceof SyntaxError)) {\n        if (error.snippet == null && error.stack != null) {\n          message = error.stack;\n        }\n      }\n\n      if (error.filename && !message.includes(error.filename)) {\n        message += \" [\" + error.filename + \"]\";\n      }\n\n      if (error.snippet != null) {\n        message += \"\\n\" + error.snippet;\n      }\n\n      reporting.logError(this.terminal, message);\n    }\n  }, {\n    key: \"_logWorkerChunk\",\n    value: function _logWorkerChunk(origin, chunk) {\n      var _this2 = this;\n\n      var lines = chunk.split(\"\\n\");\n\n      if (lines.length >= 1 && lines[lines.length - 1] === \"\") {\n        lines.splice(lines.length - 1, 1);\n      }\n\n      lines.forEach(function (line) {\n        _this2.terminal.log(\"transform[\" + origin + \"]: \" + line);\n      });\n    }\n  }, {\n    key: \"_updateBundleProgress\",\n    value: function _updateBundleProgress(_ref2) {\n      var buildID = _ref2.buildID,\n          transformedFileCount = _ref2.transformedFileCount,\n          totalFileCount = _ref2.totalFileCount;\n\n      var currentProgress = this._activeBundles.get(buildID);\n\n      if (currentProgress == null) {\n        return;\n      }\n\n      var rawRatio = transformedFileCount / totalFileCount;\n      var conservativeRatio = Math.pow(rawRatio, 2);\n      var ratio = Math.max(conservativeRatio, currentProgress.ratio);\n\n      _extends(currentProgress, {\n        ratio: ratio,\n        transformedFileCount: transformedFileCount,\n        totalFileCount: totalFileCount\n      });\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(event) {\n      switch (event.type) {\n        case \"bundle_build_done\":\n        case \"bundle_build_failed\":\n          this._activeBundles.delete(event.buildID);\n\n          break;\n\n        case \"bundle_build_started\":\n          var bundleProgress = {\n            bundleDetails: event.bundleDetails,\n            transformedFileCount: 0,\n            totalFileCount: 1,\n            ratio: 0\n          };\n\n          this._activeBundles.set(event.buildID, bundleProgress);\n\n          break;\n\n        case \"bundle_transform_progressed_throttled\":\n          this._updateBundleProgress(event);\n\n          break;\n      }\n    }\n  }, {\n    key: \"_getStatusMessage\",\n    value: function _getStatusMessage() {\n      var _this3 = this;\n\n      return Array.from(this._activeBundles.entries()).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            _ = _ref4[0],\n            progress = _ref4[1];\n\n        return _this3._getBundleStatusMessage(progress, \"in_progress\");\n      }).filter(function (str) {\n        return str != null;\n      }).join(\"\\n\");\n    }\n  }, {\n    key: \"_logHmrClientError\",\n    value: function _logHmrClientError(e) {\n      reporting.logError(this.terminal, \"A WebSocket client got a connection error. Please reload your device \" + \"to get HMR working again: %s\", e);\n    }\n  }, {\n    key: \"update\",\n    value: function update(event) {\n      if (event.type === \"bundle_transform_progressed\") {\n        this._scheduleUpdateBundleProgress(event);\n\n        return;\n      }\n\n      this._log(event);\n\n      this._updateState(event);\n\n      this.terminal.status(this._getStatusMessage());\n    }\n  }]);\n\n  return TerminalReporter;\n}();\n\nmodule.exports = TerminalReporter;","map":{"version":3,"names":["logToConsole","require","reporting","chalk","throttle","AmbiguousModuleResolutionError","path","GLOBAL_CACHE_DISABLED_MESSAGE_FORMAT","DARK_BLOCK_CHAR","LIGHT_BLOCK_CHAR","MAX_PROGRESS_BAR_CHAR_WIDTH","TerminalReporter","terminal","_activeBundles","Map","_scheduleUpdateBundleProgress","data","update","type","phase","bundleDetails","entryFile","bundleType","runtimeBytecodeVersion","transformedFileCount","totalFileCount","ratio","localPath","relative","filledBar","Math","floor","bundleTypeColor","green","red","yellow","progress","bgGreen","repeat","bgWhite","white","bold","toFixed","dim","inverse","toUpperCase","reset","dirname","basename","reason","format","logWarning","buildID","get","msg","_getBundleStatusMessage","log","delete","port","hasReducedPerformance","logo","color","blue","join","error","code","bgRed","String","message","errorAttributes","JSON","stringify","stack","event","_logInitializing","_logInitializingFailed","_logBundleBuildDone","_logBundleBuildFailed","_logBundlingError","_logCacheDisabled","_logWorkerChunk","chunk","_logHmrClientError","level","mode","he","hasteError","fromModulePath","hasteName","Object","keys","duplicatesSet","sort","map","dupFilePath","logError","SyntaxError","snippet","filename","includes","origin","lines","split","length","splice","forEach","line","currentProgress","rawRatio","conservativeRatio","pow","max","bundleProgress","set","_updateBundleProgress","Array","from","entries","_","filter","str","e","_log","_updateState","status","_getStatusMessage","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/TerminalReporter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst logToConsole = require(\"./logToConsole\");\n\nconst reporting = require(\"./reporting\");\n\nconst chalk = require(\"chalk\");\n\nconst throttle = require(\"lodash.throttle\");\n\nconst { AmbiguousModuleResolutionError } = require(\"metro-core\");\n\nconst path = require(\"path\");\n\nconst GLOBAL_CACHE_DISABLED_MESSAGE_FORMAT =\n  \"The global cache is now disabled because %s\";\nconst DARK_BLOCK_CHAR = \"\\u2593\";\nconst LIGHT_BLOCK_CHAR = \"\\u2591\";\nconst MAX_PROGRESS_BAR_CHAR_WIDTH = 16;\n/**\n * We try to print useful information to the terminal for interactive builds.\n * This implements the `Reporter` interface from the './reporting' module.\n */\n\nclass TerminalReporter {\n  /**\n   * The bundle builds for which we are actively maintaining the status on the\n   * terminal, ie. showing a progress bar. There can be several bundles being\n   * built at the same time.\n   */\n  constructor(terminal) {\n    this._activeBundles = new Map();\n    this._scheduleUpdateBundleProgress = throttle((data) => {\n      this.update({ ...data, type: \"bundle_transform_progressed_throttled\" });\n    }, 100);\n    this.terminal = terminal;\n  }\n  /**\n   * Construct a message that represents the progress of a\n   * single bundle build, for example:\n   *\n   *     BUNDLE path/to/bundle.js ▓▓▓▓▓░░░░░░░░░░░ 36.6% (4790/7922)\n   */\n\n  _getBundleStatusMessage(\n    {\n      bundleDetails: { entryFile, bundleType, runtimeBytecodeVersion },\n      transformedFileCount,\n      totalFileCount,\n      ratio,\n    },\n    phase\n  ) {\n    if (runtimeBytecodeVersion) {\n      bundleType = \"bytecodebundle\";\n    }\n\n    const localPath = path.relative(\".\", entryFile);\n    const filledBar = Math.floor(ratio * MAX_PROGRESS_BAR_CHAR_WIDTH);\n    const bundleTypeColor =\n      phase === \"done\"\n        ? chalk.green\n        : phase === \"failed\"\n        ? chalk.red\n        : chalk.yellow;\n    const progress =\n      phase === \"in_progress\"\n        ? chalk.green.bgGreen(DARK_BLOCK_CHAR.repeat(filledBar)) +\n          chalk.bgWhite.white(\n            LIGHT_BLOCK_CHAR.repeat(MAX_PROGRESS_BAR_CHAR_WIDTH - filledBar)\n          ) +\n          chalk.bold(` ${(100 * ratio).toFixed(1)}% `) +\n          chalk.dim(`(${transformedFileCount}/${totalFileCount})`)\n        : \"\";\n    return (\n      bundleTypeColor.inverse.bold(` ${bundleType.toUpperCase()} `) +\n      chalk.reset.dim(` ${path.dirname(localPath)}/`) +\n      chalk.bold(path.basename(localPath)) +\n      \" \" +\n      progress +\n      \"\\n\"\n    );\n  }\n\n  _logCacheDisabled(reason) {\n    const format = GLOBAL_CACHE_DISABLED_MESSAGE_FORMAT;\n\n    switch (reason) {\n      case \"too_many_errors\":\n        reporting.logWarning(\n          this.terminal,\n          format,\n          \"it has been failing too many times.\"\n        );\n        break;\n\n      case \"too_many_misses\":\n        reporting.logWarning(\n          this.terminal,\n          format,\n          \"it has been missing too many consecutive keys.\"\n        );\n        break;\n    }\n  }\n\n  _logBundleBuildDone(buildID) {\n    const progress = this._activeBundles.get(buildID);\n\n    if (progress != null) {\n      const msg = this._getBundleStatusMessage(\n        {\n          ...progress,\n          ratio: 1,\n          transformedFileCount: progress.totalFileCount,\n        },\n        \"done\"\n      );\n\n      this.terminal.log(msg);\n\n      this._activeBundles.delete(buildID);\n    }\n  }\n\n  _logBundleBuildFailed(buildID) {\n    const progress = this._activeBundles.get(buildID);\n\n    if (progress != null) {\n      const msg = this._getBundleStatusMessage(progress, \"failed\");\n\n      this.terminal.log(msg);\n    }\n  }\n\n  _logInitializing(port, hasReducedPerformance) {\n    const logo = [\n      \"                                                      \",\n      \"                        #######                       \",\n      \"                   ################                   \",\n      \"                #########     #########               \",\n      \"            #########             ##########          \",\n      \"        #########        ######        #########      \",\n      \"       ##########################################     \",\n      \"      #####      #####################       #####    \",\n      \"      #####          ##############          #####    \",\n      \"      #####    ###       ######       ###    #####    \",\n      \"      #####    #######            #######    #####    \",\n      \"      #####    ###########    ###########    #####    \",\n      \"      #####    ##########################    #####    \",\n      \"      #####    ##########################    #####    \",\n      \"      #####      ######################     ######    \",\n      \"       ######        #############        #######     \",\n      \"         #########        ####       #########        \",\n      \"              #########          #########            \",\n      \"                  ######### #########                 \",\n      \"                       #########                      \",\n      \"                                                      \",\n      \"                                                      \",\n    ];\n    const color = hasReducedPerformance ? chalk.red : chalk.blue;\n    this.terminal.log(color(logo.join(\"\\n\")));\n  }\n\n  _logInitializingFailed(port, error) {\n    if (error.code === \"EADDRINUSE\") {\n      this.terminal.log(\n        chalk.bgRed.bold(\" ERROR \"),\n        chalk.red(\"Metro can't listen on port\", chalk.bold(String(port)))\n      );\n      this.terminal.log(\n        \"Most likely another process is already using this port\"\n      );\n      this.terminal.log(\"Run the following command to find out which process:\");\n      this.terminal.log(\"\\n  \", chalk.bold(\"lsof -i :\" + port), \"\\n\");\n      this.terminal.log(\"Then, you can either shut down the other process:\");\n      this.terminal.log(\"\\n  \", chalk.bold(\"kill -9 <PID>\"), \"\\n\");\n      this.terminal.log(\"or run Metro on different port.\");\n    } else {\n      this.terminal.log(chalk.bgRed.bold(\" ERROR \"), chalk.red(error.message));\n      const errorAttributes = JSON.stringify(error);\n\n      if (errorAttributes !== \"{}\") {\n        this.terminal.log(chalk.red(errorAttributes));\n      }\n\n      this.terminal.log(chalk.red(error.stack));\n    }\n  }\n  /**\n   * This function is only concerned with logging and should not do state\n   * or terminal status updates.\n   */\n\n  _log(event) {\n    switch (event.type) {\n      case \"initialize_started\":\n        this._logInitializing(event.port, event.hasReducedPerformance);\n\n        break;\n\n      case \"initialize_failed\":\n        this._logInitializingFailed(event.port, event.error);\n\n        break;\n\n      case \"bundle_build_done\":\n        this._logBundleBuildDone(event.buildID);\n\n        break;\n\n      case \"bundle_build_failed\":\n        this._logBundleBuildFailed(event.buildID);\n\n        break;\n\n      case \"bundling_error\":\n        this._logBundlingError(event.error);\n\n        break;\n\n      case \"global_cache_disabled\":\n        this._logCacheDisabled(event.reason);\n\n        break;\n\n      case \"transform_cache_reset\":\n        reporting.logWarning(this.terminal, \"the transform cache was reset.\");\n        break;\n\n      case \"worker_stdout_chunk\":\n        this._logWorkerChunk(\"stdout\", event.chunk);\n\n        break;\n\n      case \"worker_stderr_chunk\":\n        this._logWorkerChunk(\"stderr\", event.chunk);\n\n        break;\n\n      case \"hmr_client_error\":\n        this._logHmrClientError(event.error);\n\n        break;\n\n      case \"client_log\":\n        logToConsole(this.terminal, event.level, event.mode, ...event.data);\n        break;\n\n      case \"dep_graph_loading\":\n        const color = event.hasReducedPerformance ? chalk.red : chalk.blue;\n        this.terminal.log(\n          color.bold(\"                    Welcome to Metro!\\n\") +\n            chalk.dim(\"              Fast - Scalable - Integrated\\n\\n\")\n        );\n\n        if (event.hasReducedPerformance) {\n          this.terminal.log(\n            chalk.red(\n              \"Metro is operating with reduced performance.\\n\" +\n                \"Please fix the problem above and restart Metro.\\n\\n\"\n            )\n          );\n        }\n\n        break;\n    }\n  }\n  /**\n   * We do not want to log the whole stacktrace for bundling error, because\n   * these are operational errors, not programming errors, and the stacktrace\n   * is not actionable to end users.\n   */\n\n  _logBundlingError(error) {\n    if (error instanceof AmbiguousModuleResolutionError) {\n      const he = error.hasteError;\n      const message =\n        \"ambiguous resolution: module `\" +\n        `${error.fromModulePath}\\` tries to require \\`${he.hasteName}\\`, ` +\n        \"but there are several files providing this module. You can delete \" +\n        \"or fix them: \\n\\n\" +\n        Object.keys(he.duplicatesSet)\n          .sort()\n          .map((dupFilePath) => `  * \\`${dupFilePath}\\`\\n`)\n          .join(\"\");\n      reporting.logError(this.terminal, message);\n      return;\n    }\n\n    let { message } = error; // Do not log the stack trace for SyntaxError (because it will always be in\n    // the parser, which is not helpful).\n\n    if (!(error instanceof SyntaxError)) {\n      if (error.snippet == null && error.stack != null) {\n        message = error.stack;\n      }\n    }\n\n    if (error.filename && !message.includes(error.filename)) {\n      message += ` [${error.filename}]`;\n    }\n\n    if (error.snippet != null) {\n      message += \"\\n\" + error.snippet;\n    }\n\n    reporting.logError(this.terminal, message);\n  }\n\n  _logWorkerChunk(origin, chunk) {\n    const lines = chunk.split(\"\\n\");\n\n    if (lines.length >= 1 && lines[lines.length - 1] === \"\") {\n      lines.splice(lines.length - 1, 1);\n    }\n\n    lines.forEach((line) => {\n      this.terminal.log(`transform[${origin}]: ${line}`);\n    });\n  }\n  /**\n   * We use Math.pow(ratio, 2) to as a conservative measure of progress because\n   * we know the `totalCount` is going to progressively increase as well. We\n   * also prevent the ratio from going backwards.\n   */\n\n  _updateBundleProgress({ buildID, transformedFileCount, totalFileCount }) {\n    const currentProgress = this._activeBundles.get(buildID);\n\n    if (currentProgress == null) {\n      return;\n    }\n\n    const rawRatio = transformedFileCount / totalFileCount;\n    const conservativeRatio = Math.pow(rawRatio, 2);\n    const ratio = Math.max(conservativeRatio, currentProgress.ratio);\n    Object.assign(currentProgress, {\n      ratio,\n      transformedFileCount,\n      totalFileCount,\n    });\n  }\n  /**\n   * This function is exclusively concerned with updating the internal state.\n   * No logging or status updates should be done at this point.\n   */\n\n  _updateState(event) {\n    switch (event.type) {\n      case \"bundle_build_done\":\n      case \"bundle_build_failed\":\n        this._activeBundles.delete(event.buildID);\n\n        break;\n\n      case \"bundle_build_started\":\n        const bundleProgress = {\n          bundleDetails: event.bundleDetails,\n          transformedFileCount: 0,\n          totalFileCount: 1,\n          ratio: 0,\n        };\n\n        this._activeBundles.set(event.buildID, bundleProgress);\n\n        break;\n\n      case \"bundle_transform_progressed_throttled\":\n        this._updateBundleProgress(event);\n\n        break;\n    }\n  }\n  /**\n   * Return a status message that is always consistent with the current state\n   * of the application. Having this single function ensures we don't have\n   * different callsites overriding each other status messages.\n   */\n\n  _getStatusMessage() {\n    return Array.from(this._activeBundles.entries())\n      .map(([_, progress]) =>\n        this._getBundleStatusMessage(progress, \"in_progress\")\n      )\n      .filter((str) => str != null)\n      .join(\"\\n\");\n  }\n\n  _logHmrClientError(e) {\n    reporting.logError(\n      this.terminal,\n      \"A WebSocket client got a connection error. Please reload your device \" +\n        \"to get HMR working again: %s\",\n      e\n    );\n  }\n  /**\n   * Single entry point for reporting events. That allows us to implement the\n   * corresponding JSON reporter easily and have a consistent repor∏ting.\n   */\n\n  update(event) {\n    if (event.type === \"bundle_transform_progressed\") {\n      this._scheduleUpdateBundleProgress(event);\n\n      return;\n    }\n\n    this._log(event);\n\n    this._updateState(event);\n\n    this.terminal.status(this._getStatusMessage());\n  }\n}\n\nmodule.exports = TerminalReporter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}