{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar B64Builder = require(\"./B64Builder\");\n\nvar Generator = function () {\n  function Generator() {\n    _classCallCheck(this, Generator);\n\n    this.builder = new B64Builder();\n    this.last = {\n      generatedColumn: 0,\n      generatedLine: 1,\n      name: 0,\n      source: 0,\n      sourceColumn: 0,\n      sourceLine: 1\n    };\n    this.names = new IndexedSet();\n    this.source = -1;\n    this.sources = [];\n    this.sourcesContent = [];\n    this.x_facebook_sources = [];\n  }\n\n  _createClass(Generator, [{\n    key: \"startFile\",\n    value: function startFile(file, code, functionMap) {\n      this.source = this.sources.push(file) - 1;\n      this.sourcesContent.push(code);\n      this.x_facebook_sources.push(functionMap ? [functionMap] : null);\n    }\n  }, {\n    key: \"endFile\",\n    value: function endFile() {\n      this.source = -1;\n    }\n  }, {\n    key: \"addSimpleMapping\",\n    value: function addSimpleMapping(generatedLine, generatedColumn) {\n      var last = this.last;\n\n      if (this.source === -1 || generatedLine === last.generatedLine && generatedColumn < last.generatedColumn || generatedLine < last.generatedLine) {\n        var msg = this.source === -1 ? \"Cannot add mapping before starting a file with `addFile()`\" : \"Mapping is for a position preceding an earlier mapping\";\n        throw new Error(msg);\n      }\n\n      if (generatedLine > last.generatedLine) {\n        this.builder.markLines(generatedLine - last.generatedLine);\n        last.generatedLine = generatedLine;\n        last.generatedColumn = 0;\n      }\n\n      this.builder.startSegment(generatedColumn - last.generatedColumn);\n      last.generatedColumn = generatedColumn;\n    }\n  }, {\n    key: \"addSourceMapping\",\n    value: function addSourceMapping(generatedLine, generatedColumn, sourceLine, sourceColumn) {\n      this.addSimpleMapping(generatedLine, generatedColumn);\n      var last = this.last;\n      this.builder.append(this.source - last.source).append(sourceLine - last.sourceLine).append(sourceColumn - last.sourceColumn);\n      last.source = this.source;\n      last.sourceColumn = sourceColumn;\n      last.sourceLine = sourceLine;\n    }\n  }, {\n    key: \"addNamedSourceMapping\",\n    value: function addNamedSourceMapping(generatedLine, generatedColumn, sourceLine, sourceColumn, name) {\n      this.addSourceMapping(generatedLine, generatedColumn, sourceLine, sourceColumn);\n      var last = this.last;\n      var nameIndex = this.names.indexFor(name);\n      this.builder.append(nameIndex - last.name);\n      last.name = nameIndex;\n    }\n  }, {\n    key: \"toMap\",\n    value: function toMap(file, options) {\n      var content, sourcesMetadata;\n\n      if (options && options.excludeSource) {\n        content = {};\n      } else {\n        content = {\n          sourcesContent: this.sourcesContent.slice()\n        };\n      }\n\n      if (this.hasSourcesMetadata()) {\n        sourcesMetadata = {\n          x_facebook_sources: JSON.parse(JSON.stringify(this.x_facebook_sources))\n        };\n      } else {\n        sourcesMetadata = {};\n      }\n\n      return _objectSpread(_objectSpread(_objectSpread({\n        version: 3,\n        file: file,\n        sources: this.sources.slice()\n      }, content), sourcesMetadata), {}, {\n        names: this.names.items(),\n        mappings: this.builder.toString()\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(file, options) {\n      var content, sourcesMetadata;\n\n      if (options && options.excludeSource) {\n        content = \"\";\n      } else {\n        content = \"\\\"sourcesContent\\\":\" + JSON.stringify(this.sourcesContent) + \",\";\n      }\n\n      if (this.hasSourcesMetadata()) {\n        sourcesMetadata = \"\\\"x_facebook_sources\\\":\" + JSON.stringify(this.x_facebook_sources) + \",\";\n      } else {\n        sourcesMetadata = \"\";\n      }\n\n      return \"{\" + '\"version\":3,' + (file ? \"\\\"file\\\":\" + JSON.stringify(file) + \",\" : \"\") + (\"\\\"sources\\\":\" + JSON.stringify(this.sources) + \",\") + content + sourcesMetadata + (\"\\\"names\\\":\" + JSON.stringify(this.names.items()) + \",\") + (\"\\\"mappings\\\":\\\"\" + this.builder.toString() + \"\\\"\") + \"}\";\n    }\n  }, {\n    key: \"hasSourcesMetadata\",\n    value: function hasSourcesMetadata() {\n      return this.x_facebook_sources.some(function (metadata) {\n        return metadata != null && metadata.some(function (value) {\n          return value != null;\n        });\n      });\n    }\n  }]);\n\n  return Generator;\n}();\n\nvar IndexedSet = function () {\n  function IndexedSet() {\n    _classCallCheck(this, IndexedSet);\n\n    this.map = new Map();\n    this.nextIndex = 0;\n  }\n\n  _createClass(IndexedSet, [{\n    key: \"indexFor\",\n    value: function indexFor(x) {\n      var index = this.map.get(x);\n\n      if (index == null) {\n        index = this.nextIndex++;\n        this.map.set(x, index);\n      }\n\n      return index;\n    }\n  }, {\n    key: \"items\",\n    value: function items() {\n      return Array.from(this.map.keys());\n    }\n  }]);\n\n  return IndexedSet;\n}();\n\nmodule.exports = Generator;","map":{"version":3,"names":["B64Builder","require","Generator","builder","last","generatedColumn","generatedLine","name","source","sourceColumn","sourceLine","names","IndexedSet","sources","sourcesContent","x_facebook_sources","file","code","functionMap","push","msg","Error","markLines","startSegment","addSimpleMapping","append","addSourceMapping","nameIndex","indexFor","options","content","sourcesMetadata","excludeSource","slice","hasSourcesMetadata","JSON","parse","stringify","version","items","mappings","toString","some","metadata","value","map","Map","nextIndex","x","index","get","set","Array","from","keys","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-source-map/src/Generator.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst B64Builder = require(\"./B64Builder\");\n/**\n * Generates a source map from raw mappings.\n *\n * Raw mappings are a set of 2, 4, or five elements:\n *\n * - line and column number in the generated source\n * - line and column number in the original source\n * - symbol name in the original source\n *\n * Mappings have to be passed in the order appearance in the generated source.\n */\n\nclass Generator {\n  constructor() {\n    this.builder = new B64Builder();\n    this.last = {\n      generatedColumn: 0,\n      generatedLine: 1,\n      // lines are passed in 1-indexed\n      name: 0,\n      source: 0,\n      sourceColumn: 0,\n      sourceLine: 1,\n    };\n    this.names = new IndexedSet();\n    this.source = -1;\n    this.sources = [];\n    this.sourcesContent = [];\n    this.x_facebook_sources = [];\n  }\n  /**\n   * Mark the beginning of a new source file.\n   */\n\n  startFile(file, code, functionMap) {\n    this.source = this.sources.push(file) - 1;\n    this.sourcesContent.push(code);\n    this.x_facebook_sources.push(functionMap ? [functionMap] : null);\n  }\n  /**\n   * Mark the end of the current source file\n   */\n\n  endFile() {\n    this.source = -1;\n  }\n  /**\n   * Adds a mapping for generated code without a corresponding source location.\n   */\n\n  addSimpleMapping(generatedLine, generatedColumn) {\n    const last = this.last;\n\n    if (\n      this.source === -1 ||\n      (generatedLine === last.generatedLine &&\n        generatedColumn < last.generatedColumn) ||\n      generatedLine < last.generatedLine\n    ) {\n      const msg =\n        this.source === -1\n          ? \"Cannot add mapping before starting a file with `addFile()`\"\n          : \"Mapping is for a position preceding an earlier mapping\";\n      throw new Error(msg);\n    }\n\n    if (generatedLine > last.generatedLine) {\n      this.builder.markLines(generatedLine - last.generatedLine);\n      last.generatedLine = generatedLine;\n      last.generatedColumn = 0;\n    }\n\n    this.builder.startSegment(generatedColumn - last.generatedColumn);\n    last.generatedColumn = generatedColumn;\n  }\n  /**\n   * Adds a mapping for generated code with a corresponding source location.\n   */\n\n  addSourceMapping(generatedLine, generatedColumn, sourceLine, sourceColumn) {\n    this.addSimpleMapping(generatedLine, generatedColumn);\n    const last = this.last;\n    this.builder\n      .append(this.source - last.source)\n      .append(sourceLine - last.sourceLine)\n      .append(sourceColumn - last.sourceColumn);\n    last.source = this.source;\n    last.sourceColumn = sourceColumn;\n    last.sourceLine = sourceLine;\n  }\n  /**\n   * Adds a mapping for code with a corresponding source location + symbol name.\n   */\n\n  addNamedSourceMapping(\n    generatedLine,\n    generatedColumn,\n    sourceLine,\n    sourceColumn,\n    name\n  ) {\n    this.addSourceMapping(\n      generatedLine,\n      generatedColumn,\n      sourceLine,\n      sourceColumn\n    );\n    const last = this.last;\n    const nameIndex = this.names.indexFor(name);\n    this.builder.append(nameIndex - last.name);\n    last.name = nameIndex;\n  }\n  /**\n   * Return the source map as object.\n   */\n\n  toMap(file, options) {\n    let content, sourcesMetadata;\n\n    if (options && options.excludeSource) {\n      content = {};\n    } else {\n      content = {\n        sourcesContent: this.sourcesContent.slice(),\n      };\n    }\n\n    if (this.hasSourcesMetadata()) {\n      sourcesMetadata = {\n        x_facebook_sources: JSON.parse(JSON.stringify(this.x_facebook_sources)),\n      };\n    } else {\n      sourcesMetadata = {};\n    }\n    /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.111 was deployed. To see the error, delete this\n     * comment and run Flow. */\n\n    return {\n      version: 3,\n      file,\n      sources: this.sources.slice(),\n      ...content,\n\n      /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.111 was deployed. To see the error, delete\n       * this comment and run Flow. */\n      ...sourcesMetadata,\n      names: this.names.items(),\n      mappings: this.builder.toString(),\n    };\n  }\n  /**\n   * Return the source map as string.\n   *\n   * This is ~2.5x faster than calling `JSON.stringify(generator.toMap())`\n   */\n\n  toString(file, options) {\n    let content, sourcesMetadata;\n\n    if (options && options.excludeSource) {\n      content = \"\";\n    } else {\n      content = `\"sourcesContent\":${JSON.stringify(this.sourcesContent)},`;\n    }\n\n    if (this.hasSourcesMetadata()) {\n      sourcesMetadata = `\"x_facebook_sources\":${JSON.stringify(\n        this.x_facebook_sources\n      )},`;\n    } else {\n      sourcesMetadata = \"\";\n    }\n\n    return (\n      \"{\" +\n      '\"version\":3,' +\n      (file ? `\"file\":${JSON.stringify(file)},` : \"\") +\n      `\"sources\":${JSON.stringify(this.sources)},` +\n      content +\n      sourcesMetadata +\n      `\"names\":${JSON.stringify(this.names.items())},` +\n      `\"mappings\":\"${this.builder.toString()}\"` +\n      \"}\"\n    );\n  }\n  /**\n   * Determine whether we need to write the `x_facebook_sources` field.\n   * If the metadata is all `null`s, we can omit the field entirely.\n   */\n\n  hasSourcesMetadata() {\n    return this.x_facebook_sources.some(\n      (metadata) => metadata != null && metadata.some((value) => value != null)\n    );\n  }\n}\n\nclass IndexedSet {\n  constructor() {\n    this.map = new Map();\n    this.nextIndex = 0;\n  }\n\n  indexFor(x) {\n    let index = this.map.get(x);\n\n    if (index == null) {\n      index = this.nextIndex++;\n      this.map.set(x, index);\n    }\n\n    return index;\n  }\n\n  items() {\n    return Array.from(this.map.keys());\n  }\n}\n\nmodule.exports = Generator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}