{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar Server = require(\"../../Server\");\n\nvar asAssets = require(\"./RamBundle/as-assets\");\n\nvar asIndexedFile = require(\"./RamBundle/as-indexed-file\").save;\n\nfunction build(packagerClient, requestOptions) {\n  var options;\n  return _regeneratorRuntime.async(function build$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _objectSpread(_objectSpread(_objectSpread({}, Server.DEFAULT_BUNDLE_OPTIONS), requestOptions), {}, {\n            bundleType: \"ram\"\n          });\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(packagerClient.getRamBundleInfo(options));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction save(bundle, options, log) {\n  return options.platform === \"android\" && !(options.indexedRamBundle === true) ? asAssets(bundle, options, log) : asIndexedFile(bundle, options, log);\n}\n\nexports.build = build;\nexports.save = save;\nexports.formatName = \"bundle\";","map":{"version":3,"names":["Server","require","asAssets","asIndexedFile","save","build","packagerClient","requestOptions","options","DEFAULT_BUNDLE_OPTIONS","bundleType","getRamBundleInfo","bundle","log","platform","indexedRamBundle","exports","formatName"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/shared/output/RamBundle.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst Server = require(\"../../Server\");\n\nconst asAssets = require(\"./RamBundle/as-assets\");\n\nconst asIndexedFile = require(\"./RamBundle/as-indexed-file\").save;\n\nasync function build(packagerClient, requestOptions) {\n  const options = {\n    ...Server.DEFAULT_BUNDLE_OPTIONS,\n    ...requestOptions,\n    bundleType: \"ram\",\n  };\n  return await packagerClient.getRamBundleInfo(options);\n}\n\nfunction save(bundle, options, log) {\n  // We fork here depending on the platform: while Android is pretty good at\n  // loading individual assets, iOS has a large overhead when reading hundreds\n  // of assets from disk.\n  return options.platform === \"android\" && !(options.indexedRamBundle === true)\n    ? asAssets(bundle, options, log)\n    : asIndexedFile(bundle, options, log);\n}\n\nexports.build = build;\nexports.save = save;\nexports.formatName = \"bundle\";\n"],"mappings":"AASA;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,gBAAtB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,yBAAxB;;AAEA,IAAME,aAAa,GAAGF,OAAO,+BAAP,CAAuCG,IAA7D;;AAEA,SAAeC,KAAf,CAAqBC,cAArB,EAAqCC,cAArC;EAAA;EAAA;IAAA;MAAA;QAAA;UACQC,OADR,iDAEOR,MAAM,CAACS,sBAFd,GAGOF,cAHP;YAIIG,UAAU,EAAE;UAJhB;UAAA;UAAA,iCAMeJ,cAAc,CAACK,gBAAf,CAAgCH,OAAhC,CANf;;QAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AASA,SAASJ,IAAT,CAAcQ,MAAd,EAAsBJ,OAAtB,EAA+BK,GAA/B,EAAoC;EAIlC,OAAOL,OAAO,CAACM,QAAR,KAAqB,SAArB,IAAkC,EAAEN,OAAO,CAACO,gBAAR,KAA6B,IAA/B,CAAlC,GACHb,QAAQ,CAACU,MAAD,EAASJ,OAAT,EAAkBK,GAAlB,CADL,GAEHV,aAAa,CAACS,MAAD,EAASJ,OAAT,EAAkBK,GAAlB,CAFjB;AAGD;;AAEDG,OAAO,CAACX,KAAR,GAAgBA,KAAhB;AACAW,OAAO,CAACZ,IAAR,GAAeA,IAAf;AACAY,OAAO,CAACC,UAAR,GAAqB,QAArB"},"metadata":{},"sourceType":"script"}