{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar getInlineSourceMappingURL = require(\"../DeltaBundler/Serializers/helpers/getInlineSourceMappingURL\");\n\nvar sourceMapString = require(\"../DeltaBundler/Serializers/sourceMapString\");\n\nvar countLines = require(\"./countLines\");\n\nvar nullthrows = require(\"nullthrows\");\n\nvar path = require(\"path\");\n\nfunction getAppendScripts(entryPoint, modules, importBundleNames, options) {\n  var output = [];\n\n  if (importBundleNames.size) {\n    var importBundleNamesObject = Object.create(null);\n    importBundleNames.forEach(function (absolutePath) {\n      var bundlePath = path.relative(options.serverRoot, absolutePath);\n      importBundleNamesObject[options.createModuleId(absolutePath)] = bundlePath.slice(0, -path.extname(bundlePath).length);\n    });\n    var code = \"(function(){var $$=\" + options.getRunModuleStatement(options.createModuleId(options.asyncRequireModulePath)) + \"$$.addImportBundleNames(\" + String(JSON.stringify(importBundleNamesObject)) + \")})();\";\n    output.push({\n      path: \"$$importBundleNames\",\n      dependencies: new Map(),\n      getSource: function getSource() {\n        return Buffer.from(\"\");\n      },\n      inverseDependencies: new Set(),\n      output: [{\n        type: \"js/script/virtual\",\n        data: {\n          code: code,\n          lineCount: countLines(code),\n          map: []\n        }\n      }]\n    });\n  }\n\n  if (options.runModule) {\n    var paths = [].concat(_toConsumableArray(options.runBeforeMainModule), [entryPoint]);\n\n    var _loop = function _loop(_path) {\n      if (modules.some(function (module) {\n        return module.path === _path;\n      })) {\n        var _code = options.getRunModuleStatement(options.createModuleId(_path));\n\n        output.push({\n          path: \"require-\" + _path,\n          dependencies: new Map(),\n          getSource: function getSource() {\n            return Buffer.from(\"\");\n          },\n          inverseDependencies: new Set(),\n          output: [{\n            type: \"js/script/virtual\",\n            data: {\n              code: _code,\n              lineCount: countLines(_code),\n              map: []\n            }\n          }]\n        });\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(paths), _step; !(_step = _iterator()).done;) {\n      var _path = _step.value;\n\n      _loop(_path);\n    }\n  }\n\n  if (options.inlineSourceMap || options.sourceMapUrl) {\n    var sourceMappingURL = options.inlineSourceMap ? getInlineSourceMappingURL(sourceMapString(modules, {\n      processModuleFilter: function processModuleFilter() {\n        return true;\n      },\n      excludeSource: false\n    })) : nullthrows(options.sourceMapUrl);\n\n    var _code2 = \"//# sourceMappingURL=\" + sourceMappingURL;\n\n    output.push({\n      path: \"source-map\",\n      dependencies: new Map(),\n      getSource: function getSource() {\n        return Buffer.from(\"\");\n      },\n      inverseDependencies: new Set(),\n      output: [{\n        type: \"js/script/virtual\",\n        data: {\n          code: _code2,\n          lineCount: countLines(_code2),\n          map: []\n        }\n      }]\n    });\n  }\n\n  if (options.sourceUrl) {\n    var _code3 = \"//# sourceURL=\" + options.sourceUrl;\n\n    output.push({\n      path: \"source-url\",\n      dependencies: new Map(),\n      getSource: function getSource() {\n        return Buffer.from(\"\");\n      },\n      inverseDependencies: new Set(),\n      output: [{\n        type: \"js/script/virtual\",\n        data: {\n          code: _code3,\n          lineCount: countLines(_code3),\n          map: []\n        }\n      }]\n    });\n  }\n\n  return output;\n}\n\nmodule.exports = getAppendScripts;","map":{"version":3,"names":["getInlineSourceMappingURL","require","sourceMapString","countLines","nullthrows","path","getAppendScripts","entryPoint","modules","importBundleNames","options","output","size","importBundleNamesObject","Object","create","forEach","absolutePath","bundlePath","relative","serverRoot","createModuleId","slice","extname","length","code","getRunModuleStatement","asyncRequireModulePath","String","JSON","stringify","push","dependencies","Map","getSource","Buffer","from","inverseDependencies","Set","type","data","lineCount","map","runModule","paths","runBeforeMainModule","some","module","inlineSourceMap","sourceMapUrl","sourceMappingURL","processModuleFilter","excludeSource","sourceUrl","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/getAppendScripts.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst getInlineSourceMappingURL = require(\"../DeltaBundler/Serializers/helpers/getInlineSourceMappingURL\");\n\nconst sourceMapString = require(\"../DeltaBundler/Serializers/sourceMapString\");\n\nconst countLines = require(\"./countLines\");\n\nconst nullthrows = require(\"nullthrows\");\n\nconst path = require(\"path\");\n\nfunction getAppendScripts(entryPoint, modules, importBundleNames, options) {\n  const output = [];\n\n  if (importBundleNames.size) {\n    const importBundleNamesObject = Object.create(null);\n    importBundleNames.forEach((absolutePath) => {\n      const bundlePath = path.relative(options.serverRoot, absolutePath);\n      importBundleNamesObject[options.createModuleId(absolutePath)] =\n        bundlePath.slice(0, -path.extname(bundlePath).length);\n    });\n    const code = `(function(){var $$=${options.getRunModuleStatement(\n      options.createModuleId(options.asyncRequireModulePath)\n    )}$$.addImportBundleNames(${String(\n      JSON.stringify(importBundleNamesObject)\n    )})})();`;\n    output.push({\n      path: \"$$importBundleNames\",\n      dependencies: new Map(),\n      getSource: () => Buffer.from(\"\"),\n      inverseDependencies: new Set(),\n      output: [\n        {\n          type: \"js/script/virtual\",\n          data: {\n            code,\n            lineCount: countLines(code),\n            map: [],\n          },\n        },\n      ],\n    });\n  }\n\n  if (options.runModule) {\n    const paths = [...options.runBeforeMainModule, entryPoint];\n\n    for (const path of paths) {\n      if (modules.some((module) => module.path === path)) {\n        const code = options.getRunModuleStatement(\n          options.createModuleId(path)\n        );\n        output.push({\n          path: `require-${path}`,\n          dependencies: new Map(),\n          getSource: () => Buffer.from(\"\"),\n          inverseDependencies: new Set(),\n          output: [\n            {\n              type: \"js/script/virtual\",\n              data: {\n                code,\n                lineCount: countLines(code),\n                map: [],\n              },\n            },\n          ],\n        });\n      }\n    }\n  }\n\n  if (options.inlineSourceMap || options.sourceMapUrl) {\n    const sourceMappingURL = options.inlineSourceMap\n      ? getInlineSourceMappingURL(\n          sourceMapString(modules, {\n            processModuleFilter: () => true,\n            excludeSource: false,\n          })\n        )\n      : nullthrows(options.sourceMapUrl);\n    const code = `//# sourceMappingURL=${sourceMappingURL}`;\n    output.push({\n      path: \"source-map\",\n      dependencies: new Map(),\n      getSource: () => Buffer.from(\"\"),\n      inverseDependencies: new Set(),\n      output: [\n        {\n          type: \"js/script/virtual\",\n          data: {\n            code,\n            lineCount: countLines(code),\n            map: [],\n          },\n        },\n      ],\n    });\n  }\n\n  if (options.sourceUrl) {\n    const code = `//# sourceURL=${options.sourceUrl}`;\n    output.push({\n      path: \"source-url\",\n      dependencies: new Map(),\n      getSource: () => Buffer.from(\"\"),\n      inverseDependencies: new Set(),\n      output: [\n        {\n          type: \"js/script/virtual\",\n          data: {\n            code,\n            lineCount: countLines(code),\n            map: [],\n          },\n        },\n      ],\n    });\n  }\n\n  return output;\n}\n\nmodule.exports = getAppendScripts;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}