{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _ws = _interopRequireDefault(require(\"ws\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = function createWebsocketServer(_ref) {\n  var websocketServer = _ref.websocketServer;\n  var wss = new _ws.default.Server({\n    noServer: true\n  });\n  wss.on(\"connection\", function _callee(ws, req) {\n    var connected, url, sendFn, client;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            connected = true;\n            url = req.url;\n\n            sendFn = function sendFn() {\n              if (connected) {\n                ws.send.apply(ws, arguments);\n              }\n            };\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(websocketServer.onClientConnect(url, sendFn));\n\n          case 5:\n            client = _context.sent;\n\n            if (!(client == null)) {\n              _context.next = 9;\n              break;\n            }\n\n            ws.close();\n            return _context.abrupt(\"return\");\n\n          case 9:\n            ws.on(\"error\", function (e) {\n              websocketServer.onClientError && websocketServer.onClientError(client, e);\n            });\n            ws.on(\"close\", function () {\n              websocketServer.onClientDisconnect && websocketServer.onClientDisconnect(client);\n              connected = false;\n            });\n            ws.on(\"message\", function (message) {\n              websocketServer.onClientMessage && websocketServer.onClientMessage(client, message, sendFn);\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n  return wss;\n};","map":{"version":3,"names":["_ws","_interopRequireDefault","require","obj","__esModule","default","module","exports","createWebsocketServer","websocketServer","wss","Server","noServer","on","ws","req","connected","url","sendFn","send","onClientConnect","client","close","e","onClientError","onClientDisconnect","message","onClientMessage"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/lib/createWebsocketServer.js"],"sourcesContent":["\"use strict\";\n\nvar _ws = _interopRequireDefault(require(\"ws\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n/**\n * Returns a WebSocketServer to be attached to an existing HTTP instance. It forwards\n * the received events on the given \"websocketServer\" parameter. It must be an\n * object with the following fields:\n *\n *   - onClientConnect\n *   - onClientError\n *   - onClientMessage\n *   - onClientDisconnect\n */\nmodule.exports = function createWebsocketServer({ websocketServer }) {\n  const wss = new _ws.default.Server({\n    noServer: true,\n  });\n  wss.on(\"connection\", async (ws, req) => {\n    let connected = true;\n    const url = req.url;\n\n    const sendFn = (...args) => {\n      if (connected) {\n        ws.send(...args);\n      }\n    };\n\n    const client = await websocketServer.onClientConnect(url, sendFn);\n\n    if (client == null) {\n      ws.close();\n      return;\n    }\n\n    ws.on(\"error\", (e) => {\n      websocketServer.onClientError && websocketServer.onClientError(client, e);\n    });\n    ws.on(\"close\", () => {\n      websocketServer.onClientDisconnect &&\n        websocketServer.onClientDisconnect(client);\n      connected = false;\n    });\n    ws.on(\"message\", (message) => {\n      websocketServer.onClientMessage &&\n        websocketServer.onClientMessage(client, message, sendFn);\n    });\n  });\n  return wss;\n};\n"],"mappings":"AAAA;;;;AAEA,IAAIA,GAAG,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAhC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEE,OAAO,EAAEF;EAAX,CAArC;AACD;;AAsBDG,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,OAAoD;EAAA,IAAnBC,eAAmB,QAAnBA,eAAmB;EACnE,IAAMC,GAAG,GAAG,IAAIV,GAAG,CAACK,OAAJ,CAAYM,MAAhB,CAAuB;IACjCC,QAAQ,EAAE;EADuB,CAAvB,CAAZ;EAGAF,GAAG,CAACG,EAAJ,CAAO,YAAP,EAAqB,iBAAOC,EAAP,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YACfC,SADe,GACH,IADG;YAEbC,GAFa,GAEPF,GAAG,CAACE,GAFG;;YAIbC,MAJa,GAIJ,SAATA,MAAS,GAAa;cAC1B,IAAIF,SAAJ,EAAe;gBACbF,EAAE,CAACK,IAAH,OAAAL,EAAE,YAAF;cACD;YACF,CARkB;;YAAA;YAAA,iCAUEL,eAAe,CAACW,eAAhB,CAAgCH,GAAhC,EAAqCC,MAArC,CAVF;;UAAA;YAUbG,MAVa;;YAAA,MAYfA,MAAM,IAAI,IAZK;cAAA;cAAA;YAAA;;YAajBP,EAAE,CAACQ,KAAH;YAbiB;;UAAA;YAiBnBR,EAAE,CAACD,EAAH,CAAM,OAAN,EAAe,UAACU,CAAD,EAAO;cACpBd,eAAe,CAACe,aAAhB,IAAiCf,eAAe,CAACe,aAAhB,CAA8BH,MAA9B,EAAsCE,CAAtC,CAAjC;YACD,CAFD;YAGAT,EAAE,CAACD,EAAH,CAAM,OAAN,EAAe,YAAM;cACnBJ,eAAe,CAACgB,kBAAhB,IACEhB,eAAe,CAACgB,kBAAhB,CAAmCJ,MAAnC,CADF;cAEAL,SAAS,GAAG,KAAZ;YACD,CAJD;YAKAF,EAAE,CAACD,EAAH,CAAM,SAAN,EAAiB,UAACa,OAAD,EAAa;cAC5BjB,eAAe,CAACkB,eAAhB,IACElB,eAAe,CAACkB,eAAhB,CAAgCN,MAAhC,EAAwCK,OAAxC,EAAiDR,MAAjD,CADF;YAED,CAHD;;UAzBmB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArB;EA8BA,OAAOR,GAAP;AACD,CAnCD"},"metadata":{},"sourceType":"script"}