{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar HelloWorldError = function (_Error) {\n  _inherits(HelloWorldError, _Error);\n\n  var _super = _createSuper(HelloWorldError);\n\n  function HelloWorldError() {\n    _classCallCheck(this, HelloWorldError);\n\n    return _super.call(this, 'Project name shouldn\\'t contain \"HelloWorld\" name in it, because it is CLI\\'s default placeholder name.');\n  }\n\n  return _createClass(HelloWorldError);\n}(_wrapNativeSuper(Error));\n\nexports.default = HelloWorldError;","map":{"version":3,"sources":["../../../../src/commands/init/errors/HelloWorldError.ts"],"names":["constructor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAAe,e;;;;;EACbA,2BAAc;IAAA;;IAAA,yBACZ,yGADY;EAIb;;;mBALY,K","sourcesContent":["export default class HelloWorldError extends Error {\n  constructor() {\n    super(\n      'Project name shouldn\\'t contain \"HelloWorld\" name in it, because it is CLI\\'s default placeholder name.',\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}