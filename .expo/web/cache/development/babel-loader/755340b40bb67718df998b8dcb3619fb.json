{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _require = require(\"../cli-utils\"),\n    makeAsyncCommand = _require.makeAsyncCommand;\n\nvar MetroApi = require(\"../index\");\n\nvar TerminalReporter = require(\"../lib/TerminalReporter\");\n\nvar _require2 = require(\"metro-config\"),\n    loadConfig = _require2.loadConfig;\n\nvar _require3 = require(\"metro-core\"),\n    Terminal = _require3.Terminal;\n\nvar term = new Terminal(process.stdout);\nvar updateReporter = new TerminalReporter(term);\n\nmodule.exports = function () {\n  return {\n    command: \"build <entry>\",\n    description: \"Generates a JavaScript bundle containing the specified entrypoint and its descendants\",\n    builder: function builder(yargs) {\n      yargs.option(\"project-roots\", {\n        alias: \"P\",\n        type: \"string\",\n        array: true\n      });\n      yargs.option(\"out\", {\n        alias: \"O\",\n        type: \"string\",\n        demandOption: true\n      });\n      yargs.option(\"platform\", {\n        alias: \"p\",\n        type: \"string\"\n      });\n      yargs.option(\"output-type\", {\n        alias: \"t\",\n        type: \"string\"\n      });\n      yargs.option(\"max-workers\", {\n        alias: \"j\",\n        type: \"number\"\n      });\n      yargs.option(\"minify\", {\n        alias: \"z\",\n        type: \"boolean\"\n      });\n      yargs.option(\"dev\", {\n        alias: \"g\",\n        type: \"boolean\"\n      });\n      yargs.option(\"source-map\", {\n        type: \"boolean\"\n      });\n      yargs.option(\"source-map-url\", {\n        type: \"string\"\n      });\n      yargs.option(\"legacy-bundler\", {\n        type: \"boolean\"\n      });\n      yargs.option(\"config\", {\n        alias: \"c\",\n        type: \"string\"\n      });\n      yargs.option(\"reset-cache\", {\n        type: \"boolean\"\n      });\n    },\n    handler: makeAsyncCommand(function _callee(argv) {\n      var config, options;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(loadConfig(argv));\n\n            case 2:\n              config = _context.sent;\n              options = argv;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(MetroApi.runBuild(config, _objectSpread(_objectSpread({}, options), {}, {\n                onBegin: function onBegin() {\n                  updateReporter.update({\n                    buildID: \"$\",\n                    type: \"bundle_build_started\",\n                    bundleDetails: {\n                      bundleType: \"Bundle\",\n                      dev: !!options.dev,\n                      entryFile: options.entry,\n                      minify: !!options.minify,\n                      platform: options.platform,\n                      runtimeBytecodeVersion: null\n                    }\n                  });\n                },\n                onProgress: function onProgress(transformedFileCount, totalFileCount) {\n                  updateReporter.update({\n                    buildID: \"$\",\n                    type: \"bundle_transform_progressed\",\n                    transformedFileCount: transformedFileCount,\n                    totalFileCount: totalFileCount\n                  });\n                },\n                onComplete: function onComplete() {\n                  updateReporter.update({\n                    buildID: \"$\",\n                    type: \"bundle_build_done\"\n                  });\n                }\n              })));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })\n  };\n};","map":{"version":3,"names":["require","makeAsyncCommand","MetroApi","TerminalReporter","loadConfig","Terminal","term","process","stdout","updateReporter","module","exports","command","description","builder","yargs","option","alias","type","array","demandOption","handler","argv","config","options","runBuild","onBegin","update","buildID","bundleDetails","bundleType","dev","entryFile","entry","minify","platform","runtimeBytecodeVersion","onProgress","transformedFileCount","totalFileCount","onComplete"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/commands/build.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst { makeAsyncCommand } = require(\"../cli-utils\");\n\nconst MetroApi = require(\"../index\");\n\nconst TerminalReporter = require(\"../lib/TerminalReporter\");\n\nconst { loadConfig } = require(\"metro-config\");\n\nconst { Terminal } = require(\"metro-core\");\n\nconst term = new Terminal(process.stdout);\nconst updateReporter = new TerminalReporter(term);\n\nmodule.exports = () => ({\n  command: \"build <entry>\",\n  description:\n    \"Generates a JavaScript bundle containing the specified entrypoint and its descendants\",\n  builder: (yargs) => {\n    yargs.option(\"project-roots\", {\n      alias: \"P\",\n      type: \"string\",\n      array: true,\n    });\n    yargs.option(\"out\", {\n      alias: \"O\",\n      type: \"string\",\n      demandOption: true,\n    });\n    yargs.option(\"platform\", {\n      alias: \"p\",\n      type: \"string\",\n    });\n    yargs.option(\"output-type\", {\n      alias: \"t\",\n      type: \"string\",\n    });\n    yargs.option(\"max-workers\", {\n      alias: \"j\",\n      type: \"number\",\n    });\n    yargs.option(\"minify\", {\n      alias: \"z\",\n      type: \"boolean\",\n    });\n    yargs.option(\"dev\", {\n      alias: \"g\",\n      type: \"boolean\",\n    });\n    yargs.option(\"source-map\", {\n      type: \"boolean\",\n    });\n    yargs.option(\"source-map-url\", {\n      type: \"string\",\n    });\n    yargs.option(\"legacy-bundler\", {\n      type: \"boolean\",\n    });\n    yargs.option(\"config\", {\n      alias: \"c\",\n      type: \"string\",\n    }); // Deprecated\n\n    yargs.option(\"reset-cache\", {\n      type: \"boolean\",\n    });\n  },\n  handler: makeAsyncCommand(async (argv) => {\n    const config = await loadConfig(argv); // $FlowExpectedError YargArguments and RunBuildOptions are used interchangeable but their types are not yet compatible\n\n    const options = argv;\n    await MetroApi.runBuild(config, {\n      ...options,\n      onBegin: () => {\n        updateReporter.update({\n          buildID: \"$\",\n          type: \"bundle_build_started\",\n          bundleDetails: {\n            bundleType: \"Bundle\",\n            dev: !!options.dev,\n            entryFile: options.entry,\n            minify: !!options.minify,\n            platform: options.platform,\n            // Bytecode bundles in Metro are not meant for production use. Instead,\n            // the Hermes Bytecode Compiler should be invoked on the resulting JS bundle from Metro.\n            runtimeBytecodeVersion: null,\n          },\n        });\n      },\n      onProgress: (transformedFileCount, totalFileCount) => {\n        updateReporter.update({\n          buildID: \"$\",\n          type: \"bundle_transform_progressed\",\n          transformedFileCount,\n          totalFileCount,\n        });\n      },\n      onComplete: () => {\n        updateReporter.update({\n          buildID: \"$\",\n          type: \"bundle_build_done\",\n        });\n      },\n    });\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}