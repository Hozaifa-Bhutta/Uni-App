{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _downloadProfile = require(\"./downloadProfile\");\n\nfunction profileHermes(_ref, ctx, options) {\n  var _ref2, dstPath;\n\n  return _regeneratorRuntime.async(function profileHermes$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref2 = _slicedToArray(_ref, 1), dstPath = _ref2[0];\n          _context.prev = 1;\n\n          _cliTools().logger.info('Downloading a Hermes Sampling Profiler from your Android device...');\n\n          if (!options.filename) {\n            _cliTools().logger.info('No filename is provided, pulling latest file');\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap((0, _downloadProfile.downloadProfile)(ctx, dstPath, options.filename, options.sourcemapPath, options.raw, options.generateSourcemap, options.port, options.appId, options.appIdSuffix));\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          throw _context.t0;\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n}\n\nvar _default = {\n  name: 'profile-hermes [destinationDir]',\n  description: 'Pull and convert a Hermes tracing profile to Chrome tracing profile, then store it in the directory <destinationDir> of the local machine',\n  func: profileHermes,\n  options: [{\n    name: '--filename <string>',\n    description: 'File name of the profile to be downloaded, eg. sampling-profiler-trace8593107139682635366.cpuprofile'\n  }, {\n    name: '--raw',\n    description: 'Pulls the original Hermes tracing profile without any transformation'\n  }, {\n    name: '--sourcemap-path <string>',\n    description: 'The local path to your source map file, eg. /tmp/sourcemap.json'\n  }, {\n    name: '--generate-sourcemap',\n    description: 'Generates the JS bundle and source map'\n  }, {\n    name: '--port <number>',\n    default: \"\" + (process.env.RCT_METRO_PORT || 8081)\n  }, {\n    name: '--appId <string>',\n    description: 'Specify an applicationId to launch after build. If not specified, `package` from AndroidManifest.xml will be used.'\n  }, {\n    name: '--appIdSuffix <string>',\n    description: 'Specify an applicationIdSuffix to launch after build.'\n  }],\n  examples: [{\n    desc: 'Download the Hermes Sampling Profiler to the directory <destinationDir> on the local machine',\n    cmd: 'profile-hermes /tmp'\n  }]\n};\nexports.default = _default;","map":{"version":3,"sources":["../../src/profileHermes/index.ts"],"names":["logger","options","name","description","func","default","process","examples","desc","cmd"],"mappings":";;;;;;;;;;;AAAA,SAAA,SAAA,GAAA;EAAA,IAAA,IAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;EAAA,SAAA,GAAA,qBAAA;IAAA,OAAA,IAAA;EAAA,CAAA;;EAAA,OAAA,IAAA;AAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,qBAAA;;AAYA,SAAA,aAAA,OAAA,GAAA,EAAA,OAAA;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA,iCAAA,OAAA;UAAA;;UAMIA,SAAAA,GAAAA,MAAAA,CAAAA,IAAAA,CAAAA,oEAAAA;;UAGA,IAAI,CAACC,OAAO,CAAZ,QAAA,EAAuB;YACrBD,SAAAA,GAAAA,MAAAA,CAAAA,IAAAA,CAAAA,8CAAAA;UACD;;UAXL;UAAA,iCAYU,CAAA,GAAA,gBAAA,CAAA,eAAA,EAAA,GAAA,EAAA,OAAA,EAGJC,OAAO,CAHH,QAAA,EAIJA,OAAO,CAJH,aAAA,EAKJA,OAAO,CALH,GAAA,EAMJA,OAAO,CANH,iBAAA,EAOJA,OAAO,CAPH,IAAA,EAQJA,OAAO,CARH,KAAA,EASJA,OAAO,CATT,WAAM,CAZV;;QAAA;UAAA;UAAA;;QAAA;UAAA;UAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;eA4Be;EACbC,IAAI,EADS,iCAAA;EAEbC,WAAW,EAFE,2IAAA;EAIbC,IAAI,EAJS,aAAA;EAKbH,OAAO,EAAE,CACP;IACEC,IAAI,EADN,qBAAA;IAEEC,WAAW,EACT;EAHJ,CADO,EAMP;IACED,IAAI,EADN,OAAA;IAEEC,WAAW,EACT;EAHJ,CANO,EAWP;IACED,IAAI,EADN,2BAAA;IAEEC,WAAW,EACT;EAHJ,CAXO,EAgBP;IACED,IAAI,EADN,sBAAA;IAEEC,WAAW,EAAE;EAFf,CAhBO,EAoBP;IACED,IAAI,EADN,iBAAA;IAEEG,OAAO,QAAKC,OAAO,CAAPA,GAAAA,CAAAA,cAAAA,IAA8B,IAAnC;EAFT,CApBO,EAwBP;IACEJ,IAAI,EADN,kBAAA;IAEEC,WAAW,EACT;EAHJ,CAxBO,EA6BP;IACED,IAAI,EADN,wBAAA;IAEEC,WAAW,EAAE;EAFf,CA7BO,CALI;EAuCbI,QAAQ,EAAE,CACR;IACEC,IAAI,EADN,8FAAA;IAGEC,GAAG,EAAE;EAHP,CADQ;AAvCG,C","sourcesContent":["import {logger, CLIError} from '@react-native-community/cli-tools';\nimport {Config} from '@react-native-community/cli-types';\nimport {downloadProfile} from './downloadProfile';\n\ntype Options = {\n  filename?: string;\n  raw?: boolean;\n  sourcemapPath?: string;\n  generateSourcemap?: boolean;\n  port: string;\n  appId?: string;\n  appIdSuffix?: string;\n};\n\nasync function profileHermes(\n  [dstPath]: Array<string>,\n  ctx: Config,\n  options: Options,\n) {\n  try {\n    logger.info(\n      'Downloading a Hermes Sampling Profiler from your Android device...',\n    );\n    if (!options.filename) {\n      logger.info('No filename is provided, pulling latest file');\n    }\n    await downloadProfile(\n      ctx,\n      dstPath,\n      options.filename,\n      options.sourcemapPath,\n      options.raw,\n      options.generateSourcemap,\n      options.port,\n      options.appId,\n      options.appIdSuffix,\n    );\n  } catch (err) {\n    throw err as CLIError;\n  }\n}\n\nexport default {\n  name: 'profile-hermes [destinationDir]',\n  description:\n    'Pull and convert a Hermes tracing profile to Chrome tracing profile, then store it in the directory <destinationDir> of the local machine',\n  func: profileHermes,\n  options: [\n    {\n      name: '--filename <string>',\n      description:\n        'File name of the profile to be downloaded, eg. sampling-profiler-trace8593107139682635366.cpuprofile',\n    },\n    {\n      name: '--raw',\n      description:\n        'Pulls the original Hermes tracing profile without any transformation',\n    },\n    {\n      name: '--sourcemap-path <string>',\n      description:\n        'The local path to your source map file, eg. /tmp/sourcemap.json',\n    },\n    {\n      name: '--generate-sourcemap',\n      description: 'Generates the JS bundle and source map',\n    },\n    {\n      name: '--port <number>',\n      default: `${process.env.RCT_METRO_PORT || 8081}`,\n    },\n    {\n      name: '--appId <string>',\n      description:\n        'Specify an applicationId to launch after build. If not specified, `package` from AndroidManifest.xml will be used.',\n    },\n    {\n      name: '--appIdSuffix <string>',\n      description: 'Specify an applicationIdSuffix to launch after build.',\n    },\n  ],\n  examples: [\n    {\n      desc:\n        'Download the Hermes Sampling Profiler to the directory <destinationDir> on the local machine',\n      cmd: 'profile-hermes /tmp',\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"script"}