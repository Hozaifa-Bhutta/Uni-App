{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar Package = function () {\n  function Package(_ref) {\n    var file = _ref.file;\n\n    _classCallCheck(this, Package);\n\n    this.path = path.resolve(file);\n    this._root = path.dirname(this.path);\n    this._content = null;\n  }\n\n  _createClass(Package, [{\n    key: \"getMain\",\n    value: function getMain(mainFields) {\n      var json = this.read();\n      var main;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(mainFields), _step; !(_step = _iterator()).done;) {\n        var name = _step.value;\n\n        if (typeof json[name] === \"string\") {\n          main = json[name];\n          break;\n        }\n      }\n\n      if (!main) {\n        main = \"index\";\n      }\n\n      var replacements = getReplacements(json, mainFields);\n\n      if (replacements) {\n        var variants = [main];\n\n        if (main.slice(0, 2) === \"./\") {\n          variants.push(main.slice(2));\n        } else {\n          variants.push(\"./\" + main);\n        }\n\n        for (var _i = 0, _variants = variants; _i < _variants.length; _i++) {\n          var variant = _variants[_i];\n          var winner = replacements[variant] || replacements[variant + \".js\"] || replacements[variant + \".json\"] || replacements[variant.replace(/(\\.js|\\.json)$/, \"\")];\n\n          if (winner) {\n            main = winner;\n            break;\n          }\n        }\n      }\n\n      return path.join(this._root, main);\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      this._content = null;\n    }\n  }, {\n    key: \"redirectRequire\",\n    value: function redirectRequire(name, mainFields) {\n      var json = this.read();\n      var replacements = getReplacements(json, mainFields);\n\n      if (!replacements) {\n        return name;\n      }\n\n      if (!name.startsWith(\".\") && !path.isAbsolute(name)) {\n        var replacement = replacements[name];\n        return replacement === false ? false : replacement || name;\n      }\n\n      var relPath = \"./\" + path.relative(this._root, path.resolve(this._root, name));\n\n      if (path.sep !== \"/\") {\n        relPath = relPath.replace(new RegExp(\"\\\\\" + path.sep, \"g\"), \"/\");\n      }\n\n      var redirect = replacements[relPath];\n\n      if (redirect == null) {\n        redirect = replacements[relPath + \".js\"];\n\n        if (redirect == null) {\n          redirect = replacements[relPath + \".json\"];\n        }\n      }\n\n      if (redirect === false) {\n        return false;\n      }\n\n      if (redirect) {\n        return path.join(this._root, redirect);\n      }\n\n      return name;\n    }\n  }, {\n    key: \"read\",\n    value: function read() {\n      if (this._content == null) {\n        this._content = JSON.parse(fs.readFileSync(this.path, \"utf8\"));\n      }\n\n      return this._content;\n    }\n  }]);\n\n  return Package;\n}();\n\nfunction getReplacements(pkg, mainFields) {\n  var replacements = mainFields.map(function (name) {\n    if (!pkg[name] || typeof pkg[name] === \"string\") {\n      return null;\n    }\n\n    return pkg[name];\n  }).filter(Boolean);\n\n  if (!replacements.length) {\n    return null;\n  }\n\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(replacements.reverse())));\n}\n\nmodule.exports = Package;","map":{"version":3,"names":["fs","require","path","Package","file","resolve","_root","dirname","_content","mainFields","json","read","main","name","replacements","getReplacements","variants","slice","push","variant","winner","replace","join","startsWith","isAbsolute","replacement","relPath","relative","sep","RegExp","redirect","JSON","parse","readFileSync","pkg","map","filter","Boolean","length","Object","assign","reverse","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/node-haste/Package.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nclass Package {\n  constructor({ file }) {\n    this.path = path.resolve(file);\n    this._root = path.dirname(this.path);\n    this._content = null;\n  }\n  /**\n   * The `browser` field and replacement behavior is specified in\n   * https://github.com/defunctzombie/package-browser-field-spec.\n   */\n\n  getMain(mainFields) {\n    const json = this.read();\n    let main;\n\n    for (const name of mainFields) {\n      if (typeof json[name] === \"string\") {\n        main = json[name];\n        break;\n      }\n    } // flowlint-next-line sketchy-null-string:off\n\n    if (!main) {\n      main = \"index\";\n    }\n\n    const replacements = getReplacements(json, mainFields);\n\n    if (replacements) {\n      const variants = [main];\n\n      if (main.slice(0, 2) === \"./\") {\n        variants.push(main.slice(2));\n      } else {\n        variants.push(\"./\" + main);\n      }\n\n      for (const variant of variants) {\n        const winner =\n          replacements[variant] ||\n          replacements[variant + \".js\"] ||\n          replacements[variant + \".json\"] ||\n          replacements[variant.replace(/(\\.js|\\.json)$/, \"\")];\n\n        if (winner) {\n          main = winner;\n          break;\n        }\n      }\n    }\n    /* $FlowFixMe: `getReplacements` doesn't validate the return value. */\n\n    return path.join(this._root, main);\n  }\n\n  invalidate() {\n    this._content = null;\n  }\n\n  redirectRequire(name, mainFields) {\n    const json = this.read();\n    const replacements = getReplacements(json, mainFields);\n\n    if (!replacements) {\n      return name;\n    }\n\n    if (!name.startsWith(\".\") && !path.isAbsolute(name)) {\n      const replacement = replacements[name]; // support exclude with \"someDependency\": false\n\n      return replacement === false ? false : replacement || name;\n    }\n\n    let relPath =\n      \"./\" + path.relative(this._root, path.resolve(this._root, name));\n\n    if (path.sep !== \"/\") {\n      relPath = relPath.replace(new RegExp(\"\\\\\" + path.sep, \"g\"), \"/\");\n    }\n\n    let redirect = replacements[relPath]; // false is a valid value\n\n    if (redirect == null) {\n      redirect = replacements[relPath + \".js\"];\n\n      if (redirect == null) {\n        redirect = replacements[relPath + \".json\"];\n      }\n    } // support exclude with \"./someFile\": false\n\n    if (redirect === false) {\n      return false;\n    }\n\n    if (redirect) {\n      return path.join(this._root, redirect);\n    }\n\n    return name;\n  }\n\n  read() {\n    if (this._content == null) {\n      this._content = JSON.parse(fs.readFileSync(this.path, \"utf8\"));\n    }\n\n    return this._content;\n  }\n}\n\nfunction getReplacements(pkg, mainFields) {\n  const replacements = mainFields\n    .map((name) => {\n      // If the field is a string, that doesn't mean we want to redirect the\n      //  `main` file itself to anything else. See the spec.\n      if (!pkg[name] || typeof pkg[name] === \"string\") {\n        return null;\n      }\n\n      return pkg[name];\n    })\n    .filter(Boolean);\n\n  if (!replacements.length) {\n    return null;\n  }\n\n  return Object.assign({}, ...replacements.reverse());\n}\n\nmodule.exports = Package;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}