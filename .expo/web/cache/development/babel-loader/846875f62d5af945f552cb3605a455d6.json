{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar mkdir = require(\"../mkdirs\");\n\nvar remove = require(\"../remove\");\n\nfunction emptyDir(dir, callback) {\n  callback = callback || function () {};\n\n  fs.readdir(dir, function (err, items) {\n    if (err) return mkdir.mkdirs(dir, callback);\n    items = items.map(function (item) {\n      return path.join(dir, item);\n    });\n    deleteItem();\n\n    function deleteItem() {\n      var item = items.pop();\n      if (!item) return callback();\n      remove.remove(item, function (err) {\n        if (err) return callback(err);\n        deleteItem();\n      });\n    }\n  });\n}\n\nfunction emptyDirSync(dir) {\n  var items;\n\n  try {\n    items = fs.readdirSync(dir);\n  } catch (err) {\n    return mkdir.mkdirsSync(dir);\n  }\n\n  items.forEach(function (item) {\n    item = path.join(dir, item);\n    remove.removeSync(item);\n  });\n}\n\nmodule.exports = {\n  emptyDirSync: emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir: emptyDir,\n  emptydir: emptyDir\n};","map":{"version":3,"names":["fs","require","path","mkdir","remove","emptyDir","dir","callback","readdir","err","items","mkdirs","map","item","join","deleteItem","pop","emptyDirSync","readdirSync","mkdirsSync","forEach","removeSync","module","exports","emptydirSync","emptydir"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/fs-extra/lib/empty/index.js"],"sourcesContent":["var fs = require('fs')\nvar path = require('path')\nvar mkdir = require('../mkdirs')\nvar remove = require('../remove')\n\nfunction emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, function (err, items) {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(function (item) {\n      return path.join(dir, item)\n    })\n\n    deleteItem()\n\n    function deleteItem () {\n      var item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, function (err) {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n}\n\nfunction emptyDirSync (dir) {\n  var items\n  try {\n    items = fs.readdirSync(dir)\n  } catch (err) {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(function (item) {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync: emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir: emptyDir,\n  emptydir: emptyDir\n}\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,KAAK,GAAGF,OAAO,aAAnB;;AACA,IAAIG,MAAM,GAAGH,OAAO,aAApB;;AAEA,SAASI,QAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;EAChCA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;EACAP,EAAE,CAACQ,OAAH,CAAWF,GAAX,EAAgB,UAAUG,GAAV,EAAeC,KAAf,EAAsB;IACpC,IAAID,GAAJ,EAAS,OAAON,KAAK,CAACQ,MAAN,CAAaL,GAAb,EAAkBC,QAAlB,CAAP;IAETG,KAAK,GAAGA,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgB;MAChC,OAAOX,IAAI,CAACY,IAAL,CAAUR,GAAV,EAAeO,IAAf,CAAP;IACD,CAFO,CAAR;IAIAE,UAAU;;IAEV,SAASA,UAAT,GAAuB;MACrB,IAAIF,IAAI,GAAGH,KAAK,CAACM,GAAN,EAAX;MACA,IAAI,CAACH,IAAL,EAAW,OAAON,QAAQ,EAAf;MACXH,MAAM,CAACA,MAAP,CAAcS,IAAd,EAAoB,UAAUJ,GAAV,EAAe;QACjC,IAAIA,GAAJ,EAAS,OAAOF,QAAQ,CAACE,GAAD,CAAf;QACTM,UAAU;MACX,CAHD;IAID;EACF,CAjBD;AAkBD;;AAED,SAASE,YAAT,CAAuBX,GAAvB,EAA4B;EAC1B,IAAII,KAAJ;;EACA,IAAI;IACFA,KAAK,GAAGV,EAAE,CAACkB,WAAH,CAAeZ,GAAf,CAAR;EACD,CAFD,CAEE,OAAOG,GAAP,EAAY;IACZ,OAAON,KAAK,CAACgB,UAAN,CAAiBb,GAAjB,CAAP;EACD;;EAEDI,KAAK,CAACU,OAAN,CAAc,UAAUP,IAAV,EAAgB;IAC5BA,IAAI,GAAGX,IAAI,CAACY,IAAL,CAAUR,GAAV,EAAeO,IAAf,CAAP;IACAT,MAAM,CAACiB,UAAP,CAAkBR,IAAlB;EACD,CAHD;AAID;;AAEDS,MAAM,CAACC,OAAP,GAAiB;EACfN,YAAY,EAAEA,YADC;EAEfO,YAAY,EAAEP,YAFC;EAGfZ,QAAQ,EAAEA,QAHK;EAIfoB,QAAQ,EAAEpB;AAJK,CAAjB"},"metadata":{},"sourceType":"script"}