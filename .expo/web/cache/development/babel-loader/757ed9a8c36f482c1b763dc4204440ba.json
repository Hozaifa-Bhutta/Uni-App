{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _marked = _regeneratorRuntime.mark(filter);\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar babylon = require(\"@babel/parser\");\n\nvar template = require(\"@babel/template\").default;\n\nvar babelTypes = require(\"@babel/types\");\n\nvar nullthrows = require(\"nullthrows\");\n\nvar assetPropertyBlockList = new Set([\"files\", \"fileSystemLocation\", \"path\"]);\n\nfunction generateAssetCodeFileAst(assetRegistryPath, assetDescriptor) {\n  var properDescriptor = filterObject(assetDescriptor, assetPropertyBlockList);\n  var descriptorAst = babylon.parseExpression(JSON.stringify(properDescriptor));\n  var t = babelTypes;\n  var buildRequire = template.statement(\"\\n    module.exports = require(ASSET_REGISTRY_PATH).registerAsset(DESCRIPTOR_AST)\\n  \");\n  return t.file(t.program([buildRequire({\n    ASSET_REGISTRY_PATH: t.stringLiteral(assetRegistryPath),\n    DESCRIPTOR_AST: descriptorAst\n  })]));\n}\n\nfunction generateRemoteAssetCodeFileAst(assetUtilsPath, assetDescriptor, remoteServer, remoteFileMap) {\n  var t = babelTypes;\n  var file = remoteFileMap[assetDescriptor.fileSystemLocation];\n  var descriptor = file && file[assetDescriptor.name];\n  var data = {};\n\n  if (!descriptor) {\n    return null;\n  }\n\n  for (var scale in descriptor) {\n    data[+scale] = descriptor[+scale].handle;\n  }\n\n  var astData = babylon.parseExpression(JSON.stringify(data));\n  var URI = t.stringLiteral(remoteServer);\n  var WIDTH = t.numericLiteral(nullthrows(assetDescriptor.width));\n  var HEIGHT = t.numericLiteral(nullthrows(assetDescriptor.height));\n  var buildRequire = template.program(\"\\n    const {pickScale, getUrlCacheBreaker}= require(ASSET_UTILS_PATH);\\n    module.exports = {\\n      \\\"width\\\": WIDTH,\\n      \\\"height\\\": HEIGHT,\\n      \\\"uri\\\": URI + OBJECT_AST[pickScale(SCALE_ARRAY)] + getUrlCacheBreaker()\\n    };\\n  \");\n  return t.file(buildRequire({\n    WIDTH: WIDTH,\n    HEIGHT: HEIGHT,\n    URI: URI,\n    OBJECT_AST: astData,\n    ASSET_UTILS_PATH: t.stringLiteral(assetUtilsPath),\n    SCALE_ARRAY: t.arrayExpression(Object.keys(descriptor).map(Number).sort(function (a, b) {\n      return a - b;\n    }).map(function (scale) {\n      return t.numericLiteral(scale);\n    }))\n  }));\n}\n\nfunction isAssetTypeAnImage(type) {\n  return [\"png\", \"jpg\", \"jpeg\", \"bmp\", \"gif\", \"webp\", \"psd\", \"svg\", \"tiff\"].indexOf(type) !== -1;\n}\n\nfunction filterObject(object, blockList) {\n  var copied = _extends({}, object);\n\n  for (var _iterator = _createForOfIteratorHelperLoose(blockList), _step; !(_step = _iterator()).done;) {\n    var key = _step.value;\n    delete copied[key];\n  }\n\n  return copied;\n}\n\nfunction createRamBundleGroups(ramGroups, groupableModules, subtree) {\n  var byPath = new Map();\n  var byId = new Map();\n  groupableModules.forEach(function (m) {\n    byPath.set(m.sourcePath, m);\n    byId.set(m.id, m.sourcePath);\n  });\n  var result = new Map(ramGroups.map(function (modulePath) {\n    var root = byPath.get(modulePath);\n\n    if (root == null) {\n      throw Error(\"Group root \" + modulePath + \" is not part of the bundle\");\n    }\n\n    return [root.id, new Set(subtree(root, byPath))];\n  }));\n\n  if (ramGroups.length > 1) {\n    var all = new ArrayMap();\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(result), _step2; !(_step2 = _iterator2()).done;) {\n      var _ref = _step2.value;\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var parent = _ref2[0];\n      var children = _ref2[1];\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(children), _step4; !(_step4 = _iterator4()).done;) {\n        var _module = _step4.value;\n        all.get(_module).push(parent);\n      }\n    }\n\n    var doubles = filter(all, function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          parents = _ref4[1];\n\n      return parents.length > 1;\n    });\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(doubles), _step3; !(_step3 = _iterator3()).done;) {\n      var _ref5 = _step3.value;\n\n      var _ref6 = _slicedToArray(_ref5, 2);\n\n      var moduleId = _ref6[0];\n      var parents = _ref6[1];\n      var parentNames = parents.map(byId.get, byId);\n      var lastName = parentNames.pop();\n      throw new Error(\"Module \" + (byId.get(moduleId) || moduleId) + \" belongs to groups \" + parentNames.join(\", \") + \", and \" + String(lastName) + \". Ensure that each module is only part of one group.\");\n    }\n  }\n\n  return result;\n}\n\nfunction filter(iterator, predicate) {\n  var _iterator5, _step5, value;\n\n  return _regeneratorRuntime.wrap(function filter$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _iterator5 = _createForOfIteratorHelperLoose(iterator);\n\n        case 1:\n          if ((_step5 = _iterator5()).done) {\n            _context.next = 8;\n            break;\n          }\n\n          value = _step5.value;\n\n          if (!predicate(value)) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 6;\n          return value;\n\n        case 6:\n          _context.next = 1;\n          break;\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar ArrayMap = function (_Map) {\n  _inherits(ArrayMap, _Map);\n\n  var _super = _createSuper(ArrayMap);\n\n  function ArrayMap() {\n    _classCallCheck(this, ArrayMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ArrayMap, [{\n    key: \"get\",\n    value: function get(key) {\n      var array = _get(_getPrototypeOf(ArrayMap.prototype), \"get\", this).call(this, key);\n\n      if (!array) {\n        array = [];\n        this.set(key, array);\n      }\n\n      return array;\n    }\n  }]);\n\n  return ArrayMap;\n}(_wrapNativeSuper(Map));\n\nmodule.exports = {\n  createRamBundleGroups: createRamBundleGroups,\n  generateAssetCodeFileAst: generateAssetCodeFileAst,\n  generateRemoteAssetCodeFileAst: generateRemoteAssetCodeFileAst,\n  isAssetTypeAnImage: isAssetTypeAnImage\n};","map":{"version":3,"names":["filter","babylon","require","template","default","babelTypes","nullthrows","assetPropertyBlockList","Set","generateAssetCodeFileAst","assetRegistryPath","assetDescriptor","properDescriptor","filterObject","descriptorAst","parseExpression","JSON","stringify","t","buildRequire","statement","file","program","ASSET_REGISTRY_PATH","stringLiteral","DESCRIPTOR_AST","generateRemoteAssetCodeFileAst","assetUtilsPath","remoteServer","remoteFileMap","fileSystemLocation","descriptor","name","data","scale","handle","astData","URI","WIDTH","numericLiteral","width","HEIGHT","height","OBJECT_AST","ASSET_UTILS_PATH","SCALE_ARRAY","arrayExpression","Object","keys","map","Number","sort","a","b","isAssetTypeAnImage","type","indexOf","object","blockList","copied","key","createRamBundleGroups","ramGroups","groupableModules","subtree","byPath","Map","byId","forEach","m","set","sourcePath","id","result","modulePath","root","get","Error","length","all","ArrayMap","parent","children","module","push","doubles","parents","moduleId","parentNames","lastName","pop","join","String","iterator","predicate","value","array","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/Bundler/util.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst babylon = require(\"@babel/parser\");\n\nconst template = require(\"@babel/template\").default;\n\nconst babelTypes = require(\"@babel/types\");\n\nconst nullthrows = require(\"nullthrows\"); // Structure of the object: dir.name.scale = asset\n\nconst assetPropertyBlockList = new Set([\"files\", \"fileSystemLocation\", \"path\"]);\n\nfunction generateAssetCodeFileAst(assetRegistryPath, assetDescriptor) {\n  const properDescriptor = filterObject(\n    assetDescriptor,\n    assetPropertyBlockList\n  ); // {...}\n\n  const descriptorAst = babylon.parseExpression(\n    JSON.stringify(properDescriptor)\n  );\n  const t = babelTypes; // require('AssetRegistry').registerAsset({...})\n\n  const buildRequire = template.statement(`\n    module.exports = require(ASSET_REGISTRY_PATH).registerAsset(DESCRIPTOR_AST)\n  `);\n  return t.file(\n    t.program([\n      buildRequire({\n        ASSET_REGISTRY_PATH: t.stringLiteral(assetRegistryPath),\n        DESCRIPTOR_AST: descriptorAst,\n      }),\n    ])\n  );\n}\n/**\n * Generates the code involved in requiring an asset, but to be loaded remotely.\n * If the asset cannot be found within the map, then it falls back to the\n * standard asset.\n */\n\nfunction generateRemoteAssetCodeFileAst(\n  assetUtilsPath,\n  assetDescriptor,\n  remoteServer,\n  remoteFileMap\n) {\n  const t = babelTypes;\n  const file = remoteFileMap[assetDescriptor.fileSystemLocation];\n  const descriptor = file && file[assetDescriptor.name];\n  const data = {};\n\n  if (!descriptor) {\n    return null;\n  }\n\n  for (const scale in descriptor) {\n    data[+scale] = descriptor[+scale].handle;\n  } // {2: 'path/to/image@2x', 3: 'path/to/image@3x', ...}\n\n  const astData = babylon.parseExpression(JSON.stringify(data)); // URI to remote server\n\n  const URI = t.stringLiteral(remoteServer); // Size numbers.\n\n  const WIDTH = t.numericLiteral(nullthrows(assetDescriptor.width));\n  const HEIGHT = t.numericLiteral(nullthrows(assetDescriptor.height));\n  const buildRequire = template.program(`\n    const {pickScale, getUrlCacheBreaker}= require(ASSET_UTILS_PATH);\n    module.exports = {\n      \"width\": WIDTH,\n      \"height\": HEIGHT,\n      \"uri\": URI + OBJECT_AST[pickScale(SCALE_ARRAY)] + getUrlCacheBreaker()\n    };\n  `);\n  return t.file(\n    buildRequire({\n      WIDTH,\n      HEIGHT,\n      URI,\n      OBJECT_AST: astData,\n      ASSET_UTILS_PATH: t.stringLiteral(assetUtilsPath),\n      SCALE_ARRAY: t.arrayExpression(\n        Object.keys(descriptor)\n          .map(Number)\n          .sort((a, b) => a - b)\n          .map((scale) => t.numericLiteral(scale))\n      ),\n    })\n  );\n} // Test extension against all types supported by image-size module.\n// If it's not one of these, we won't treat it as an image.\n\nfunction isAssetTypeAnImage(type) {\n  return (\n    [\"png\", \"jpg\", \"jpeg\", \"bmp\", \"gif\", \"webp\", \"psd\", \"svg\", \"tiff\"].indexOf(\n      type\n    ) !== -1\n  );\n}\n\nfunction filterObject(object, blockList) {\n  const copied = Object.assign({}, object);\n\n  for (const key of blockList) {\n    delete copied[key];\n  }\n\n  return copied;\n}\n\nfunction createRamBundleGroups(ramGroups, groupableModules, subtree) {\n  // build two maps that allow to lookup module data\n  // by path or (numeric) module id;\n  const byPath = new Map();\n  const byId = new Map();\n  groupableModules.forEach((m) => {\n    byPath.set(m.sourcePath, m);\n    byId.set(m.id, m.sourcePath);\n  }); // build a map of group root IDs to an array of module IDs in the group\n\n  const result = new Map(\n    ramGroups.map((modulePath) => {\n      const root = byPath.get(modulePath);\n\n      if (root == null) {\n        throw Error(`Group root ${modulePath} is not part of the bundle`);\n      }\n\n      return [\n        root.id, // `subtree` yields the IDs of all transitive dependencies of a module\n        new Set(subtree(root, byPath)),\n      ];\n    })\n  );\n\n  if (ramGroups.length > 1) {\n    // build a map of all grouped module IDs to an array of group root IDs\n    const all = new ArrayMap();\n\n    for (const [parent, children] of result) {\n      for (const module of children) {\n        all.get(module).push(parent);\n      }\n    } // find all module IDs that are part of more than one group\n\n    const doubles = filter(all, ([, parents]) => parents.length > 1);\n\n    for (const [moduleId, parents] of doubles) {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      const parentNames = parents.map(byId.get, byId);\n      const lastName = parentNames.pop();\n      throw new Error(\n        `Module ${\n          byId.get(moduleId) || moduleId\n        } belongs to groups ${parentNames.join(\", \")}, and ${String(\n          lastName\n        )}. Ensure that each module is only part of one group.`\n      );\n    }\n  }\n\n  return result;\n}\n\nfunction* filter(iterator, predicate) {\n  for (const value of iterator) {\n    if (predicate(value)) {\n      yield value;\n    }\n  }\n}\n\nclass ArrayMap extends Map {\n  get(key) {\n    let array = super.get(key);\n\n    if (!array) {\n      array = [];\n      this.set(key, array);\n    }\n\n    return array;\n  }\n}\n\nmodule.exports = {\n  createRamBundleGroups,\n  generateAssetCodeFileAst,\n  generateRemoteAssetCodeFileAst,\n  isAssetTypeAnImage,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}