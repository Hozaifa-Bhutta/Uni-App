{"ast":null,"code":"\"use strict\";\n\nvar VERSION = require(\"../../package.json\").version;\n\nvar crypto = require(\"crypto\");\n\nvar getCacheKey = require(\"metro-cache-key\");\n\nfunction getTransformCacheKey(opts) {\n  var _opts$transformerConf = opts.transformerConfig,\n      transformerPath = _opts$transformerConf.transformerPath,\n      transformerConfig = _opts$transformerConf.transformerConfig;\n\n  var Transformer = require.call(null, transformerPath);\n\n  var transformerKey = Transformer.getCacheKey ? Transformer.getCacheKey(transformerConfig) : \"\";\n  return crypto.createHash(\"sha1\").update([\"metro-cache\", VERSION, opts.cacheVersion, getCacheKey([require.resolve(transformerPath)]), transformerKey, transformerConfig.globalPrefix].join(\"$\")).digest(\"hex\");\n}\n\nmodule.exports = getTransformCacheKey;","map":{"version":3,"names":["VERSION","require","version","crypto","getCacheKey","getTransformCacheKey","opts","transformerConfig","transformerPath","Transformer","call","transformerKey","createHash","update","cacheVersion","resolve","globalPrefix","join","digest","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro/src/DeltaBundler/getTransformCacheKey.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst VERSION = require(\"../../package.json\").version;\n\nconst crypto = require(\"crypto\");\n\nconst getCacheKey = require(\"metro-cache-key\");\n\nfunction getTransformCacheKey(opts) {\n  const { transformerPath, transformerConfig } = opts.transformerConfig; // eslint-disable-next-line no-useless-call\n\n  const Transformer = require.call(null, transformerPath);\n\n  const transformerKey = Transformer.getCacheKey\n    ? Transformer.getCacheKey(transformerConfig)\n    : \"\";\n  return crypto\n    .createHash(\"sha1\")\n    .update(\n      [\n        \"metro-cache\",\n        VERSION,\n        opts.cacheVersion,\n        getCacheKey([require.resolve(transformerPath)]),\n        transformerKey,\n        transformerConfig.globalPrefix,\n      ].join(\"$\")\n    )\n    .digest(\"hex\");\n}\n\nmodule.exports = getTransformCacheKey;\n"],"mappings":"AASA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,sBAAP,CAA8BC,OAA9C;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMG,WAAW,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AAEA,SAASI,oBAAT,CAA8BC,IAA9B,EAAoC;EAClC,4BAA+CA,IAAI,CAACC,iBAApD;EAAA,IAAQC,eAAR,yBAAQA,eAAR;EAAA,IAAyBD,iBAAzB,yBAAyBA,iBAAzB;;EAEA,IAAME,WAAW,GAAGR,OAAO,CAACS,IAAR,CAAa,IAAb,EAAmBF,eAAnB,CAApB;;EAEA,IAAMG,cAAc,GAAGF,WAAW,CAACL,WAAZ,GACnBK,WAAW,CAACL,WAAZ,CAAwBG,iBAAxB,CADmB,GAEnB,EAFJ;EAGA,OAAOJ,MAAM,CACVS,UADI,CACO,MADP,EAEJC,MAFI,CAGH,CACE,aADF,EAEEb,OAFF,EAGEM,IAAI,CAACQ,YAHP,EAIEV,WAAW,CAAC,CAACH,OAAO,CAACc,OAAR,CAAgBP,eAAhB,CAAD,CAAD,CAJb,EAKEG,cALF,EAMEJ,iBAAiB,CAACS,YANpB,EAOEC,IAPF,CAOO,GAPP,CAHG,EAYJC,MAZI,CAYG,KAZH,CAAP;AAaD;;AAEDC,MAAM,CAACC,OAAP,GAAiBf,oBAAjB"},"metadata":{},"sourceType":"script"}