{"ast":null,"code":"\"use strict\";\n\nvar importMap = new Map([[\"ReactNative\", \"react-native\"]]);\n\nfunction createInlinePlatformChecks(t) {\n  var requireName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"require\";\n  var isIdentifier = t.isIdentifier,\n      isStringLiteral = t.isStringLiteral,\n      isNumericLiteral = t.isNumericLiteral,\n      isMemberExpression = t.isMemberExpression,\n      isCallExpression = t.isCallExpression;\n\n  var isPlatformNode = function isPlatformNode(node, scope, isWrappedModule) {\n    return isPlatformOS(node, scope, isWrappedModule) || isReactPlatformOS(node, scope, isWrappedModule);\n  };\n\n  var isPlatformSelectNode = function isPlatformSelectNode(node, scope, isWrappedModule) {\n    return isPlatformSelect(node, scope, isWrappedModule) || isReactPlatformSelect(node, scope, isWrappedModule);\n  };\n\n  var isPlatformOS = function isPlatformOS(node, scope, isWrappedModule) {\n    return isIdentifier(node.property, {\n      name: \"OS\"\n    }) && isImportOrGlobal(node.object, scope, [{\n      name: \"Platform\"\n    }], isWrappedModule);\n  };\n\n  var isReactPlatformOS = function isReactPlatformOS(node, scope, isWrappedModule) {\n    return isIdentifier(node.property, {\n      name: \"OS\"\n    }) && isMemberExpression(node.object) && isIdentifier(node.object.property, {\n      name: \"Platform\"\n    }) && isImportOrGlobal(node.object.object, scope, [{\n      name: \"React\"\n    }, {\n      name: \"ReactNative\"\n    }], isWrappedModule);\n  };\n\n  var isPlatformSelect = function isPlatformSelect(node, scope, isWrappedModule) {\n    return isMemberExpression(node.callee) && isIdentifier(node.callee.property, {\n      name: \"select\"\n    }) && isImportOrGlobal(node.callee.object, scope, [{\n      name: \"Platform\"\n    }], isWrappedModule);\n  };\n\n  var isReactPlatformSelect = function isReactPlatformSelect(node, scope, isWrappedModule) {\n    return isMemberExpression(node.callee) && isIdentifier(node.callee.property, {\n      name: \"select\"\n    }) && isMemberExpression(node.callee.object) && isIdentifier(node.callee.object.property, {\n      name: \"Platform\"\n    }) && isImportOrGlobal(node.callee.object.object, scope, [{\n      name: \"React\"\n    }, {\n      name: \"ReactNative\"\n    }], isWrappedModule);\n  };\n\n  var isGlobal = function isGlobal(binding) {\n    return !binding;\n  };\n\n  var isRequireCall = function isRequireCall(node, dependencyId, scope) {\n    return isCallExpression(node) && isIdentifier(node.callee, {\n      name: requireName\n    }) && checkRequireArgs(node.arguments, dependencyId);\n  };\n\n  var isImport = function isImport(node, scope, patterns) {\n    return patterns.some(function (pattern) {\n      var importName = importMap.get(pattern.name) || pattern.name;\n      return isRequireCall(node, importName, scope);\n    });\n  };\n\n  var isImportOrGlobal = function isImportOrGlobal(node, scope, patterns, isWrappedModule) {\n    var identifier = patterns.find(function (pattern) {\n      return isIdentifier(node, pattern);\n    });\n    return !!identifier && isToplevelBinding(scope.getBinding(identifier.name), isWrappedModule) || isImport(node, scope, patterns);\n  };\n\n  var checkRequireArgs = function checkRequireArgs(args, dependencyId) {\n    var pattern = t.stringLiteral(dependencyId);\n    return isStringLiteral(args[0], pattern) || isMemberExpression(args[0]) && isNumericLiteral(args[0].property) && isStringLiteral(args[1], pattern);\n  };\n\n  var isToplevelBinding = function isToplevelBinding(binding, isWrappedModule) {\n    return isGlobal(binding) || !binding.scope.parent || isWrappedModule && !binding.scope.parent.parent;\n  };\n\n  return {\n    isPlatformNode: isPlatformNode,\n    isPlatformSelectNode: isPlatformSelectNode\n  };\n}\n\nmodule.exports = createInlinePlatformChecks;","map":{"version":3,"names":["importMap","Map","createInlinePlatformChecks","t","requireName","isIdentifier","isStringLiteral","isNumericLiteral","isMemberExpression","isCallExpression","isPlatformNode","node","scope","isWrappedModule","isPlatformOS","isReactPlatformOS","isPlatformSelectNode","isPlatformSelect","isReactPlatformSelect","property","name","isImportOrGlobal","object","callee","isGlobal","binding","isRequireCall","dependencyId","checkRequireArgs","arguments","isImport","patterns","some","pattern","importName","get","identifier","find","isToplevelBinding","getBinding","args","stringLiteral","parent","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-transform-plugins/src/utils/createInlinePlatformChecks.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\n// Type only import. No runtime dependency\n// eslint-disable-next-line import/no-extraneous-dependencies\nconst importMap = new Map([[\"ReactNative\", \"react-native\"]]);\n\nfunction createInlinePlatformChecks(t, requireName = \"require\") {\n  const {\n    isIdentifier,\n    isStringLiteral,\n    isNumericLiteral,\n    isMemberExpression,\n    isCallExpression,\n  } = t;\n\n  const isPlatformNode = (node, scope, isWrappedModule) =>\n    isPlatformOS(node, scope, isWrappedModule) ||\n    isReactPlatformOS(node, scope, isWrappedModule);\n\n  const isPlatformSelectNode = (node, scope, isWrappedModule) =>\n    isPlatformSelect(node, scope, isWrappedModule) ||\n    isReactPlatformSelect(node, scope, isWrappedModule);\n\n  const isPlatformOS = (node, scope, isWrappedModule) =>\n    isIdentifier(node.property, {\n      name: \"OS\",\n    }) &&\n    isImportOrGlobal(\n      node.object,\n      scope,\n      [\n        {\n          name: \"Platform\",\n        },\n      ],\n      isWrappedModule\n    );\n\n  const isReactPlatformOS = (node, scope, isWrappedModule) =>\n    isIdentifier(node.property, {\n      name: \"OS\",\n    }) &&\n    isMemberExpression(node.object) &&\n    isIdentifier(node.object.property, {\n      name: \"Platform\",\n    }) &&\n    isImportOrGlobal(\n      node.object.object,\n      scope,\n      [\n        {\n          name: \"React\",\n        },\n        {\n          name: \"ReactNative\",\n        },\n      ],\n      isWrappedModule\n    );\n\n  const isPlatformSelect = (node, scope, isWrappedModule) =>\n    isMemberExpression(node.callee) &&\n    isIdentifier(node.callee.property, {\n      name: \"select\",\n    }) &&\n    isImportOrGlobal(\n      node.callee.object,\n      scope,\n      [\n        {\n          name: \"Platform\",\n        },\n      ],\n      isWrappedModule\n    );\n\n  const isReactPlatformSelect = (node, scope, isWrappedModule) =>\n    isMemberExpression(node.callee) &&\n    isIdentifier(node.callee.property, {\n      name: \"select\",\n    }) &&\n    isMemberExpression(node.callee.object) &&\n    isIdentifier(node.callee.object.property, {\n      name: \"Platform\",\n    }) &&\n    isImportOrGlobal(\n      node.callee.object.object,\n      scope,\n      [\n        {\n          name: \"React\",\n        },\n        {\n          name: \"ReactNative\",\n        },\n      ],\n      isWrappedModule\n    );\n\n  const isGlobal = (binding) => !binding;\n\n  const isRequireCall = (node, dependencyId, scope) =>\n    isCallExpression(node) &&\n    isIdentifier(node.callee, {\n      name: requireName,\n    }) &&\n    checkRequireArgs(node.arguments, dependencyId);\n\n  const isImport = (node, scope, patterns) =>\n    patterns.some((pattern) => {\n      const importName = importMap.get(pattern.name) || pattern.name;\n      return isRequireCall(node, importName, scope);\n    });\n\n  const isImportOrGlobal = (node, scope, patterns, isWrappedModule) => {\n    const identifier = patterns.find((pattern) => isIdentifier(node, pattern));\n    return (\n      (!!identifier &&\n        isToplevelBinding(\n          scope.getBinding(identifier.name),\n          isWrappedModule\n        )) ||\n      isImport(node, scope, patterns)\n    );\n  };\n\n  const checkRequireArgs = (args, dependencyId) => {\n    const pattern = t.stringLiteral(dependencyId);\n    return (\n      isStringLiteral(args[0], pattern) ||\n      (isMemberExpression(args[0]) &&\n        isNumericLiteral(args[0].property) &&\n        isStringLiteral(args[1], pattern))\n    );\n  };\n\n  const isToplevelBinding = (binding, isWrappedModule) =>\n    isGlobal(binding) ||\n    !binding.scope.parent ||\n    (isWrappedModule && !binding.scope.parent.parent);\n\n  return {\n    isPlatformNode,\n    isPlatformSelectNode,\n  };\n}\n\nmodule.exports = createInlinePlatformChecks;\n"],"mappings":"AASA;;AAIA,IAAMA,SAAS,GAAG,IAAIC,GAAJ,CAAQ,CAAC,CAAC,aAAD,EAAgB,cAAhB,CAAD,CAAR,CAAlB;;AAEA,SAASC,0BAAT,CAAoCC,CAApC,EAAgE;EAAA,IAAzBC,WAAyB,uEAAX,SAAW;EAC9D,IACEC,YADF,GAMIF,CANJ,CACEE,YADF;EAAA,IAEEC,eAFF,GAMIH,CANJ,CAEEG,eAFF;EAAA,IAGEC,gBAHF,GAMIJ,CANJ,CAGEI,gBAHF;EAAA,IAIEC,kBAJF,GAMIL,CANJ,CAIEK,kBAJF;EAAA,IAKEC,gBALF,GAMIN,CANJ,CAKEM,gBALF;;EAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,KAAP,EAAcC,eAAd;IAAA,OACrBC,YAAY,CAACH,IAAD,EAAOC,KAAP,EAAcC,eAAd,CAAZ,IACAE,iBAAiB,CAACJ,IAAD,EAAOC,KAAP,EAAcC,eAAd,CAFI;EAAA,CAAvB;;EAIA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACL,IAAD,EAAOC,KAAP,EAAcC,eAAd;IAAA,OAC3BI,gBAAgB,CAACN,IAAD,EAAOC,KAAP,EAAcC,eAAd,CAAhB,IACAK,qBAAqB,CAACP,IAAD,EAAOC,KAAP,EAAcC,eAAd,CAFM;EAAA,CAA7B;;EAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,IAAD,EAAOC,KAAP,EAAcC,eAAd;IAAA,OACnBR,YAAY,CAACM,IAAI,CAACQ,QAAN,EAAgB;MAC1BC,IAAI,EAAE;IADoB,CAAhB,CAAZ,IAGAC,gBAAgB,CACdV,IAAI,CAACW,MADS,EAEdV,KAFc,EAGd,CACE;MACEQ,IAAI,EAAE;IADR,CADF,CAHc,EAQdP,eARc,CAJG;EAAA,CAArB;;EAeA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,IAAD,EAAOC,KAAP,EAAcC,eAAd;IAAA,OACxBR,YAAY,CAACM,IAAI,CAACQ,QAAN,EAAgB;MAC1BC,IAAI,EAAE;IADoB,CAAhB,CAAZ,IAGAZ,kBAAkB,CAACG,IAAI,CAACW,MAAN,CAHlB,IAIAjB,YAAY,CAACM,IAAI,CAACW,MAAL,CAAYH,QAAb,EAAuB;MACjCC,IAAI,EAAE;IAD2B,CAAvB,CAJZ,IAOAC,gBAAgB,CACdV,IAAI,CAACW,MAAL,CAAYA,MADE,EAEdV,KAFc,EAGd,CACE;MACEQ,IAAI,EAAE;IADR,CADF,EAIE;MACEA,IAAI,EAAE;IADR,CAJF,CAHc,EAWdP,eAXc,CARQ;EAAA,CAA1B;;EAsBA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACN,IAAD,EAAOC,KAAP,EAAcC,eAAd;IAAA,OACvBL,kBAAkB,CAACG,IAAI,CAACY,MAAN,CAAlB,IACAlB,YAAY,CAACM,IAAI,CAACY,MAAL,CAAYJ,QAAb,EAAuB;MACjCC,IAAI,EAAE;IAD2B,CAAvB,CADZ,IAIAC,gBAAgB,CACdV,IAAI,CAACY,MAAL,CAAYD,MADE,EAEdV,KAFc,EAGd,CACE;MACEQ,IAAI,EAAE;IADR,CADF,CAHc,EAQdP,eARc,CALO;EAAA,CAAzB;;EAgBA,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACP,IAAD,EAAOC,KAAP,EAAcC,eAAd;IAAA,OAC5BL,kBAAkB,CAACG,IAAI,CAACY,MAAN,CAAlB,IACAlB,YAAY,CAACM,IAAI,CAACY,MAAL,CAAYJ,QAAb,EAAuB;MACjCC,IAAI,EAAE;IAD2B,CAAvB,CADZ,IAIAZ,kBAAkB,CAACG,IAAI,CAACY,MAAL,CAAYD,MAAb,CAJlB,IAKAjB,YAAY,CAACM,IAAI,CAACY,MAAL,CAAYD,MAAZ,CAAmBH,QAApB,EAA8B;MACxCC,IAAI,EAAE;IADkC,CAA9B,CALZ,IAQAC,gBAAgB,CACdV,IAAI,CAACY,MAAL,CAAYD,MAAZ,CAAmBA,MADL,EAEdV,KAFc,EAGd,CACE;MACEQ,IAAI,EAAE;IADR,CADF,EAIE;MACEA,IAAI,EAAE;IADR,CAJF,CAHc,EAWdP,eAXc,CATY;EAAA,CAA9B;;EAuBA,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD;IAAA,OAAa,CAACA,OAAd;EAAA,CAAjB;;EAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACf,IAAD,EAAOgB,YAAP,EAAqBf,KAArB;IAAA,OACpBH,gBAAgB,CAACE,IAAD,CAAhB,IACAN,YAAY,CAACM,IAAI,CAACY,MAAN,EAAc;MACxBH,IAAI,EAAEhB;IADkB,CAAd,CADZ,IAIAwB,gBAAgB,CAACjB,IAAI,CAACkB,SAAN,EAAiBF,YAAjB,CALI;EAAA,CAAtB;;EAOA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACnB,IAAD,EAAOC,KAAP,EAAcmB,QAAd;IAAA,OACfA,QAAQ,CAACC,IAAT,CAAc,UAACC,OAAD,EAAa;MACzB,IAAMC,UAAU,GAAGlC,SAAS,CAACmC,GAAV,CAAcF,OAAO,CAACb,IAAtB,KAA+Ba,OAAO,CAACb,IAA1D;MACA,OAAOM,aAAa,CAACf,IAAD,EAAOuB,UAAP,EAAmBtB,KAAnB,CAApB;IACD,CAHD,CADe;EAAA,CAAjB;;EAMA,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACV,IAAD,EAAOC,KAAP,EAAcmB,QAAd,EAAwBlB,eAAxB,EAA4C;IACnE,IAAMuB,UAAU,GAAGL,QAAQ,CAACM,IAAT,CAAc,UAACJ,OAAD;MAAA,OAAa5B,YAAY,CAACM,IAAD,EAAOsB,OAAP,CAAzB;IAAA,CAAd,CAAnB;IACA,OACG,CAAC,CAACG,UAAF,IACCE,iBAAiB,CACf1B,KAAK,CAAC2B,UAAN,CAAiBH,UAAU,CAAChB,IAA5B,CADe,EAEfP,eAFe,CADnB,IAKAiB,QAAQ,CAACnB,IAAD,EAAOC,KAAP,EAAcmB,QAAd,CANV;EAQD,CAVD;;EAYA,IAAMH,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACY,IAAD,EAAOb,YAAP,EAAwB;IAC/C,IAAMM,OAAO,GAAG9B,CAAC,CAACsC,aAAF,CAAgBd,YAAhB,CAAhB;IACA,OACErB,eAAe,CAACkC,IAAI,CAAC,CAAD,CAAL,EAAUP,OAAV,CAAf,IACCzB,kBAAkB,CAACgC,IAAI,CAAC,CAAD,CAAL,CAAlB,IACCjC,gBAAgB,CAACiC,IAAI,CAAC,CAAD,CAAJ,CAAQrB,QAAT,CADjB,IAECb,eAAe,CAACkC,IAAI,CAAC,CAAD,CAAL,EAAUP,OAAV,CAJnB;EAMD,CARD;;EAUA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,OAAD,EAAUZ,eAAV;IAAA,OACxBW,QAAQ,CAACC,OAAD,CAAR,IACA,CAACA,OAAO,CAACb,KAAR,CAAc8B,MADf,IAEC7B,eAAe,IAAI,CAACY,OAAO,CAACb,KAAR,CAAc8B,MAAd,CAAqBA,MAHlB;EAAA,CAA1B;;EAKA,OAAO;IACLhC,cAAc,EAAdA,cADK;IAELM,oBAAoB,EAApBA;EAFK,CAAP;AAID;;AAED2B,MAAM,CAACC,OAAP,GAAiB1C,0BAAjB"},"metadata":{},"sourceType":"script"}