{"ast":null,"code":"var _fs;\n\ntry {\n  _fs = require('graceful-fs');\n} catch (_) {\n  _fs = require('fs');\n}\n\nfunction readFile(file, options, callback) {\n  if (callback == null) {\n    callback = options;\n    options = {};\n  }\n\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n\n  options = options || {};\n  var fs = options.fs || _fs;\n  var shouldThrow = true;\n\n  if ('passParsingErrors' in options) {\n    shouldThrow = options.passParsingErrors;\n  } else if ('throws' in options) {\n    shouldThrow = options.throws;\n  }\n\n  fs.readFile(file, options, function (err, data) {\n    if (err) return callback(err);\n    data = stripBom(data);\n    var obj;\n\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null);\n    } catch (err2) {\n      if (shouldThrow) {\n        err2.message = file + ': ' + err2.message;\n        return callback(err2);\n      } else {\n        return callback(null, null);\n      }\n    }\n\n    callback(null, obj);\n  });\n}\n\nfunction readFileSync(file, options) {\n  options = options || {};\n\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n\n  var fs = options.fs || _fs;\n  var shouldThrow = true;\n\n  if ('passParsingErrors' in options) {\n    shouldThrow = options.passParsingErrors;\n  } else if ('throws' in options) {\n    shouldThrow = options.throws;\n  }\n\n  var content = fs.readFileSync(file, options);\n  content = stripBom(content);\n\n  try {\n    return JSON.parse(content, options.reviver);\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + ': ' + err.message;\n      throw err;\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction writeFile(file, obj, options, callback) {\n  if (callback == null) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  var fs = options.fs || _fs;\n  var spaces = typeof options === 'object' && options !== null ? 'spaces' in options ? options.spaces : this.spaces : this.spaces;\n  var str = '';\n\n  try {\n    str = JSON.stringify(obj, options ? options.replacer : null, spaces) + '\\n';\n  } catch (err) {\n    if (callback) return callback(err, null);\n  }\n\n  fs.writeFile(file, str, options, callback);\n}\n\nfunction writeFileSync(file, obj, options) {\n  options = options || {};\n  var fs = options.fs || _fs;\n  var spaces = typeof options === 'object' && options !== null ? 'spaces' in options ? options.spaces : this.spaces : this.spaces;\n  var str = JSON.stringify(obj, options.replacer, spaces) + '\\n';\n  return fs.writeFileSync(file, str, options);\n}\n\nfunction stripBom(content) {\n  if (Buffer.isBuffer(content)) content = content.toString('utf8');\n  content = content.replace(/^\\uFEFF/, '');\n  return content;\n}\n\nvar jsonfile = {\n  spaces: null,\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n};\nmodule.exports = jsonfile;","map":{"version":3,"names":["_fs","require","_","readFile","file","options","callback","encoding","fs","shouldThrow","passParsingErrors","throws","err","data","stripBom","obj","JSON","parse","reviver","err2","message","readFileSync","content","writeFile","spaces","str","stringify","replacer","writeFileSync","Buffer","isBuffer","toString","replace","jsonfile","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/jsonfile/index.js"],"sourcesContent":["var _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\n\nfunction readFile (file, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  // DO NOT USE 'passParsingErrors' THE NAME WILL CHANGE!!!, use 'throws' instead\n  if ('passParsingErrors' in options) {\n    shouldThrow = options.passParsingErrors\n  } else if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  fs.readFile(file, options, function (err, data) {\n    if (err) return callback(err)\n\n    data = stripBom(data)\n\n    var obj\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null)\n    } catch (err2) {\n      if (shouldThrow) {\n        err2.message = file + ': ' + err2.message\n        return callback(err2)\n      } else {\n        return callback(null, null)\n      }\n    }\n\n    callback(null, obj)\n  })\n}\n\nfunction readFileSync (file, options) {\n  options = options || {}\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  // DO NOT USE 'passParsingErrors' THE NAME WILL CHANGE!!!, use 'throws' instead\n  if ('passParsingErrors' in options) {\n    shouldThrow = options.passParsingErrors\n  } else if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  var content = fs.readFileSync(file, options)\n  content = stripBom(content)\n\n  try {\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + ': ' + err.message\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nfunction writeFile (file, obj, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var spaces = typeof options === 'object' && options !== null\n    ? 'spaces' in options\n    ? options.spaces : this.spaces\n    : this.spaces\n\n  var str = ''\n  try {\n    str = JSON.stringify(obj, options ? options.replacer : null, spaces) + '\\n'\n  } catch (err) {\n    if (callback) return callback(err, null)\n  }\n\n  fs.writeFile(file, str, options, callback)\n}\n\nfunction writeFileSync (file, obj, options) {\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var spaces = typeof options === 'object' && options !== null\n    ? 'spaces' in options\n    ? options.spaces : this.spaces\n    : this.spaces\n\n  var str = JSON.stringify(obj, options.replacer, spaces) + '\\n'\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  content = content.replace(/^\\uFEFF/, '')\n  return content\n}\n\nvar jsonfile = {\n  spaces: null,\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n}\n\nmodule.exports = jsonfile\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}