{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _require = require(\"./defaults\"),\n    DEFAULT_METRO_MINIFIER_PATH = _require.DEFAULT_METRO_MINIFIER_PATH,\n    assetExts = _require.assetExts,\n    assetResolutions = _require.assetResolutions,\n    defaultCreateModuleIdFactory = _require.defaultCreateModuleIdFactory,\n    platforms = _require.platforms,\n    sourceExts = _require.sourceExts;\n\nvar exclusionList = require(\"./exclusionList\");\n\nvar _require2 = require(\"metro-cache\"),\n    FileStore = _require2.FileStore;\n\nvar _require3 = require(\"metro-core\"),\n    Terminal = _require3.Terminal;\n\nvar getMaxWorkers = require(\"metro/src/lib/getMaxWorkers\");\n\nvar TerminalReporter = require(\"metro/src/lib/TerminalReporter\");\n\nvar os = require(\"os\");\n\nvar path = require(\"path\");\n\nvar getDefaultValues = function getDefaultValues(projectRoot) {\n  return {\n    resolver: {\n      assetExts: assetExts,\n      assetResolutions: assetResolutions,\n      platforms: platforms,\n      sourceExts: sourceExts,\n      blockList: exclusionList(),\n      dependencyExtractor: undefined,\n      disableHierarchicalLookup: false,\n      emptyModulePath: require.resolve(\"metro-runtime/src/modules/empty-module.js\"),\n      extraNodeModules: {},\n      hasteImplModulePath: undefined,\n      unstable_hasteMapModulePath: undefined,\n      nodeModulesPaths: [],\n      resolveRequest: null,\n      resolverMainFields: [\"browser\", \"main\"],\n      useWatchman: true\n    },\n    serializer: {\n      polyfillModuleNames: [],\n      getRunModuleStatement: function getRunModuleStatement(moduleId) {\n        return \"__r(\" + JSON.stringify(moduleId) + \");\";\n      },\n      getPolyfills: function getPolyfills() {\n        return [];\n      },\n      postProcessBundleSourcemap: function postProcessBundleSourcemap(_ref) {\n        var code = _ref.code,\n            map = _ref.map,\n            outFileName = _ref.outFileName;\n        return {\n          code: code,\n          map: map\n        };\n      },\n      getModulesRunBeforeMainModule: function getModulesRunBeforeMainModule() {\n        return [];\n      },\n      processModuleFilter: function processModuleFilter(module) {\n        return true;\n      },\n      createModuleIdFactory: defaultCreateModuleIdFactory,\n      experimentalSerializerHook: function experimentalSerializerHook() {},\n      customSerializer: null\n    },\n    server: {\n      useGlobalHotkey: true,\n      port: 8080,\n      enhanceMiddleware: function enhanceMiddleware(middleware) {\n        return middleware;\n      },\n      rewriteRequestUrl: function rewriteRequestUrl(url) {\n        return url;\n      },\n      runInspectorProxy: true,\n      verifyConnections: false,\n      unstable_serverRoot: null\n    },\n    symbolicator: {\n      customizeFrame: function customizeFrame() {}\n    },\n    transformer: {\n      assetPlugins: [],\n      asyncRequireModulePath: \"metro-runtime/src/modules/asyncRequire\",\n      assetRegistryPath: \"missing-asset-registry-path\",\n      babelTransformerPath: \"metro-babel-transformer\",\n      dynamicDepsInPackages: \"throwAtRuntime\",\n      enableBabelRCLookup: true,\n      enableBabelRuntime: true,\n      experimentalImportBundleSupport: false,\n      getTransformOptions: function getTransformOptions() {\n        return _regeneratorRuntime.async(function getTransformOptions$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", {\n                  transform: {\n                    experimentalImportSupport: false,\n                    inlineRequires: false,\n                    unstable_disableES6Transforms: false\n                  },\n                  preloadedModules: false,\n                  ramGroups: []\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      globalPrefix: \"\",\n      hermesParser: false,\n      minifierConfig: {\n        mangle: {\n          toplevel: false\n        },\n        output: {\n          ascii_only: true,\n          quote_style: 3,\n          wrap_iife: true\n        },\n        sourceMap: {\n          includeSources: false\n        },\n        toplevel: false,\n        compress: {\n          reduce_funcs: false\n        }\n      },\n      minifierPath: DEFAULT_METRO_MINIFIER_PATH,\n      optimizationSizeLimit: 150 * 1024,\n      transformVariants: {\n        default: {}\n      },\n      workerPath: \"metro/src/DeltaBundler/Worker\",\n      publicPath: \"/assets\",\n      allowOptionalDependencies: false,\n      unstable_collectDependenciesPath: \"metro/src/ModuleGraph/worker/collectDependencies.js\",\n      unstable_dependencyMapReservedName: null,\n      unstable_disableModuleWrapping: false,\n      unstable_disableNormalizePseudoGlobals: false,\n      unstable_compactOutput: false\n    },\n    cacheStores: [new FileStore({\n      root: path.join(os.tmpdir(), \"metro-cache\")\n    })],\n    cacheVersion: \"1.0\",\n    projectRoot: projectRoot || path.resolve(__dirname, \"../../..\"),\n    stickyWorkers: true,\n    watchFolders: [],\n    transformerPath: require.resolve(\"metro-transform-worker\"),\n    maxWorkers: getMaxWorkers(),\n    resetCache: false,\n    reporter: new TerminalReporter(new Terminal(process.stdout))\n  };\n};\n\nfunction getDefaultConfig(rootPath) {\n  return _regeneratorRuntime.async(function getDefaultConfig$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", getDefaultValues(rootPath));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nmodule.exports = getDefaultConfig;\nmodule.exports.getDefaultValues = getDefaultValues;","map":{"version":3,"names":["require","DEFAULT_METRO_MINIFIER_PATH","assetExts","assetResolutions","defaultCreateModuleIdFactory","platforms","sourceExts","exclusionList","FileStore","Terminal","getMaxWorkers","TerminalReporter","os","path","getDefaultValues","projectRoot","resolver","blockList","dependencyExtractor","undefined","disableHierarchicalLookup","emptyModulePath","resolve","extraNodeModules","hasteImplModulePath","unstable_hasteMapModulePath","nodeModulesPaths","resolveRequest","resolverMainFields","useWatchman","serializer","polyfillModuleNames","getRunModuleStatement","moduleId","JSON","stringify","getPolyfills","postProcessBundleSourcemap","code","map","outFileName","getModulesRunBeforeMainModule","processModuleFilter","module","createModuleIdFactory","experimentalSerializerHook","customSerializer","server","useGlobalHotkey","port","enhanceMiddleware","middleware","rewriteRequestUrl","url","runInspectorProxy","verifyConnections","unstable_serverRoot","symbolicator","customizeFrame","transformer","assetPlugins","asyncRequireModulePath","assetRegistryPath","babelTransformerPath","dynamicDepsInPackages","enableBabelRCLookup","enableBabelRuntime","experimentalImportBundleSupport","getTransformOptions","transform","experimentalImportSupport","inlineRequires","unstable_disableES6Transforms","preloadedModules","ramGroups","globalPrefix","hermesParser","minifierConfig","mangle","toplevel","output","ascii_only","quote_style","wrap_iife","sourceMap","includeSources","compress","reduce_funcs","minifierPath","optimizationSizeLimit","transformVariants","default","workerPath","publicPath","allowOptionalDependencies","unstable_collectDependenciesPath","unstable_dependencyMapReservedName","unstable_disableModuleWrapping","unstable_disableNormalizePseudoGlobals","unstable_compactOutput","cacheStores","root","join","tmpdir","cacheVersion","__dirname","stickyWorkers","watchFolders","transformerPath","maxWorkers","resetCache","reporter","process","stdout","getDefaultConfig","rootPath","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-config/src/defaults/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst {\n  DEFAULT_METRO_MINIFIER_PATH,\n  assetExts,\n  assetResolutions,\n  defaultCreateModuleIdFactory,\n  platforms,\n  sourceExts,\n} = require(\"./defaults\");\n\nconst exclusionList = require(\"./exclusionList\");\n\nconst { FileStore } = require(\"metro-cache\");\n\nconst { Terminal } = require(\"metro-core\");\n\nconst getMaxWorkers = require(\"metro/src/lib/getMaxWorkers\");\n\nconst TerminalReporter = require(\"metro/src/lib/TerminalReporter\");\n\nconst os = require(\"os\");\n\nconst path = require(\"path\");\n\nconst getDefaultValues = (projectRoot) => ({\n  resolver: {\n    assetExts,\n    assetResolutions,\n    platforms,\n    sourceExts,\n    blockList: exclusionList(),\n    dependencyExtractor: undefined,\n    disableHierarchicalLookup: false,\n    emptyModulePath: require.resolve(\n      \"metro-runtime/src/modules/empty-module.js\"\n    ),\n    extraNodeModules: {},\n    hasteImplModulePath: undefined,\n    unstable_hasteMapModulePath: undefined,\n    nodeModulesPaths: [],\n    resolveRequest: null,\n    resolverMainFields: [\"browser\", \"main\"],\n    useWatchman: true,\n  },\n  serializer: {\n    polyfillModuleNames: [],\n    getRunModuleStatement: (moduleId) => `__r(${JSON.stringify(moduleId)});`,\n    getPolyfills: () => [],\n    postProcessBundleSourcemap: ({ code, map, outFileName }) => ({\n      code,\n      map,\n    }),\n    getModulesRunBeforeMainModule: () => [],\n    processModuleFilter: (module) => true,\n    createModuleIdFactory: defaultCreateModuleIdFactory,\n    experimentalSerializerHook: () => {},\n    customSerializer: null,\n  },\n  server: {\n    useGlobalHotkey: true,\n    port: 8080,\n    enhanceMiddleware: (middleware) => middleware,\n    rewriteRequestUrl: (url) => url,\n    runInspectorProxy: true,\n    verifyConnections: false,\n    unstable_serverRoot: null,\n  },\n  symbolicator: {\n    customizeFrame: () => {},\n  },\n  transformer: {\n    assetPlugins: [],\n    asyncRequireModulePath: \"metro-runtime/src/modules/asyncRequire\",\n    assetRegistryPath: \"missing-asset-registry-path\",\n    babelTransformerPath: \"metro-babel-transformer\",\n    dynamicDepsInPackages: \"throwAtRuntime\",\n    enableBabelRCLookup: true,\n    enableBabelRuntime: true,\n    experimentalImportBundleSupport: false,\n    getTransformOptions: async () => ({\n      transform: {\n        experimentalImportSupport: false,\n        inlineRequires: false,\n        unstable_disableES6Transforms: false,\n      },\n      preloadedModules: false,\n      ramGroups: [],\n    }),\n    globalPrefix: \"\",\n    hermesParser: false,\n    minifierConfig: {\n      mangle: {\n        toplevel: false,\n      },\n      output: {\n        ascii_only: true,\n        quote_style: 3,\n        wrap_iife: true,\n      },\n      sourceMap: {\n        includeSources: false,\n      },\n      toplevel: false,\n      compress: {\n        // reduce_funcs inlines single-use functions, which cause perf regressions.\n        reduce_funcs: false,\n      },\n    },\n    minifierPath: DEFAULT_METRO_MINIFIER_PATH,\n    optimizationSizeLimit: 150 * 1024,\n    // 150 KiB.\n    transformVariants: {\n      default: {},\n    },\n    workerPath: \"metro/src/DeltaBundler/Worker\",\n    publicPath: \"/assets\",\n    allowOptionalDependencies: false,\n    unstable_collectDependenciesPath:\n      \"metro/src/ModuleGraph/worker/collectDependencies.js\",\n    unstable_dependencyMapReservedName: null,\n    unstable_disableModuleWrapping: false,\n    unstable_disableNormalizePseudoGlobals: false,\n    unstable_compactOutput: false,\n  },\n  cacheStores: [\n    new FileStore({\n      root: path.join(os.tmpdir(), \"metro-cache\"),\n    }),\n  ],\n  cacheVersion: \"1.0\",\n  // We assume the default project path is two levels up from\n  // node_modules/metro/\n  projectRoot: projectRoot || path.resolve(__dirname, \"../../..\"),\n  stickyWorkers: true,\n  watchFolders: [],\n  transformerPath: require.resolve(\"metro-transform-worker\"),\n  maxWorkers: getMaxWorkers(),\n  resetCache: false,\n  reporter: new TerminalReporter(new Terminal(process.stdout)),\n});\n\nasync function getDefaultConfig(rootPath) {\n  // We can add more logic here to get a sensible default configuration, for\n  // now we just return a stub.\n  return getDefaultValues(rootPath);\n}\n\nmodule.exports = getDefaultConfig;\nmodule.exports.getDefaultValues = getDefaultValues;\n"],"mappings":"AASA;;;;AAEA,eAOIA,OAAO,cAPX;AAAA,IACEC,2BADF,YACEA,2BADF;AAAA,IAEEC,SAFF,YAEEA,SAFF;AAAA,IAGEC,gBAHF,YAGEA,gBAHF;AAAA,IAIEC,4BAJF,YAIEA,4BAJF;AAAA,IAKEC,SALF,YAKEA,SALF;AAAA,IAMEC,UANF,YAMEA,UANF;;AASA,IAAMC,aAAa,GAAGP,OAAO,mBAA7B;;AAEA,gBAAsBA,OAAO,CAAC,aAAD,CAA7B;AAAA,IAAQQ,SAAR,aAAQA,SAAR;;AAEA,gBAAqBR,OAAO,CAAC,YAAD,CAA5B;AAAA,IAAQS,QAAR,aAAQA,QAAR;;AAEA,IAAMC,aAAa,GAAGV,OAAO,CAAC,6BAAD,CAA7B;;AAEA,IAAMW,gBAAgB,GAAGX,OAAO,CAAC,gCAAD,CAAhC;;AAEA,IAAMY,EAAE,GAAGZ,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMa,IAAI,GAAGb,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD;EAAA,OAAkB;IACzCC,QAAQ,EAAE;MACRd,SAAS,EAATA,SADQ;MAERC,gBAAgB,EAAhBA,gBAFQ;MAGRE,SAAS,EAATA,SAHQ;MAIRC,UAAU,EAAVA,UAJQ;MAKRW,SAAS,EAAEV,aAAa,EALhB;MAMRW,mBAAmB,EAAEC,SANb;MAORC,yBAAyB,EAAE,KAPnB;MAQRC,eAAe,EAAErB,OAAO,CAACsB,OAAR,CACf,2CADe,CART;MAWRC,gBAAgB,EAAE,EAXV;MAYRC,mBAAmB,EAAEL,SAZb;MAaRM,2BAA2B,EAAEN,SAbrB;MAcRO,gBAAgB,EAAE,EAdV;MAeRC,cAAc,EAAE,IAfR;MAgBRC,kBAAkB,EAAE,CAAC,SAAD,EAAY,MAAZ,CAhBZ;MAiBRC,WAAW,EAAE;IAjBL,CAD+B;IAoBzCC,UAAU,EAAE;MACVC,mBAAmB,EAAE,EADX;MAEVC,qBAAqB,EAAE,+BAACC,QAAD;QAAA,gBAAqBC,IAAI,CAACC,SAAL,CAAeF,QAAf,CAArB;MAAA,CAFb;MAGVG,YAAY,EAAE;QAAA,OAAM,EAAN;MAAA,CAHJ;MAIVC,0BAA0B,EAAE;QAAA,IAAGC,IAAH,QAAGA,IAAH;QAAA,IAASC,GAAT,QAASA,GAAT;QAAA,IAAcC,WAAd,QAAcA,WAAd;QAAA,OAAiC;UAC3DF,IAAI,EAAJA,IAD2D;UAE3DC,GAAG,EAAHA;QAF2D,CAAjC;MAAA,CAJlB;MAQVE,6BAA6B,EAAE;QAAA,OAAM,EAAN;MAAA,CARrB;MASVC,mBAAmB,EAAE,6BAACC,MAAD;QAAA,OAAY,IAAZ;MAAA,CATX;MAUVC,qBAAqB,EAAExC,4BAVb;MAWVyC,0BAA0B,EAAE,sCAAM,CAAE,CAX1B;MAYVC,gBAAgB,EAAE;IAZR,CApB6B;IAkCzCC,MAAM,EAAE;MACNC,eAAe,EAAE,IADX;MAENC,IAAI,EAAE,IAFA;MAGNC,iBAAiB,EAAE,2BAACC,UAAD;QAAA,OAAgBA,UAAhB;MAAA,CAHb;MAINC,iBAAiB,EAAE,2BAACC,GAAD;QAAA,OAASA,GAAT;MAAA,CAJb;MAKNC,iBAAiB,EAAE,IALb;MAMNC,iBAAiB,EAAE,KANb;MAONC,mBAAmB,EAAE;IAPf,CAlCiC;IA2CzCC,YAAY,EAAE;MACZC,cAAc,EAAE,0BAAM,CAAE;IADZ,CA3C2B;IA8CzCC,WAAW,EAAE;MACXC,YAAY,EAAE,EADH;MAEXC,sBAAsB,EAAE,wCAFb;MAGXC,iBAAiB,EAAE,6BAHR;MAIXC,oBAAoB,EAAE,yBAJX;MAKXC,qBAAqB,EAAE,gBALZ;MAMXC,mBAAmB,EAAE,IANV;MAOXC,kBAAkB,EAAE,IAPT;MAQXC,+BAA+B,EAAE,KARtB;MASXC,mBAAmB,EAAE;QAAA;UAAA;YAAA;cAAA;gBAAA,iCAAa;kBAChCC,SAAS,EAAE;oBACTC,yBAAyB,EAAE,KADlB;oBAETC,cAAc,EAAE,KAFP;oBAGTC,6BAA6B,EAAE;kBAHtB,CADqB;kBAMhCC,gBAAgB,EAAE,KANc;kBAOhCC,SAAS,EAAE;gBAPqB,CAAb;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CATV;MAkBXC,YAAY,EAAE,EAlBH;MAmBXC,YAAY,EAAE,KAnBH;MAoBXC,cAAc,EAAE;QACdC,MAAM,EAAE;UACNC,QAAQ,EAAE;QADJ,CADM;QAIdC,MAAM,EAAE;UACNC,UAAU,EAAE,IADN;UAENC,WAAW,EAAE,CAFP;UAGNC,SAAS,EAAE;QAHL,CAJM;QASdC,SAAS,EAAE;UACTC,cAAc,EAAE;QADP,CATG;QAYdN,QAAQ,EAAE,KAZI;QAadO,QAAQ,EAAE;UAERC,YAAY,EAAE;QAFN;MAbI,CApBL;MAsCXC,YAAY,EAAEvF,2BAtCH;MAuCXwF,qBAAqB,EAAE,MAAM,IAvClB;MAyCXC,iBAAiB,EAAE;QACjBC,OAAO,EAAE;MADQ,CAzCR;MA4CXC,UAAU,EAAE,+BA5CD;MA6CXC,UAAU,EAAE,SA7CD;MA8CXC,yBAAyB,EAAE,KA9ChB;MA+CXC,gCAAgC,EAC9B,qDAhDS;MAiDXC,kCAAkC,EAAE,IAjDzB;MAkDXC,8BAA8B,EAAE,KAlDrB;MAmDXC,sCAAsC,EAAE,KAnD7B;MAoDXC,sBAAsB,EAAE;IApDb,CA9C4B;IAoGzCC,WAAW,EAAE,CACX,IAAI5F,SAAJ,CAAc;MACZ6F,IAAI,EAAExF,IAAI,CAACyF,IAAL,CAAU1F,EAAE,CAAC2F,MAAH,EAAV,EAAuB,aAAvB;IADM,CAAd,CADW,CApG4B;IAyGzCC,YAAY,EAAE,KAzG2B;IA4GzCzF,WAAW,EAAEA,WAAW,IAAIF,IAAI,CAACS,OAAL,CAAamF,SAAb,EAAwB,UAAxB,CA5Ga;IA6GzCC,aAAa,EAAE,IA7G0B;IA8GzCC,YAAY,EAAE,EA9G2B;IA+GzCC,eAAe,EAAE5G,OAAO,CAACsB,OAAR,CAAgB,wBAAhB,CA/GwB;IAgHzCuF,UAAU,EAAEnG,aAAa,EAhHgB;IAiHzCoG,UAAU,EAAE,KAjH6B;IAkHzCC,QAAQ,EAAE,IAAIpG,gBAAJ,CAAqB,IAAIF,QAAJ,CAAauG,OAAO,CAACC,MAArB,CAArB;EAlH+B,CAAlB;AAAA,CAAzB;;AAqHA,SAAeC,gBAAf,CAAgCC,QAAhC;EAAA;IAAA;MAAA;QAAA;UAAA,kCAGSrG,gBAAgB,CAACqG,QAAD,CAHzB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAMAxE,MAAM,CAACyE,OAAP,GAAiBF,gBAAjB;AACAvE,MAAM,CAACyE,OAAP,CAAetG,gBAAf,GAAkCA,gBAAlC"},"metadata":{},"sourceType":"script"}