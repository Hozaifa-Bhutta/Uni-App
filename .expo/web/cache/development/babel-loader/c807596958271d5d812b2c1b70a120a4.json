{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar getDefaultConfig = require(\"./defaults\");\n\nvar validConfig = require(\"./defaults/validConfig\");\n\nvar cosmiconfig = require(\"cosmiconfig\");\n\nvar fs = require(\"fs\");\n\nvar _require = require(\"jest-validate\"),\n    validate = _require.validate;\n\nvar MetroCache = require(\"metro-cache\");\n\nvar path = require(\"path\");\n\nvar _require2 = require(\"path\"),\n    dirname = _require2.dirname,\n    join = _require2.join;\n\nfunction overrideArgument(arg) {\n  if (arg == null) {\n    return arg;\n  }\n\n  if (Array.isArray(arg)) {\n    return arg[arg.length - 1];\n  }\n\n  return arg;\n}\n\nvar explorer = cosmiconfig(\"metro\", {\n  searchPlaces: [\"metro.config.js\", \"metro.config.json\", \"package.json\"],\n  loaders: {\n    \".json\": cosmiconfig.loadJson,\n    \".yaml\": cosmiconfig.loadYaml,\n    \".yml\": cosmiconfig.loadYaml,\n    \".js\": cosmiconfig.loadJs,\n    \".es6\": cosmiconfig.loadJs,\n    noExt: cosmiconfig.loadYaml\n  }\n});\n\nvar isFile = function isFile(filePath) {\n  return fs.existsSync(filePath) && !fs.lstatSync(filePath).isDirectory();\n};\n\nvar resolve = function resolve(filePath) {\n  try {\n    return require.resolve(filePath);\n  } catch (error) {\n    if (path.isAbsolute(filePath) || error.code !== \"MODULE_NOT_FOUND\") {\n      throw error;\n    }\n  }\n\n  var possiblePath = path.resolve(process.cwd(), filePath);\n  return isFile(possiblePath) ? possiblePath : filePath;\n};\n\nfunction resolveConfig(filePath, cwd) {\n  var result;\n  return _regeneratorRuntime.async(function resolveConfig$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!filePath) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", explorer.load(resolve(filePath)));\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(explorer.search(cwd));\n\n        case 4:\n          result = _context.sent;\n\n          if (!(result == null)) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            isEmpty: true,\n            filepath: join(cwd || process.cwd(), \"metro.config.stub.js\"),\n            config: {}\n          });\n\n        case 7:\n          return _context.abrupt(\"return\", result);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction mergeConfig(defaultConfig) {\n  for (var _len = arguments.length, configs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    configs[_key - 1] = arguments[_key];\n  }\n\n  return configs.reduce(function (totalConfig, nextConfig) {\n    return _objectSpread(_objectSpread(_objectSpread({}, totalConfig), nextConfig), {}, {\n      cacheStores: nextConfig.cacheStores != null ? typeof nextConfig.cacheStores === \"function\" ? nextConfig.cacheStores(MetroCache) : nextConfig.cacheStores : totalConfig.cacheStores,\n      resolver: _objectSpread(_objectSpread(_objectSpread({}, totalConfig.resolver), nextConfig.resolver || {}), {}, {\n        dependencyExtractor: nextConfig.resolver && nextConfig.resolver.dependencyExtractor != null ? resolve(nextConfig.resolver.dependencyExtractor) : totalConfig.resolver.dependencyExtractor,\n        hasteImplModulePath: nextConfig.resolver && nextConfig.resolver.hasteImplModulePath != null ? resolve(nextConfig.resolver.hasteImplModulePath) : totalConfig.resolver.hasteImplModulePath\n      }),\n      serializer: _objectSpread(_objectSpread({}, totalConfig.serializer), nextConfig.serializer || {}),\n      transformer: _objectSpread(_objectSpread(_objectSpread({}, totalConfig.transformer), nextConfig.transformer || {}), {}, {\n        babelTransformerPath: nextConfig.transformer && nextConfig.transformer.babelTransformerPath != null ? resolve(nextConfig.transformer.babelTransformerPath) : totalConfig.transformer.babelTransformerPath\n      }),\n      server: _objectSpread(_objectSpread({}, totalConfig.server), nextConfig.server || {}),\n      symbolicator: _objectSpread(_objectSpread({}, totalConfig.symbolicator), nextConfig.symbolicator || {})\n    });\n  }, defaultConfig);\n}\n\nfunction loadMetroConfigFromDisk(path, cwd, defaultConfigOverrides) {\n  var resolvedConfigResults, configModule, filepath, rootPath, defaults, defaultConfig, resultedConfig;\n  return _regeneratorRuntime.async(function loadMetroConfigFromDisk$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(resolveConfig(path, cwd));\n\n        case 2:\n          resolvedConfigResults = _context2.sent;\n          configModule = resolvedConfigResults.config, filepath = resolvedConfigResults.filepath;\n          rootPath = dirname(filepath);\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(getDefaultConfig(rootPath));\n\n        case 7:\n          defaults = _context2.sent;\n          defaultConfig = mergeConfig(defaults, defaultConfigOverrides);\n\n          if (!(typeof configModule === \"function\")) {\n            _context2.next = 14;\n            break;\n          }\n\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(configModule(defaultConfig));\n\n        case 12:\n          resultedConfig = _context2.sent;\n          return _context2.abrupt(\"return\", mergeConfig(defaultConfig, resultedConfig));\n\n        case 14:\n          return _context2.abrupt(\"return\", mergeConfig(defaultConfig, configModule));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction overrideConfigWithArguments(config, argv) {\n  var output = {\n    resolver: {},\n    serializer: {},\n    server: {},\n    transformer: {}\n  };\n\n  if (argv.port != null) {\n    output.server.port = Number(argv.port);\n  }\n\n  if (argv.runInspectorProxy != null) {\n    output.server.runInspectorProxy = Boolean(argv.runInspectorProxy);\n  }\n\n  if (argv.projectRoot != null) {\n    output.projectRoot = argv.projectRoot;\n  }\n\n  if (argv.watchFolders != null) {\n    output.watchFolders = argv.watchFolders;\n  }\n\n  if (argv.assetExts != null) {\n    output.resolver.assetExts = argv.assetExts;\n  }\n\n  if (argv.sourceExts != null) {\n    output.resolver.sourceExts = argv.sourceExts;\n  }\n\n  if (argv.platforms != null) {\n    output.resolver.platforms = argv.platforms;\n  }\n\n  if (argv[\"max-workers\"] != null || argv.maxWorkers != null) {\n    output.maxWorkers = Number(argv[\"max-workers\"] || argv.maxWorkers);\n  }\n\n  if (argv.transformer != null) {\n    output.transformer.babelTransformerPath = argv.transformer;\n  }\n\n  if (argv[\"reset-cache\"] != null) {\n    output.resetCache = argv[\"reset-cache\"];\n  }\n\n  if (argv.resetCache != null) {\n    output.resetCache = argv.resetCache;\n  }\n\n  if (argv.verbose === false) {\n    output.reporter = {\n      update: function update() {}\n    };\n  }\n\n  return mergeConfig(config, output);\n}\n\nfunction loadConfig() {\n  var argv,\n      defaultConfigOverrides,\n      configuration,\n      configWithArgs,\n      overriddenConfig,\n      sourceExts,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function loadConfig$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          argv = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n          defaultConfigOverrides = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n          argv.config = overrideArgument(argv.config);\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(loadMetroConfigFromDisk(argv.config, argv.cwd, defaultConfigOverrides));\n\n        case 5:\n          configuration = _context3.sent;\n          _context3.t0 = validate;\n          _context3.t1 = configuration;\n          _context3.next = 10;\n          return _regeneratorRuntime.awrap(validConfig());\n\n        case 10:\n          _context3.t2 = _context3.sent;\n          _context3.t3 = [\"reporter\", \"resolver\", \"transformer\"];\n          _context3.t4 = {\n            blacklistRE: function blacklistRE() {\n              return \"Warning: Metro config option `blacklistRE` is deprecated.\\n         Please use `blockList` instead.\";\n            }\n          };\n          _context3.t5 = {\n            exampleConfig: _context3.t2,\n            recursiveBlacklist: _context3.t3,\n            deprecatedConfig: _context3.t4\n          };\n          (0, _context3.t0)(_context3.t1, _context3.t5);\n          configWithArgs = overrideConfigWithArguments(configuration, argv);\n          overriddenConfig = {};\n          sourceExts = configWithArgs.resolver.sourceExts;\n\n          if (!configWithArgs.resolver.sourceExts.includes(\"json\")) {\n            overriddenConfig.resolver = {\n              sourceExts: [].concat(_toConsumableArray(sourceExts), [\"json\"])\n            };\n          }\n\n          overriddenConfig.watchFolders = [configWithArgs.projectRoot].concat(_toConsumableArray(configWithArgs.watchFolders));\n          return _context3.abrupt(\"return\", mergeConfig(configWithArgs, overriddenConfig));\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nmodule.exports = {\n  loadConfig: loadConfig,\n  resolveConfig: resolveConfig,\n  mergeConfig: mergeConfig\n};","map":{"version":3,"names":["getDefaultConfig","require","validConfig","cosmiconfig","fs","validate","MetroCache","path","dirname","join","overrideArgument","arg","Array","isArray","length","explorer","searchPlaces","loaders","loadJson","loadYaml","loadJs","noExt","isFile","filePath","existsSync","lstatSync","isDirectory","resolve","error","isAbsolute","code","possiblePath","process","cwd","resolveConfig","load","search","result","isEmpty","filepath","config","mergeConfig","defaultConfig","configs","reduce","totalConfig","nextConfig","cacheStores","resolver","dependencyExtractor","hasteImplModulePath","serializer","transformer","babelTransformerPath","server","symbolicator","loadMetroConfigFromDisk","defaultConfigOverrides","resolvedConfigResults","configModule","rootPath","defaults","resultedConfig","overrideConfigWithArguments","argv","output","port","Number","runInspectorProxy","Boolean","projectRoot","watchFolders","assetExts","sourceExts","platforms","maxWorkers","resetCache","verbose","reporter","update","loadConfig","configuration","blacklistRE","exampleConfig","recursiveBlacklist","deprecatedConfig","configWithArgs","overriddenConfig","includes","module","exports"],"sources":["/Users/hozaifa/Documents/Uni App Github/node_modules/@react-native-community/cli-plugin-metro/node_modules/metro-config/src/loadConfig.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst getDefaultConfig = require(\"./defaults\");\n\nconst validConfig = require(\"./defaults/validConfig\");\n\nconst cosmiconfig = require(\"cosmiconfig\");\n\nconst fs = require(\"fs\");\n\nconst { validate } = require(\"jest-validate\");\n\nconst MetroCache = require(\"metro-cache\");\n\nconst path = require(\"path\");\n\nconst { dirname, join } = require(\"path\");\n\n/**\n * Takes the last argument if multiple of the same argument are given\n */\nfunction overrideArgument(arg) {\n  if (arg == null) {\n    return arg;\n  }\n\n  if (Array.isArray(arg)) {\n    // $FlowFixMe[incompatible-return]\n    return arg[arg.length - 1];\n  }\n\n  return arg;\n}\n\nconst explorer = cosmiconfig(\"metro\", {\n  searchPlaces: [\"metro.config.js\", \"metro.config.json\", \"package.json\"],\n  loaders: {\n    \".json\": cosmiconfig.loadJson,\n    \".yaml\": cosmiconfig.loadYaml,\n    \".yml\": cosmiconfig.loadYaml,\n    \".js\": cosmiconfig.loadJs,\n    \".es6\": cosmiconfig.loadJs,\n    noExt: cosmiconfig.loadYaml,\n  },\n});\n\nconst isFile = (filePath) =>\n  fs.existsSync(filePath) && !fs.lstatSync(filePath).isDirectory();\n\nconst resolve = (filePath) => {\n  // Attempt to resolve the path with the node resolution algorithm but fall back to resolving\n  // the file relative to the current working directory if the input is not an absolute path.\n  try {\n    return require.resolve(filePath);\n  } catch (error) {\n    if (path.isAbsolute(filePath) || error.code !== \"MODULE_NOT_FOUND\") {\n      throw error;\n    }\n  }\n\n  const possiblePath = path.resolve(process.cwd(), filePath);\n  return isFile(possiblePath) ? possiblePath : filePath;\n};\n\nasync function resolveConfig(filePath, cwd) {\n  if (filePath) {\n    return explorer.load(resolve(filePath));\n  }\n\n  const result = await explorer.search(cwd);\n\n  if (result == null) {\n    // No config file found, return a default\n    return {\n      isEmpty: true,\n      filepath: join(cwd || process.cwd(), \"metro.config.stub.js\"),\n      config: {},\n    };\n  }\n\n  return result;\n}\n\nfunction mergeConfig(defaultConfig, ...configs) {\n  // If the file is a plain object we merge the file with the default config,\n  // for the function we don't do this since that's the responsibility of the user\n  return configs.reduce(\n    (totalConfig, nextConfig) => ({\n      ...totalConfig,\n      ...nextConfig,\n      cacheStores:\n        nextConfig.cacheStores != null\n          ? typeof nextConfig.cacheStores === \"function\"\n            ? nextConfig.cacheStores(MetroCache)\n            : nextConfig.cacheStores\n          : totalConfig.cacheStores,\n      resolver: {\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        ...totalConfig.resolver,\n        ...(nextConfig.resolver || {}),\n        dependencyExtractor:\n          nextConfig.resolver && nextConfig.resolver.dependencyExtractor != null\n            ? resolve(nextConfig.resolver.dependencyExtractor)\n            : totalConfig.resolver.dependencyExtractor,\n        hasteImplModulePath:\n          nextConfig.resolver && nextConfig.resolver.hasteImplModulePath != null\n            ? resolve(nextConfig.resolver.hasteImplModulePath)\n            : totalConfig.resolver.hasteImplModulePath,\n      },\n      serializer: {\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        ...totalConfig.serializer,\n        ...(nextConfig.serializer || {}),\n      },\n      transformer: {\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        ...totalConfig.transformer,\n        ...(nextConfig.transformer || {}),\n        babelTransformerPath:\n          nextConfig.transformer &&\n          nextConfig.transformer.babelTransformerPath != null\n            ? resolve(nextConfig.transformer.babelTransformerPath)\n            : totalConfig.transformer.babelTransformerPath,\n      },\n      server: {\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        ...totalConfig.server,\n        ...(nextConfig.server || {}),\n      },\n      symbolicator: {\n        /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n         * an error found when Flow v0.111 was deployed. To see the error,\n         * delete this comment and run Flow. */\n        ...totalConfig.symbolicator,\n        ...(nextConfig.symbolicator || {}),\n      },\n    }),\n    defaultConfig\n  );\n}\n\nasync function loadMetroConfigFromDisk(path, cwd, defaultConfigOverrides) {\n  const resolvedConfigResults = await resolveConfig(path, cwd);\n  const { config: configModule, filepath } = resolvedConfigResults;\n  const rootPath = dirname(filepath);\n  const defaults = await getDefaultConfig(rootPath);\n  const defaultConfig = mergeConfig(defaults, defaultConfigOverrides);\n\n  if (typeof configModule === \"function\") {\n    // Get a default configuration based on what we know, which we in turn can pass\n    // to the function.\n    const resultedConfig = await configModule(defaultConfig);\n    return mergeConfig(defaultConfig, resultedConfig);\n  }\n\n  return mergeConfig(defaultConfig, configModule);\n}\n\nfunction overrideConfigWithArguments(config, argv) {\n  // We override some config arguments here with the argv\n  const output = {\n    resolver: {},\n    serializer: {},\n    server: {},\n    transformer: {},\n  };\n\n  if (argv.port != null) {\n    output.server.port = Number(argv.port);\n  }\n\n  if (argv.runInspectorProxy != null) {\n    output.server.runInspectorProxy = Boolean(argv.runInspectorProxy);\n  }\n\n  if (argv.projectRoot != null) {\n    output.projectRoot = argv.projectRoot;\n  }\n\n  if (argv.watchFolders != null) {\n    output.watchFolders = argv.watchFolders;\n  }\n\n  if (argv.assetExts != null) {\n    output.resolver.assetExts = argv.assetExts;\n  }\n\n  if (argv.sourceExts != null) {\n    output.resolver.sourceExts = argv.sourceExts;\n  }\n\n  if (argv.platforms != null) {\n    output.resolver.platforms = argv.platforms;\n  }\n\n  if (argv[\"max-workers\"] != null || argv.maxWorkers != null) {\n    output.maxWorkers = Number(argv[\"max-workers\"] || argv.maxWorkers);\n  }\n\n  if (argv.transformer != null) {\n    output.transformer.babelTransformerPath = argv.transformer;\n  }\n\n  if (argv[\"reset-cache\"] != null) {\n    output.resetCache = argv[\"reset-cache\"];\n  }\n\n  if (argv.resetCache != null) {\n    output.resetCache = argv.resetCache;\n  }\n\n  if (argv.verbose === false) {\n    output.reporter = {\n      update: () => {},\n    }; // TODO: Ask if this is the way to go\n  }\n\n  return mergeConfig(config, output);\n}\n/**\n * Load the metro configuration from disk\n * @param  {object} argv                    Arguments coming from the CLI, can be empty\n * @param  {object} defaultConfigOverrides  A configuration that can override the default config\n * @return {object}                         Configuration returned\n */\n\nasync function loadConfig(argv = {}, defaultConfigOverrides = {}) {\n  argv.config = overrideArgument(argv.config);\n  const configuration = await loadMetroConfigFromDisk(\n    argv.config,\n    argv.cwd,\n    defaultConfigOverrides\n  );\n  validate(configuration, {\n    exampleConfig: await validConfig(),\n    recursiveBlacklist: [\"reporter\", \"resolver\", \"transformer\"],\n    deprecatedConfig: {\n      blacklistRE:\n        () => `Warning: Metro config option \\`blacklistRE\\` is deprecated.\n         Please use \\`blockList\\` instead.`,\n    },\n  }); // Override the configuration with cli parameters\n\n  const configWithArgs = overrideConfigWithArguments(configuration, argv);\n  const overriddenConfig = {}; // The resolver breaks if \"json\" is missing from `resolver.sourceExts`\n\n  const sourceExts = configWithArgs.resolver.sourceExts;\n\n  if (!configWithArgs.resolver.sourceExts.includes(\"json\")) {\n    overriddenConfig.resolver = {\n      sourceExts: [...sourceExts, \"json\"],\n    };\n  }\n\n  overriddenConfig.watchFolders = [\n    configWithArgs.projectRoot,\n    ...configWithArgs.watchFolders,\n  ]; // Set the watchfolders to include the projectRoot, as Metro assumes that is\n  // the case\n\n  return mergeConfig(configWithArgs, overriddenConfig);\n}\n\nmodule.exports = {\n  loadConfig,\n  resolveConfig,\n  mergeConfig,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}