{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.install = install;\n\nvar _brewInstall = require(\"./brewInstall\");\n\nvar _common = require(\"./healthchecks/common\");\n\nfunction install(_ref) {\n  var pkg, label, url, loader;\n  return _regeneratorRuntime.async(function install$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pkg = _ref.pkg, label = _ref.label, url = _ref.url, loader = _ref.loader;\n          _context.prev = 1;\n          _context.t0 = process.platform;\n          _context.next = _context.t0 === 'darwin' ? 5 : 8;\n          break;\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap((0, _brewInstall.brewInstall)({\n            pkg: pkg,\n            label: label,\n            loader: loader\n          }));\n\n        case 7:\n          return _context.abrupt(\"break\", 9);\n\n        case 8:\n          throw new Error('Not implemented yet');\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t1 = _context[\"catch\"](1);\n          loader.fail();\n          (0, _common.logManualInstallation)({\n            healthcheck: label,\n            url: url\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 11]], Promise);\n}","map":{"version":3,"sources":["../../src/tools/install.ts"],"names":["loader","process","pkg","label","healthcheck","url"],"mappings":";;;;;;;;;AACA,IAAA,YAAA,GAAA,OAAA,iBAAA;;AACA,IAAA,OAAA,GAAA,OAAA,yBAAA;;AASA,SAAA,OAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UAAuB,GAAvB,QAAuB,GAAvB,EAAuB,KAAvB,QAAuB,KAAvB,EAAuB,GAAvB,QAAuB,GAAvB,EAAyCA,MAAzC,QAAyCA,MAAzC;UAAA;UAAA,cAEYC,OAAO,CAAf,QAFJ;UAAA,gCAGM,QAHN;UAAA;;QAAA;UAAA;UAAA,iCAIc,CAAA,GAAA,YAAA,CAAA,WAAA,EAAY;YAACC,GAAD,EAACA,GAAD;YAAMC,KAAN,EAAMA,KAAN;YAAaH,MAAAA,EAAAA;UAAb,CAAZ,CAJd;;QAAA;UAAA;;QAAA;UAAA,MAOc,IAAA,KAAA,CAAN,qBAAM,CAPd;;QAAA;UAAA;UAAA;;QAAA;UAAA;UAAA;UAUIA,MAAM,CAANA,IAAAA;UAEA,CAAA,GAAA,OAAA,CAAA,qBAAA,EAAsB;YACpBI,WAAW,EADS,KAAA;YAEpBC,GAAAA,EAAAA;UAFoB,CAAtB;;QAZJ;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA","sourcesContent":["import {Loader} from '../types';\nimport {brewInstall} from './brewInstall';\nimport {logManualInstallation} from './healthchecks/common';\n\ntype InstallArgs = {\n  pkg: string;\n  label: string;\n  url: string;\n  loader: Loader;\n};\n\nasync function install({pkg, label, url, loader}: InstallArgs) {\n  try {\n    switch (process.platform) {\n      case 'darwin':\n        await brewInstall({pkg, label, loader});\n        break;\n      default:\n        throw new Error('Not implemented yet');\n    }\n  } catch (_error) {\n    loader.fail();\n\n    logManualInstallation({\n      healthcheck: label,\n      url,\n    });\n  }\n}\n\nexport {install};\n"]},"metadata":{},"sourceType":"script"}